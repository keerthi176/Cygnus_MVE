/*******************************************************************************
*
* E M B E D D E D   W I Z A R D   P R O J E C T
*
*                                                Copyright (c) TARA Systems GmbH
*                                    written by Paul Banach and Manfred Schweyer
*
********************************************************************************
*
* This file was generated automatically by Embedded Wizard Studio.
*
* Please do not make any modifications of this file! The modifications are lost
* when the file is generated again by Embedded Wizard Studio!
*
* The template of this heading text can be found in the file 'head.ewt' in the
* directory 'Platforms' of your Embedded Wizard installation directory. If you
* wish to adapt this text, please copy the template file 'head.ewt' into your
* project directory and edit the copy only. Please avoid any modifications of
* the original template file!
*
* Version  : 9.00
* Profile  : STM32F746
* Platform : STM.STM32.RGB565
*
*******************************************************************************/

#include "ewlocale.h"
#include "_CoreSimpleTouchHandler.h"
#include "_CoreView.h"
#include "_EffectsInt32Effect.h"
#include "_FlatActionButton.h"
#include "_FlatCheckBox.h"
#include "_FlatHorzBar.h"
#include "_FlatIconButton.h"
#include "_FlatRadioButton.h"
#include "_ResourcesBitmap.h"
#include "_ResourcesFont.h"
#include "_ViewsFrame.h"
#include "_ViewsImage.h"
#include "_ViewsRectangle.h"
#include "_ViewsText.h"
#include "Core.h"
#include "Effects.h"
#include "Flat.h"
#include "Views.h"

/* Compressed strings for the language 'Default'. */
static const unsigned int _StringsDefault0[] =
{
  0x00000058, /* ratio 86.36 % */
  0xB8001500, 0x00000452, 0x00EA0021, 0xC010B3A0, 0x0C6E001B, 0xB0306002, 0x00218020,
  0x032800D0, 0x35800C60, 0xC0021D07, 0x45413123, 0x84005283, 0x40064001, 0x0D06911A,
  0x0350049C, 0x05890C00, 0xC890BA66, 0x00002033, 0x00000000
};

/* Constant values used in this 'C' module only. */
static const XRect _Const0000 = {{ 0, 0 }, { 120, 30 }};
static const XPoint _Const0001 = { 0, 30 };
static const XPoint _Const0002 = { 120, 30 };
static const XPoint _Const0003 = { 120, 0 };
static const XPoint _Const0004 = { 0, 0 };
static const XStringRes _Const0005 = { _StringsDefault0, 0x0003 };
static const XRect _Const0006 = {{ 0, 0 }, { 140, 30 }};
static const XPoint _Const0007 = { 140, 30 };
static const XPoint _Const0008 = { 140, 0 };
static const XRect _Const0009 = {{ 0, 0 }, { 30, 30 }};
static const XRect _Const000A = {{ 40, 0 }, { 140, 30 }};
static const XPoint _Const000B = { 139, 30 };
static const XPoint _Const000C = { 139, 0 };
static const XRect _Const000D = {{ 40, 0 }, { 139, 30 }};
static const XStringRes _Const000E = { _StringsDefault0, 0x000D };
static const XRect _Const000F = {{ 10, 5 }, { 30, 25 }};
static const XStringRes _Const0010 = { _StringsDefault0, 0x0019 };
static const XRect _Const0011 = {{ 0, 0 }, { 160, 50 }};
static const XRect _Const0012 = {{ 0, 0 }, { 160, 20 }};
static const XRect _Const0013 = {{ 0, 0 }, { 90, 20 }};
static const XRect _Const0014 = {{ 80, 20 }, { 98, 40 }};
static const XStringRes _Const0015 = { _StringsDefault0, 0x0022 };
static const XStringRes _Const0016 = { _StringsDefault0, 0x0028 };

/* Color constant representing the main theme color of the widget kit. If you want 
   to change this color within your project, just create a variant of this color 
   constant and select a new color value that meets your design ideas. */
const XColor FlatColorOfTheme = { 0x7F, 0xBF, 0x00, 0xFF };

/* Color constant for all touchable items. If you want to change this color within 
   your project, just create a variant of this color constant and select a new color 
   value that meets your design ideas. */
const XColor FlatColorOfTouch = { 0xFF, 0xFF, 0xFF, 0xFF };

/* Color constant for all background items. If you want to change this color within 
   your project, just create a variant of this color constant and select a new color 
   value that meets your design ideas. */
const XColor FlatColorOfBody = { 0x50, 0x53, 0x5F, 0xFF };

/* Color constant for all disabled items. If you want to change this color within 
   your project, just create a variant of this color constant and select a new color 
   value that meets your design ideas. */
const XColor FlatColorOfDisabled = { 0x6B, 0x6F, 0x80, 0xFF };

/* Font resources used for the different widgets. If you want to change the fonts 
   within your project, just create a variant of these font resources and define 
   the attributes of the font resources according your design ideas. */
EW_DEFINE_FONT_RES( FlatFontS, 16, 4, 0, 16, 0x0001, 0x00C0 )
  EW_GLYPH( 0x0001, 1, -12, 6, 12, 8, 0x00000000 ),
  EW_GLYPH( 0x0020, 0, 0, 0, 0, 4, 0x000000F6 ),                /* ' ' */
  EW_GLYPH( 0x0021, 1, -12, 3, 12, 4, 0x000000F6 ),             /* '!' */
  EW_GLYPH( 0x0022, 1, -13, 4, 4, 5, 0x0000014B ),              /* '"' */
  EW_GLYPH( 0x0023, 1, -12, 10, 12, 10, 0x0000017C ),           /* '#' */
  EW_GLYPH( 0x0024, 0, -14, 9, 16, 10, 0x0000031D ),            /* '$' */
  EW_GLYPH( 0x0025, 0, -12, 12, 12, 12, 0x000004FA ),           /* '%' */
  EW_GLYPH( 0x0026, 0, -12, 11, 12, 11, 0x000006C3 ),           /* '&' */
  EW_GLYPH( 0x0027, 0, -13, 3, 4, 3, 0x00000889 ),              /* ''' */
  EW_GLYPH( 0x0028, 1, -14, 5, 18, 6, 0x000008A5 ),             /* '(' */
  EW_GLYPH( 0x0029, 0, -14, 5, 18, 6, 0x000009AD ),             /* ')' */
  EW_GLYPH( 0x002A, 0, -12, 8, 7, 7, 0x00000A9D ),              /* '*' */
  EW_GLYPH( 0x002B, 0, -10, 9, 9, 10, 0x00000B5C ),             /* '+' */
  EW_GLYPH( 0x002C, 0, -2, 3, 4, 3, 0x00000C05 ),               /* ',' */
  EW_GLYPH( 0x002D, 0, -6, 5, 1, 5, 0x00000C32 ),               /* '-' */
  EW_GLYPH( 0x002E, 1, -2, 3, 2, 4, 0x00000C4E ),               /* '.' */
  EW_GLYPH( 0x002F, 0, -12, 7, 13, 7, 0x00000C5F ),             /* '/' */
  EW_GLYPH( 0x0030, 1, -12, 8, 12, 10, 0x00000D42 ),            /* '0' */
  EW_GLYPH( 0x0031, 1, -12, 5, 12, 10, 0x00000E63 ),            /* '1' */
  EW_GLYPH( 0x0032, 0, -12, 9, 12, 10, 0x00000ED9 ),            /* '2' */
  EW_GLYPH( 0x0033, 0, -12, 9, 12, 10, 0x00001038 ),            /* '3' */
  EW_GLYPH( 0x0034, 0, -12, 10, 12, 10, 0x000011A6 ),           /* '4' */
  EW_GLYPH( 0x0035, 1, -12, 8, 12, 10, 0x000012C1 ),            /* '5' */
  EW_GLYPH( 0x0036, 1, -12, 8, 12, 10, 0x0000141C ),            /* '6' */
  EW_GLYPH( 0x0037, 0, -12, 9, 12, 10, 0x00001570 ),            /* '7' */
  EW_GLYPH( 0x0038, 0, -12, 9, 12, 10, 0x00001693 ),            /* '8' */
  EW_GLYPH( 0x0039, 0, -12, 9, 12, 10, 0x0000181F ),            /* '9' */
  EW_GLYPH( 0x003A, 1, -9, 3, 9, 4, 0x00001986 ),               /* ':' */
  EW_GLYPH( 0x003B, 0, -9, 4, 11, 4, 0x000019C2 ),              /* ';' */
  EW_GLYPH( 0x003C, 0, -9, 8, 7, 9, 0x00001A25 ),               /* '<' */
  EW_GLYPH( 0x003D, 1, -8, 8, 4, 9, 0x00001B0C ),               /* '=' */
  EW_GLYPH( 0x003E, 1, -9, 8, 7, 9, 0x00001B92 ),               /* '>' */
  EW_GLYPH( 0x003F, 0, -12, 8, 12, 8, 0x00001C6D ),             /* '?' */
  EW_GLYPH( 0x0040, 0, -12, 15, 16, 15, 0x00001D7A ),           /* '@' */
  EW_GLYPH( 0x0041, 0, -12, 11, 12, 11, 0x0000207E ),           /* 'A' */
  EW_GLYPH( 0x0042, 1, -12, 9, 12, 11, 0x00002208 ),            /* 'B' */
  EW_GLYPH( 0x0043, 1, -12, 10, 12, 11, 0x00002346 ),           /* 'C' */
  EW_GLYPH( 0x0044, 1, -12, 10, 12, 11, 0x000024B9 ),           /* 'D' */
  EW_GLYPH( 0x0045, 1, -12, 9, 12, 10, 0x000025D9 ),            /* 'E' */
  EW_GLYPH( 0x0046, 1, -12, 8, 12, 9, 0x000026C9 ),             /* 'F' */
  EW_GLYPH( 0x0047, 1, -12, 10, 12, 12, 0x00002794 ),           /* 'G' */
  EW_GLYPH( 0x0048, 1, -12, 10, 12, 12, 0x0000291F ),           /* 'H' */
  EW_GLYPH( 0x0049, 1, -12, 3, 12, 5, 0x000029E2 ),             /* 'I' */
  EW_GLYPH( 0x004A, 0, -12, 9, 12, 9, 0x00002A11 ),             /* 'J' */
  EW_GLYPH( 0x004B, 1, -12, 10, 12, 11, 0x00002AE1 ),           /* 'K' */
  EW_GLYPH( 0x004C, 1, -12, 8, 12, 9, 0x00002C29 ),             /* 'L' */
  EW_GLYPH( 0x004D, 1, -12, 13, 12, 15, 0x00002CAC ),           /* 'M' */
  EW_GLYPH( 0x004E, 1, -12, 10, 12, 12, 0x00002E33 ),           /* 'N' */
  EW_GLYPH( 0x004F, 1, -12, 10, 12, 12, 0x00002F3A ),           /* 'O' */
  EW_GLYPH( 0x0050, 1, -12, 10, 12, 11, 0x000030BC ),           /* 'P' */
  EW_GLYPH( 0x0051, 1, -12, 10, 14, 12, 0x000031D3 ),           /* 'Q' */
  EW_GLYPH( 0x0052, 1, -12, 9, 12, 10, 0x000033AC ),            /* 'R' */
  EW_GLYPH( 0x0053, 0, -12, 10, 12, 10, 0x000034DB ),           /* 'S' */
  EW_GLYPH( 0x0054, 0, -12, 10, 12, 10, 0x00003688 ),           /* 'T' */
  EW_GLYPH( 0x0055, 1, -12, 9, 12, 11, 0x00003754 ),            /* 'U' */
  EW_GLYPH( 0x0056, 0, -12, 11, 12, 11, 0x0000382B ),           /* 'V' */
  EW_GLYPH( 0x0057, 0, -12, 15, 12, 15, 0x000039A4 ),           /* 'W' */
  EW_GLYPH( 0x0058, 0, -12, 11, 12, 11, 0x00003BD4 ),           /* 'X' */
  EW_GLYPH( 0x0059, 0, -12, 10, 12, 10, 0x00003D63 ),           /* 'Y' */
  EW_GLYPH( 0x005A, 0, -12, 10, 12, 10, 0x00003E8B ),           /* 'Z' */
  EW_GLYPH( 0x005B, 1, -14, 4, 17, 5, 0x00003FE7 ),             /* '[' */
  EW_GLYPH( 0x005C, 0, -12, 7, 13, 7, 0x00004056 ),             /* '\' */
  EW_GLYPH( 0x005D, 0, -14, 4, 17, 5, 0x00004136 ),             /* ']' */
  EW_GLYPH( 0x005E, 0, -12, 7, 6, 7, 0x000041A2 ),              /* '^' */
  EW_GLYPH( 0x005F, 0, 0, 8, 1, 8, 0x00004232 ),                /* '_' */
  EW_GLYPH( 0x0060, 0, -12, 4, 2, 5, 0x0000425B ),              /* '`' */
  EW_GLYPH( 0x0061, 0, -9, 9, 9, 9, 0x00004284 ),               /* 'a' */
  EW_GLYPH( 0x0062, 1, -13, 8, 13, 10, 0x000043A5 ),            /* 'b' */
  EW_GLYPH( 0x0063, 0, -9, 9, 9, 9, 0x000044B2 ),               /* 'c' */
  EW_GLYPH( 0x0064, 1, -13, 8, 13, 10, 0x000045C8 ),            /* 'd' */
  EW_GLYPH( 0x0065, 0, -9, 9, 9, 9, 0x000046C3 ),               /* 'e' */
  EW_GLYPH( 0x0066, 0, -13, 6, 13, 6, 0x000047F9 ),             /* 'f' */
  EW_GLYPH( 0x0067, 1, -9, 8, 12, 10, 0x000048A1 ),             /* 'g' */
  EW_GLYPH( 0x0068, 1, -13, 7, 13, 9, 0x000049E3 ),             /* 'h' */
  EW_GLYPH( 0x0069, 1, -13, 2, 13, 4, 0x00004A96 ),             /* 'i' */
  EW_GLYPH( 0x006A, -1, -13, 4, 16, 4, 0x00004AD2 ),            /* 'j' */
  EW_GLYPH( 0x006B, 1, -13, 8, 13, 9, 0x00004B49 ),             /* 'k' */
  EW_GLYPH( 0x006C, 1, -13, 2, 13, 4, 0x00004C44 ),             /* 'l' */
  EW_GLYPH( 0x006D, 1, -9, 13, 9, 15, 0x00004C6A ),             /* 'm' */
  EW_GLYPH( 0x006E, 1, -9, 7, 9, 9, 0x00004D78 ),               /* 'n' */
  EW_GLYPH( 0x006F, 0, -9, 10, 9, 10, 0x00004E0F ),             /* 'o' */
  EW_GLYPH( 0x0070, 1, -9, 8, 12, 10, 0x00004F38 ),             /* 'p' */
  EW_GLYPH( 0x0071, 1, -9, 8, 12, 10, 0x00005046 ),             /* 'q' */
  EW_GLYPH( 0x0072, 1, -9, 5, 9, 6, 0x0000514F ),               /* 'r' */
  EW_GLYPH( 0x0073, 0, -9, 8, 9, 9, 0x000051AE ),               /* 's' */
  EW_GLYPH( 0x0074, 0, -11, 6, 11, 6, 0x000052DB ),             /* 't' */
  EW_GLYPH( 0x0075, 1, -9, 7, 9, 9, 0x0000536C ),               /* 'u' */
  EW_GLYPH( 0x0076, 0, -9, 8, 9, 8, 0x000053EF ),               /* 'v' */
  EW_GLYPH( 0x0077, 0, -9, 13, 9, 13, 0x000054F9 ),             /* 'w' */
  EW_GLYPH( 0x0078, 0, -9, 8, 9, 8, 0x0000568A ),               /* 'x' */
  EW_GLYPH( 0x0079, 0, -9, 8, 12, 8, 0x000057A0 ),              /* 'y' */
  EW_GLYPH( 0x007A, 0, -9, 8, 9, 8, 0x000058CF ),               /* 'z' */
  EW_GLYPH( 0x007B, 0, -13, 6, 16, 6, 0x000059D2 ),             /* '{' */
  EW_GLYPH( 0x007C, 1, -12, 2, 14, 4, 0x00005AC9 ),             /* '|' */
  EW_GLYPH( 0x007D, 0, -13, 6, 16, 6, 0x00005AEF ),             /* '}' */
  EW_GLYPH( 0x007E, 1, -7, 10, 3, 12, 0x00005BE5 ),             /* '~' */
  EW_GLYPH( 0x00A0, 0, 0, 0, 0, 4, 0x00005C6D ),
  EW_GLYPH( 0x00A1, 1, -9, 2, 12, 4, 0x00005C6D ),
  EW_GLYPH( 0x00A2, 0, -11, 9, 13, 9, 0x00005CA9 ),
  EW_GLYPH( 0x00A3, 0, -12, 10, 12, 10, 0x00005DFD ),
  EW_GLYPH( 0x00A4, 0, -11, 12, 11, 12, 0x00005F55 ),
  EW_GLYPH( 0x00A5, 0, -12, 10, 12, 10, 0x000060F5 ),
  EW_GLYPH( 0x00A6, 1, -12, 2, 14, 4, 0x00006285 ),
  EW_GLYPH( 0x00A7, 0, -12, 10, 16, 10, 0x000062C5 ),
  EW_GLYPH( 0x00A8, 0, -13, 7, 2, 7, 0x00006517 ),
  EW_GLYPH( 0x00A9, 0, -12, 13, 12, 13, 0x00006538 ),
  EW_GLYPH( 0x00AA, 1, -12, 6, 6, 8, 0x00006789 ),
  EW_GLYPH( 0x00AB, 0, -8, 8, 7, 8, 0x00006825 ),
  EW_GLYPH( 0x00AC, 1, -7, 7, 4, 9, 0x000068FD ),
  EW_GLYPH( 0x00AD, 0, -6, 5, 1, 5, 0x0000694D ),
  EW_GLYPH( 0x00AE, 0, -12, 13, 12, 13, 0x00006969 ),
  EW_GLYPH( 0x00AF, 1, -12, 6, 1, 8, 0x00006B8B ),
  EW_GLYPH( 0x00B0, 1, -12, 5, 4, 6, 0x00006BAB ),
  EW_GLYPH( 0x00B1, 0, -11, 9, 11, 9, 0x00006BFB ),
  EW_GLYPH( 0x00B2, 0, -12, 6, 6, 6, 0x00006CE0 ),
  EW_GLYPH( 0x00B3, 0, -12, 6, 6, 6, 0x00006D83 ),
  EW_GLYPH( 0x00B4, 1, -12, 4, 2, 5, 0x00006E2A ),
  EW_GLYPH( 0x00B5, 1, -9, 8, 12, 10, 0x00006E50 ),
  EW_GLYPH( 0x00B6, 0, -12, 7, 12, 8, 0x00006F02 ),
  EW_GLYPH( 0x00B7, 1, -7, 2, 2, 4, 0x00006FC2 ),
  EW_GLYPH( 0x00B8, 0, 0, 4, 3, 4, 0x00006FD1 ),
  EW_GLYPH( 0x00B9, 0, -12, 4, 6, 6, 0x00007000 ),
  EW_GLYPH( 0x00BA, 1, -12, 6, 6, 8, 0x0000703D ),
  EW_GLYPH( 0x00BB, 0, -8, 8, 7, 8, 0x000070D8 ),
  EW_GLYPH( 0x00BC, 1, -12, 11, 12, 12, 0x000071BE ),
  EW_GLYPH( 0x00BD, 1, -12, 12, 12, 13, 0x00007346 ),
  EW_GLYPH( 0x00BE, 0, -12, 13, 12, 13, 0x000074F1 ),
  EW_GLYPH( 0x00BF, 0, -9, 8, 12, 8, 0x000076F5 ),
  EW_GLYPH( 0x00C0, 0, -15, 11, 15, 11, 0x000077F4 ),
  EW_GLYPH( 0x00C1, 0, -15, 11, 15, 11, 0x000079CB ),
  EW_GLYPH( 0x00C2, 0, -15, 11, 15, 11, 0x00007B9D ),
  EW_GLYPH( 0x00C3, 0, -16, 11, 16, 11, 0x00007D88 ),
  EW_GLYPH( 0x00C4, 0, -15, 11, 15, 11, 0x00007F8D ),
  EW_GLYPH( 0x00C5, 0, -16, 11, 16, 11, 0x0000815E ),
  EW_GLYPH( 0x00C6, -1, -12, 17, 12, 16, 0x00008366 ),
  EW_GLYPH( 0x00C7, 1, -12, 10, 15, 11, 0x0000856C ),
  EW_GLYPH( 0x00C8, 1, -15, 9, 15, 10, 0x00008730 ),
  EW_GLYPH( 0x00C9, 1, -15, 9, 15, 10, 0x00008867 ),
  EW_GLYPH( 0x00CA, 1, -15, 9, 15, 10, 0x00008999 ),
  EW_GLYPH( 0x00CB, 1, -15, 9, 15, 10, 0x00008AE4 ),
  EW_GLYPH( 0x00CC, -1, -15, 5, 15, 5, 0x00008C15 ),
  EW_GLYPH( 0x00CD, 1, -15, 4, 15, 5, 0x00008C97 ),
  EW_GLYPH( 0x00CE, -1, -15, 6, 15, 5, 0x00008D05 ),
  EW_GLYPH( 0x00CF, -1, -15, 7, 15, 5, 0x00008DAA ),
  EW_GLYPH( 0x00D0, 0, -12, 11, 12, 11, 0x00008E44 ),
  EW_GLYPH( 0x00D1, 1, -16, 10, 16, 12, 0x00008FA0 ),
  EW_GLYPH( 0x00D2, 1, -15, 10, 15, 12, 0x0000911E ),
  EW_GLYPH( 0x00D3, 1, -15, 10, 15, 12, 0x000092EA ),
  EW_GLYPH( 0x00D4, 1, -15, 10, 15, 12, 0x000094B1 ),
  EW_GLYPH( 0x00D5, 1, -16, 10, 16, 12, 0x00009691 ),
  EW_GLYPH( 0x00D6, 1, -15, 10, 15, 12, 0x0000988A ),
  EW_GLYPH( 0x00D7, 0, -9, 9, 7, 9, 0x00009A50 ),
  EW_GLYPH( 0x00D8, 1, -13, 10, 14, 12, 0x00009B30 ),
  EW_GLYPH( 0x00D9, 1, -15, 9, 15, 11, 0x00009D3E ),
  EW_GLYPH( 0x00DA, 1, -15, 9, 15, 11, 0x00009E5C ),
  EW_GLYPH( 0x00DB, 1, -15, 9, 15, 11, 0x00009F75 ),
  EW_GLYPH( 0x00DC, 1, -15, 9, 15, 11, 0x0000A0A7 ),
  EW_GLYPH( 0x00DD, 0, -15, 10, 15, 10, 0x0000A1BF ),
  EW_GLYPH( 0x00DE, 1, -12, 9, 12, 10, 0x0000A32C ),
  EW_GLYPH( 0x00DF, 1, -13, 9, 13, 10, 0x0000A433 ),
  EW_GLYPH( 0x00E0, 0, -12, 9, 12, 9, 0x0000A579 ),
  EW_GLYPH( 0x00E1, 0, -12, 9, 12, 9, 0x0000A6E1 ),
  EW_GLYPH( 0x00E2, 0, -12, 9, 12, 9, 0x0000A844 ),
  EW_GLYPH( 0x00E3, 0, -13, 9, 13, 9, 0x0000A9C0 ),
  EW_GLYPH( 0x00E4, 0, -12, 9, 12, 9, 0x0000AB54 ),
  EW_GLYPH( 0x00E5, 0, -13, 9, 13, 9, 0x0000ACB6 ),
  EW_GLYPH( 0x00E6, 0, -9, 14, 9, 14, 0x0000AE4D ),
  EW_GLYPH( 0x00E7, 0, -9, 9, 12, 9, 0x0000B035 ),
  EW_GLYPH( 0x00E8, 0, -12, 9, 12, 9, 0x0000B195 ),
  EW_GLYPH( 0x00E9, 0, -12, 9, 12, 9, 0x0000B312 ),
  EW_GLYPH( 0x00EA, 0, -12, 9, 12, 9, 0x0000B48A ),
  EW_GLYPH( 0x00EB, 0, -12, 9, 12, 9, 0x0000B61B ),
  EW_GLYPH( 0x00EC, -1, -12, 4, 12, 4, 0x0000B792 ),
  EW_GLYPH( 0x00ED, 1, -12, 4, 12, 4, 0x0000B7FA ),
  EW_GLYPH( 0x00EE, -1, -12, 6, 12, 4, 0x0000B85D ),
  EW_GLYPH( 0x00EF, -1, -12, 7, 12, 4, 0x0000B8F1 ),
  EW_GLYPH( 0x00F0, 1, -13, 8, 13, 10, 0x0000B977 ),
  EW_GLYPH( 0x00F1, 1, -13, 7, 13, 9, 0x0000BB00 ),
  EW_GLYPH( 0x00F2, 0, -12, 10, 12, 10, 0x0000BC02 ),
  EW_GLYPH( 0x00F3, 0, -12, 10, 12, 10, 0x0000BD75 ),
  EW_GLYPH( 0x00F4, 0, -12, 10, 12, 10, 0x0000BEE3 ),
  EW_GLYPH( 0x00F5, 0, -13, 10, 13, 10, 0x0000C06A ),
  EW_GLYPH( 0x00F6, 0, -12, 10, 12, 10, 0x0000C20A ),
  EW_GLYPH( 0x00F7, 0, -11, 9, 9, 10, 0x0000C377 ),
  EW_GLYPH( 0x00F8, 0, -10, 10, 11, 10, 0x0000C42B ),
  EW_GLYPH( 0x00F9, 1, -12, 7, 12, 9, 0x0000C5B6 ),
  EW_GLYPH( 0x00FA, 1, -12, 7, 12, 9, 0x0000C67A ),
  EW_GLYPH( 0x00FB, 1, -12, 7, 12, 9, 0x0000C739 ),
  EW_GLYPH( 0x00FC, 1, -12, 7, 12, 9, 0x0000C811 ),
  EW_GLYPH( 0x00FD, 0, -12, 8, 15, 8, 0x0000C8CF ),
  EW_GLYPH( 0x00FE, 1, -13, 8, 16, 10, 0x0000CA3D ),
  EW_GLYPH( 0x00FF, 0, -12, 8, 15, 8, 0x0000CB7B ),

  EW_FONT_PIXEL( FlatFontS, 0x0000CCE8 )                        /* ratio 71.93 % */
    0xCF7BDEE7, 0xD7FEF73A, 0x88879879, 0x181AD545, 0x50318003, 0x962206B5, 0x3ACF30F3,
    0x7BD7FEF7, 0x004DC101, 0xF596579E, 0x778FF867, 0x81861081, 0xEC06E3F9, 0x0D6032AD,
    0x9BDCF163, 0x1DCFDBBF, 0x7B8DFDCF, 0x98C1DF63, 0xB7FC0632, 0xF3EF7039, 0xAFB8DFDE,
    0xBCFB9C7B, 0xB0C9E5F7, 0x0F927212, 0x004461DC, 0xA01101BA, 0x92FD737E, 0x2EBDC6FC,
    0x8F9D169F, 0xEC391818, 0x9E9FF07C, 0xFA057DF5, 0x905DDE3F, 0x46F9FFEF, 0x7EBC1EFC,
    0x5BE03731, 0x59F8E88F, 0x7E3BDF6F, 0xF7AFF583, 0x180F6057, 0xE7007EFB, 0x222E9ABD,
    0xCF18771F, 0x1076E003, 0xD731DD39, 0xBEBBE703, 0xF7D8C17E, 0xCFFE77EB, 0xEFCE6A0B,
    0xBDE0B93D, 0xA3FECA39, 0x68C0806B, 0xF1BD9463, 0xE4F7BE0B, 0x34E77F22, 0x2CFD9C70,
    0xFCE47188, 0x3E5FC443, 0xDAE7307F, 0xDFA7C0B5, 0xFCCDE40F, 0xF6270F51, 0xC5739FCD,
    0xBCF7E4F8, 0x541117F5, 0x95F5934F, 0xFDE1E2B8, 0x9FB1DEFA, 0x0106E32F, 0xDF58AB01,
    0x7427BC63, 0x8A87590D, 0x44E62762, 0x9818800C, 0x13C4FF13, 0xD741D645, 0x5837BC60,
    0xA83D67BF, 0xC5FA315F, 0x541EF8D4, 0x1E42860E, 0xF2060018, 0x83151430, 0xF968F26F,
    0x02BE797B, 0x84182067, 0xFDE3BCF7, 0xCC47BD6F, 0x95AC67F3, 0x1EFD9BF0, 0x00EB3EFC,
    0x07FD00AB, 0xBDCF0000, 0x3EF7BCD7, 0xDEF35EF7, 0x6400000B, 0x43397DC0, 0xEEFC733D,
    0x07FBCFBD, 0x519E0A70, 0xFAC81E70, 0xE784ABE0, 0xCE078D40, 0xCC1FA884, 0x307DF01C,
    0x056F82C6, 0x5F3DF678, 0x37BBEFA8, 0xD14D4EFE, 0x50C0D463, 0x0405C171, 0x82E22000,
    0xDEA1855B, 0x18D744B1, 0xF9BDDFBF, 0xFEB1DCC1, 0x5E73DE3D, 0x00000EFD, 0x98000000,
    0xE82F9EFB, 0x9FE7BBEE, 0x51EC96F9, 0x914C0CF9, 0x814542BF, 0x5F00ADF8, 0x079BE0BC,
    0xD61275BC, 0xEF980FFA, 0xEFC74037, 0xCCFF7BDE, 0xAC1BCF7D, 0xCFF37BEE, 0x319C4B3B,
    0x93C03EFC, 0xF819F78C, 0xDF83EDDD, 0xEE3036DD, 0x291278A8, 0xC4520F7C, 0x51EC86FC,
    0x9BDCEFDE, 0x0177981B, 0x026F00D9, 0xE88173E6, 0x267BE04E, 0x102F3CF0, 0x378137BF,
    0x6FA3DEFA, 0x1EF7BDF4, 0x0000037D, 0xF7BDEEFC, 0x7BDD6B2E, 0x881792EF, 0xF73DE904,
    0x9CEA2257, 0x2D38C6FC, 0x6B02F1DE, 0x2F7E028E, 0x378DF9AC, 0x3FF378F4, 0x41FF19EE,
    0xEC62FFF6, 0xBE671738, 0xD8347303, 0x1BFB9F4F, 0xF89EE3E6, 0xF11D3C47, 0x7F9E1299,
    0xE07BF024, 0x45F1CFF9, 0x75C6637C, 0xBDCF1BAF, 0xF77BDEF7, 0xF7BDEF73, 0x134C07C4,
    0xC73026F8, 0xA0957C07, 0x1ADC0BC6, 0xDE01D460, 0x0FD6407C, 0xD9E04CF8, 0xF3C17CF7,
    0xE6C7777D, 0x166F298E, 0xB8A72700, 0xDEFBD4A3, 0xEF3CFF33, 0xD3FCCF77, 0x98DF11EB,
    0xCAF220F2, 0x5BE3C883, 0xB4E5F88F, 0x0DD7BDFA, 0x17FEFFE6, 0x7DF7BF66, 0xEA59BF17,
    0x8FF2237D, 0x1148078A, 0x778691B1, 0xEB0C7195, 0xC9B76F7D, 0x189FDFFA, 0xFD40BBC0,
    0xBDE9D634, 0xF787FBC3, 0x3FDE000F, 0xFBC0FF78, 0xBEE00007, 0xCCF28638, 0xA0FBE401,
    0x9A67FF7E, 0x1EF72FFF, 0x3BEF3BCF, 0xDF79DE78, 0x72FFF981, 0xFDFA81EF, 0xF7BBF99F,
    0xEFC77BDE, 0x1DEF7BDE, 0xEF7BBF00, 0x137C77BD, 0xE89D3EC8, 0x7BFDCBF3, 0xF9FF7CF0,
    0x9EDF9E0D, 0x1BF3E8DF, 0xFB23DFFF, 0xE77E4274, 0x3DD706FC, 0x86F957F1, 0x60EEAA37,
    0xFC166E01, 0xF3EF039E, 0x00D6B01F, 0x24F01FBF, 0x80006FF0, 0x9DDDCFB5, 0x7B9FF8C0,
    0x20B739EE, 0xC83BEFFF, 0xF781DF79, 0x19BB202D, 0xCFFCF173, 0xF09E786F, 0x1CEFCF15,
    0x3678F3C5, 0x320AC3DD, 0x117234E4, 0x0CCC2209, 0x20103172, 0x32E4AB25, 0xAD237873,
    0xFE8DB50A, 0x7D9F6FFF, 0xAC33FE5E, 0xDFF9AFF3, 0x01F9EA2F, 0x22EC5F80, 0xBDF8019E,
    0x017DDCF7, 0x1C02773C, 0x8E6A201F, 0xF378CC01, 0x99E57C07, 0x8BF5E460, 0x8C78BE07,
    0x4F0AB03C, 0x7B9E3305, 0x8FF932EF, 0xCFBDEF7B, 0x3703EB27, 0x9E058BEB, 0xF7BDEF3C,
    0xBDC4DFFE, 0xF205E6F7, 0xC60000E4, 0xEF7B835B, 0xDEF7178E, 0xF8806EB3, 0x01C204E5,
    0xE5F901C2, 0xE3BBDEE4, 0xF3DF7306, 0x7D7EF81B, 0xE797FECF, 0xD7AAC539, 0x8E760319,
    0x8EF301E7, 0x00400000, 0xEF301E78, 0xCEC06338, 0xB0673CF1, 0xEEFBE5EA, 0xDE5FFB3D,
    0x3DF9EF7B, 0xFA73DEE0, 0x3E673C05, 0xC02F5180, 0x0004001E, 0x07B00200, 0xCC0BD460,
    0xEF707CFF, 0xDE5EFFF9, 0xF7BDEF7B, 0xEF7BDEE2, 0x00000005, 0x0EF7BDEE, 0x1DEF7BDC,
    0x00000000, 0xBDEF7B80, 0xEF7BDE37, 0xBDCFF7BD, 0x003FDEF7, 0xDEF70000, 0xEF7B837B,
    0x000001BD, 0xDAC00000, 0xBF0AFCF7, 0xBFD9EFAF, 0xAC53A9E9, 0xF018CED9, 0x603E633D,
    0x800246FC, 0x27DEF7B8, 0x66EF7107, 0x0F93802D, 0x61EFD6A0, 0xEFF4B1BC, 0xCEC67B9C,
    0x1FFF02F7, 0x00000000, 0x7BDEF700, 0x7BDEE26F, 0x00004DEF, 0x00000000, 0x00001BAC,
    0x75800000, 0x00000003, 0x00000000, 0x4F101630, 0xE569FE27, 0xC4FA9E1B, 0x5EDF7B8D,
    0xFFF90BDE, 0x03E27101, 0xDE0138BE, 0xEB5824E7, 0x67ECC03F, 0x99EFBF00, 0x1EDE79C0,
    0x09CF5860, 0x403E37C0, 0x3500B57C, 0x000BDEBB, 0x00000000, 0x00000000, 0xBDEF7000,
    0x0FDEF7F7, 0x02A2EFB0, 0xC130818C, 0x41F51897, 0x2CDE0FAC, 0xC631852C, 0xF08957C1,
    0x02F1A855, 0x00C674CB, 0x1F517D62, 0x099F97C0, 0x002D4630, 0xDDF81F3E, 0x05CBEE01,
    0xB180D188, 0xB8F400E6, 0x4068EF00, 0x778099CD, 0x2C77801C, 0xA017CD40, 0x30BC4007,
    0x81BF3DF7, 0xECF7D7F7, 0x29E6A3FF, 0x6339FCD6, 0x1EB317C0, 0x30037190, 0x8C008012,
    0x71901E7C, 0xC5F018EF, 0x358A79AA, 0xDDFDE17F, 0xB1FFF67B, 0xEEF7BDEE, 0xFBDEE709,
    0xDE780BF6, 0x80948019, 0x4FBD4094, 0xFDBDEE70, 0xDEF7387E, 0x000000BD, 0xF9E00000,
    0xF42BF39D, 0xFFF39CEF, 0x0F7EB1A6, 0xE2FCEDF3, 0xF3CF1981, 0x247FC880, 0xC8006330,
    0x0F3C6604, 0xF17FFC88, 0xAC678CC0, 0x3B7CC3DF, 0xD39CEFF5, 0x9CEFCF0A, 0x7201FB9D,
    0xF7BFF9AF, 0xEEA37FDE, 0xC0D9E7BD, 0x14C051E8, 0x754134C0, 0xFDEF750D, 0xDEEA3F3D,
    0xCD72007F, 0x31035A00, 0xA6AF0257, 0x26FEE77E, 0xEE7FEFE6, 0x4CF7E6ED, 0x031A57AA,
    0x06B5866A, 0xB5DE1DF2, 0xFF7807BF, 0xC834F7FF, 0xE36D77B5, 0x8A8F644D, 0xEB9100F9,
    0x47CE8C9D, 0x4F73FF7F, 0xF7BDEF6D, 0xEFEF7BDE, 0xDE56F7BD, 0x00007F7B, 0x00000000,
    0x00000000, 0xFFF00000, 0x001FDF81, 0x00000000, 0x00100000, 0xEF5980F5, 0x7E7C52F8,
    0x7BBDC7B1, 0x80775CEC, 0x03F4D771, 0x01EA333F, 0x0393854F, 0x7C4F0F23, 0x5AC1E2F8,
    0x28BE0B58, 0x3C8C1F15, 0x57C039FE, 0x89E03EB1, 0xD6403C5F, 0xFE380953, 0xBC81DCF0,
    0x07974E13, 0xFC463F8F, 0x3E763723, 0x785A9478, 0x867628BE, 0xD662A99B, 0xF9651566,
    0xB992EC57, 0xAB6ADCC9, 0x3D614B11, 0xFAC46599, 0x278F6067, 0x41576B07, 0xE57B0AF9,
    0xA3FC8C85, 0x14540A32, 0xE7926462, 0xF27E7107, 0x65ED07AD, 0x37CC668D, 0xC772C771,
    0x77DF3182, 0x5CC7A05C, 0xDE004003, 0x98C0B3D1, 0x9C17AAEF, 0x7468F4B1, 0xC35CC65E,
    0xF3A07398, 0xE700EF7A, 0xA2B0D1D7, 0xBC41ADE3, 0x79B2B0CF, 0xE72ABA35, 0x7FA33C4C,
    0x5F31DC1A, 0x80588C60, 0x00000035, 0xEF7B8800, 0x11DEF7BD, 0x4F7BDEF7, 0xB8F4018E,
    0x8039CD40, 0x8EF03477, 0x039CD40B, 0xCE81B378, 0x06B58C03, 0x9181B270, 0xF7BDEF79,
    0x8FBDDFAE, 0x00000FBA, 0x00000000, 0x3ACFBA80, 0xEA207A60, 0x95095380, 0xF01EF81F,
    0x01D64164, 0x131E02A7, 0x72FC0FCC, 0xFFDF18C0, 0x00FFF1DE, 0x00000000, 0x7FF80000,
    0xCF80EE30, 0x05735887, 0xF263BC73, 0x8D4FBE7D, 0x7BDD6669, 0xCDF7BDEF, 0xAFFC8BFD,
    0x7FDFFAC9, 0xDF73DFA3, 0xA877A8B9, 0x4617B1FA, 0xDEFFEF10, 0xDEE79D89, 0xC033C8C9,
    0xC2E61B88, 0x2B39CE3F, 0x0000BDE3, 0xFFCF0000, 0x7DDC1FFE, 0xC2F8AFBF, 0x07A8171A,
    0x00DC01B8, 0x585F11EA, 0xBFFB8DA3, 0xBF506FBF, 0x7EA0DE7B, 0x4FF3BBFF, 0x547B29CF,
    0x1FB18B8C, 0x00608C06, 0x96F22E31, 0xA3BC539E, 0x6F7FEFD4, 0x017DC06E, 0xBED40000,
    0xEAF8C9FF, 0x2D9BCBEE, 0xE201EA5E, 0x2A817100, 0x2F16CDE0, 0x6FBBABE3, 0x34F77EA2,
    0xFFF7DBEA, 0xE32D74BC, 0x46C72337, 0xEF7BC279, 0x7BBE0BFD, 0xC8CFBDEF, 0xC5CF490D,
    0xEDF9E1DA, 0x883BFE7B, 0xEB7E1CEF, 0xC409EA1E, 0xD77D5D65, 0x002EFABA, 0x00000000,
    0xB9FFBED4, 0x773DF1DF, 0xAF1DE19F, 0x480AB4E8, 0x01560240, 0x69D168EF, 0x41F7757C,
    0x4E9FFBED, 0x9CBE21ED, 0xDD7BDDF5, 0x00000BB8, 0xF9CFB700, 0x7B3FF9A5, 0xBF23E6BE,
    0x000085C7, 0xF7C00000, 0xFBF1FBE3, 0x3FB00001, 0xFFC07F60, 0x00000007, 0xF7D18C00,
    0x003FFF79, 0xF2000000, 0xF9F7107C, 0xF83F1FE0, 0x231E1FC5, 0x04EB7F21, 0x9C07D796,
    0xDF318167, 0x0003FBF1, 0xF5DEFC00, 0xDF8C7BBF, 0xFFCACD3D, 0xF7BEE759, 0x88F3CB9B,
    0x67AA6F9B, 0x00026583, 0x00000000, 0x77000000, 0xF0BF39F5, 0x3F9ECFFE, 0xB94F91F3,
    0x000001B8, 0x77C60000, 0xFF206FCE, 0x0FF8EE79, 0xD9D16CDE, 0x47BF053C, 0x111105C4,
    0x7E7846E0, 0x4D9D0F50, 0xE3FE3367, 0xEF0FFC9C, 0x8BBBFF9E, 0xF9F7FE71, 0xF1DE6C86,
    0x0900B502, 0x6C96A048, 0xFBCAF1DE, 0x5837CFBF, 0x000BBBFF, 0x3FF7DA80, 0xEAFC6BFF,
    0xB47A9BEE, 0x880A7978, 0x9E05C40B, 0xBC5B3A02, 0xBEEEAF8C, 0x13FF7DA8, 0x6FDF8000,
    0xE713D79D, 0x00002635, 0x7FEB0000, 0xCF7ACDFF, 0xCFDB677D, 0xE7ECB350, 0xE7D5B7A1,
    0xEFE616FE, 0x1773EF9E, 0xDF98F7CF, 0x7EF2BF90, 0x13E7EEE7, 0x8EFC0177, 0xFA3BF1BE,
    0x00000006, 0x6FC0E220, 0xD617719D, 0x00000005, 0x4F505C40, 0xDD6FD7A8, 0x0FF79673,
    0x839FF7FF, 0x8FE55F91, 0xC3CF0E5F, 0x31CBF0F3, 0xBF18C7F2, 0xE7BF031A, 0xE39983F7,
    0x9E4AA881, 0xE41DD41B, 0xF7F14A7D, 0xDA89E2A3, 0x61FB1554, 0x91DE3197, 0x5599536A,
    0x878C9E39, 0x7EBBF591, 0xDF5132BB, 0x0BFD4F28, 0xA390A8F6, 0x7E3650FE, 0xC8BB8C51,
    0xA6F58EF3, 0xF47ABC77, 0xF3CE2F53, 0xF151859B, 0xC46CAA83, 0xF0F3CF3B, 0x2FE63D1B,
    0x7ED0E9EA, 0x7EF381EF, 0x8DF150F1, 0xF873FC3C, 0x9E1EB09E, 0x591F1558, 0x9C48FFFF,
    0x613C1F5A, 0x7500AA81, 0x73C28F40, 0xEF7185C7, 0xE3BEF7BD, 0xF89F7BDE, 0x2274F3C1,
    0xF3E1357E, 0x205FACC1, 0x8CE079FB, 0x7BC8C60F, 0xBF23FDEF, 0x58B1DC45, 0x8002B8D9,
    0xF3C3D644, 0x2C7B3CD7, 0x0903F58C, 0x25FC0202, 0xFE06F19E, 0x000FD739, 0x25F58000,
    0xCE81B8D6, 0x40407085, 0x8E895980, 0xFDCAC3FF, 0x0481ADF0, 0x27F0C080, 0xFCCC3C7A,
    0xB0B39F43, 0xDDEE7CD6, 0xE32FC8BF, 0xBB8DF88B, 0xF1F7E7BF, 0x05EEAAFB, 0x02FF1000,
    0xFDB98064, 0xEF7ECC5E, 0x2CF47E7E, 0x362395D9, 0x060B276A, 0x63623016, 0x4B3BD3FC,
    0xBF5699DE, 0xCC3F3F77, 0x0002F7ED, 0x0DE7BBF5, 0xFFBEDF8C, 0x1963D0FA, 0xC1F3055F,
    0x0C4481DC, 0x759B8C00, 0x6B7183EF, 0x0100FBDC, 0x14F10020, 0xBDD62710, 0x0007DEF7,
    0x9DFABEFC, 0x877A7BF3, 0x73FF7CF1, 0xF0CD6FCE, 0x7F9E4DF3, 0x182ADE5C, 0xF8039875,
    0x2CC0003F, 0x8EF0FFE0, 0x5E1CF182, 0x3BF9E4DF, 0x39FFBF78, 0xDD63F7E7, 0x6BBCF207,
    0x8F5AD0BC, 0x50DE78C9, 0x85CE8FCF, 0x21AAAB1E, 0x83D6FBE7, 0x75915DFF, 0x5BDFF86F,
    0xFF0DEF79, 0xBDEF2B7B, 0xE56F7FE1, 0x000037BD, 0xE003F7E0, 0x00FDFBF7, 0xDDEFB580,
    0xF7DBEF13, 0xB358BD7E, 0xC045EB98, 0xBE77857F, 0x44437A83, 0x8C9DFFFE, 0x57F77FB7,
    0x98969A7B, 0x82A63ABB, 0xEFE63913, 0xF784464D, 0x6FBF7B1B, 0x4E9DF527, 0xFD41BD43,
    0x40F9979E, 0xCC1DE350, 0x7B9FB1FA, 0x6717BFCF, 0xC8002799, 0x6FFF7FF7, 0xBEEF7982,
    0xFA89DEFB, 0x7FFBEE76, 0x1EF06FF6, 0x377F7BDF, 0xAE6635CE, 0x2188CCA7, 0xFC4916E7,
    0xC00133C3, 0x7F8922DC, 0x6398E678, 0x0C46653D, 0xF7BEBDE9, 0x4B9C6EFE, 0xFDF73B7D,
    0xE607BB3F, 0x7BEEFBBD, 0xE73BE21F, 0xACE7FE33, 0x3373FF99, 0x9137DAD6, 0xF6F39863,
    0xF88FF883, 0x7E357E0F, 0xCEF5CC35, 0xFE9FD2F5, 0x30FE9FD0, 0xF8D9CF67, 0xE33DF19E,
    0xBDEF7BDE, 0x277BDEF7, 0xEF77E000, 0xFFDE307D, 0xE609BFFD, 0x7BEEFBB9, 0x7EDF3C1F,
    0xEEE7FDCF, 0x6FB09F41, 0x31AE717F, 0x72186213, 0x35FBEC6E, 0xBEFB04CF, 0x9E0DCC2F,
    0x1CC733C1, 0xBDE90C90, 0x79B88771, 0x19EDF52E, 0x981EDE62, 0xEFBBEEE7, 0xDEF7B87D,
    0xB3FF1FFB, 0x097CF7DC, 0x84BE7BEE, 0x02DF0127, 0xDEE30000, 0x19F7BBEB, 0xBDDF5EF7,
    0x5000000F, 0xFC15F801, 0x5EF7BDEF, 0xACDA73DE, 0x3B58D7BB, 0xFAC46456, 0xEFBBC3FD,
    0xF73ACCF0, 0xCF9CEF8D, 0xA33F6793, 0xC1AFFFFA, 0x7CD4FFFF, 0xDCF2B10D, 0xF1DEC4F9,
    0xC2EB1DAE, 0x0000005D, 0xA0040000, 0xB9C60745, 0x73BE09F7, 0x00026FD6, 0xEF7FF788,
    0xE6267FCF, 0x60081700, 0xDF00F503, 0xBCF02B37, 0x000001BF, 0x979C3FFC, 0x55EC4F5D,
    0x3271FFB2, 0xC000BF63, 0x7DEBCE7B, 0x7E7EADEE, 0xCF015F11, 0xEF57E22F, 0xFED3EF73,
    0x37E85FE5, 0xF99E0DFA, 0xF70FE67B, 0xDC19F719, 0x7867DC67, 0x3F99EFE6, 0x437E8DFA,
    0xBB801DAE, 0x7F82FC07, 0xF2006743, 0x17F78069, 0xFDFA6980, 0xF5AF7F21, 0xC9F7DC60,
    0xD5A85EFA, 0xF7849EF1, 0xF97F7335, 0x7BACAA33, 0x2F19FCBF, 0x001DAE40, 0x05F80F77,
    0x019D0DFE, 0x78034F90, 0xCD30017F, 0xF9059CF7, 0xDDDD677B, 0xC9F7DC69, 0x56A083B5,
    0xE0D6F08B, 0x3EB7E17D, 0x3B3E1546, 0xA79E2F18, 0x39F57DEE, 0xBDD5402F, 0xA82FC1EB,
    0x19D0431D, 0x253FFBF0, 0x33BF069F, 0x7817F7A7, 0x7E9A6076, 0x6F73CF7F, 0x1EB5EFD5,
    0xFDBCE7BC, 0x502F7D64, 0x093DE3AB, 0xFB99AFBC, 0x95461FCB, 0x3F97EF75, 0xBF00178C,
    0xEF80101F, 0xBE06CC07, 0x985C7A01, 0xCF442DEB, 0x007E2B09, 0x3F15ADD4, 0x9FE2B371,
    0xDC85C6E7, 0x7FE400BF, 0x0BD8804D, 0xE013B9E0, 0x735100F8, 0x9BC6600C, 0xCF2BE03F,
    0x5FAF2304, 0x63C5F03C, 0x785581E4, 0xDCF1982A, 0x7FC9977B, 0x7DEF7BDC, 0xB81F593E,
    0xF02C5F59, 0x77B101E4, 0x03B5DE00, 0xE7803FD0, 0x03E3804E, 0x8031CD44, 0x80FE6F19,
    0x8C133CAF, 0xC0F17EBC, 0x07918F17, 0x60A9E156, 0x5DEF73C6, 0xEF71FF26, 0x64F9F7BD,
    0x7D66E07D, 0x0793C0B1, 0xC01FFFEA, 0xC037D3E8, 0x01D9E3D8, 0x1C02773C, 0x8E6A201F,
    0xF378CC01, 0x99E57C07, 0x8BF5E460, 0x8C78BE07, 0x4F0AB03C, 0x7B9E3305, 0x8FF932EF,
    0xCFBDEF7B, 0x3703EB27, 0x9E058BEB, 0x9E01003C, 0x83FACBF3, 0x1AF9F7FE, 0xA7D8C7FC,
    0x804EE780, 0xCD4403E3, 0x6F198031, 0x3CAF80FE, 0x7EBC8C13, 0x8F17C0F1, 0xE1560791,
    0x73C660A9, 0xFF265DEF, 0xF7BDEF71, 0xE07D64F9, 0xC0B17D66, 0x99670793, 0xCE000027,
    0xCF004F32, 0x07C7009D, 0x00639A88, 0x01FCDE33, 0x1826795F, 0x81E2FD79, 0x0F231E2F,
    0xC153C2AC, 0xBBDEE78C, 0xDEE3FE4C, 0xC9F3EF7B, 0xFACDC0FA, 0x0F278162, 0x00DFBF3C,
    0x05F7BFBC, 0x00F7BFBC, 0x00AFDF9E, 0xC7009DCF, 0x639A8807, 0xFCDE3300, 0x26795F01,
    0xE2FD7918, 0x231E2F81, 0x53C2AC0F, 0xDEE78CC1, 0xE3FE4CBB, 0xF3EF7BDE, 0xCDC0FAC9,
    0x278162FA, 0xBDCF200F, 0x037BDEF7, 0xDEF77CD0, 0x9E78037B, 0x9AE80017, 0x1D9D0012,
    0x19F39000, 0x3EF7BDF4, 0xF798D5E0, 0x53C0FBDE, 0xDA000933, 0x8006F7BA, 0xEF7BFF1E,
    0x731801CD, 0xB400CC25, 0x7BDEEA06, 0xF7DCCBEF, 0x5FBE06FC, 0xE5FFB3DF, 0xEAB14E79,
    0x9D80C675, 0xBCC079E3, 0x10000023, 0xCC079E00, 0xB018CE3B, 0x19CF3C73, 0xBEF97AAC,
    0x17FECF7B, 0x1BF58ED6, 0x8807AEC0, 0xFF720ABD, 0x4D7FE402, 0xF782F620, 0xBDEF7BDE,
    0x7BDEF7B8, 0x80000001, 0x03BDEF7B, 0x077BDEF7, 0x00000000, 0xEF7BDEE0, 0x01DEC40D,
    0xF403B5DE, 0xEF7BDE0F, 0xDEE2F7BD, 0x0005EF7B, 0xBDEE0000, 0x7BDC0EF7, 0x00001DEF,
    0x7B800000, 0xA837BDEF, 0xE8C07FFF, 0xF63037D3, 0xDEF07678, 0x17BDEF7B, 0x2F7BDEF7,
    0x70000000, 0xE077BDEF, 0x00EF7BDE, 0x00000000, 0xBDEF7BDC, 0x09E659C1, 0x3CCB3800,
    0xDEF7BDE1, 0xBDEE2F7B, 0x00005EF7, 0x7BDEE000, 0xF7BDC0EF, 0x000001DE, 0xF7B80000,
    0xF7237BDE, 0x4D7FE42F, 0x1BAC2F62, 0x00000000, 0xD8800000, 0xA3B5DE3B, 0x001BAC7F,
    0x00000000, 0xC3FFFD40, 0xC637D3E8, 0xD60ECF1E, 0x0000000D, 0x00000000, 0x3CCB3800,
    0x79967001, 0x00037582, 0x00000000, 0x00000000, 0xDEF7B9E0, 0xEF7D80BD, 0xB1806DFD,
    0xADF005E3, 0x7E78A800, 0x885F7D9F, 0x17DF67DF, 0x15001000, 0x15BE200F, 0x85E3FD40,
    0x36FF4F7D, 0xFCE78080, 0xFFD0FEB2, 0x7FC35F3E, 0xDF8A7D8C, 0x5CBEE01D, 0x180D1880,
    0x8F400E6B, 0x068EF00B, 0x78099CD4, 0xC77801C7, 0x017CD402, 0x0BC4007A, 0xE4017FB9,
    0xEC404D7F, 0xCF7DCC05, 0xF5FDE06F, 0xA8FFFB3D, 0x7F358A79, 0xC5F018CE, 0xDC6407AC,
    0x20048C00, 0x079F2300, 0x063BDC64, 0x9E6AB17C, 0x785FCD62, 0xFD9EF77F, 0x1DEC407F,
    0x0076BBC0, 0xBEE603FD, 0xFEF037E7, 0x7FFD9EFA, 0x9AC53CD4, 0xF80C673F, 0x3203D662,
    0x0246006E, 0xCF918010, 0x1DEE3203, 0x3558BE03, 0x2FE6B14F, 0xCF7BBFBC, 0xFF503FFE,
    0x4FA300FF, 0xC7B180DF, 0xBEE603B3, 0xFEF037E7, 0x7FFD9EFA, 0x9AC53CD4, 0xF80C673F,
    0x3203D662, 0x0246006E, 0xCF918010, 0x1DEE3203, 0x3558BE03, 0x2FE6B14F, 0xCF7BBFBC,
    0x01003FFE, 0xFD65F9CF, 0xBE7DFFA1, 0xFB18FF86, 0xCF7DCC14, 0xF5FDE06F, 0xA8FFFB3D,
    0x7F358A79, 0xC5F018CE, 0xDC6407AC, 0x20048C00, 0x079F2300, 0x063BDC64, 0x9E6AB17C,
    0x785FCD62, 0xFD9EF77F, 0x7996707F, 0xCB380002, 0xDF73013C, 0x7F781BF3, 0x3FFECF7D,
    0xCD629E6A, 0x7C06339F, 0x1901EB31, 0x01230037, 0xE7C8C008, 0x8EF71901, 0x9AAC5F01,
    0x17F358A7, 0x67BDDFDE, 0x857E1FFF, 0xCCAFC97A, 0xEFE7782F, 0xC7A3677B, 0xCE7434F3,
    0xEFCDF1A7, 0x2BE3677D, 0xF1004BF3, 0x7E73BF50, 0xFBEB4BF5, 0x6B7FB39F, 0x9593DBE5,
    0xB7899F99, 0x460F1BE2, 0x9C2639BD, 0x55D09AD7, 0x1A78CB98, 0x0EDC6473, 0xCFF9F19E,
    0x9CBE2787, 0xD7E78463, 0xE7BCCC69, 0xEF1C96FC, 0x83DF9CEF, 0xF900BFDC, 0xBD88135F,
    0xBF03FFE0, 0x0000003F, 0x00000000, 0x01EA0020, 0xA5F1DEB3, 0x8F62FCF8, 0x09D8F77B,
    0x778077B1, 0xC3FD00ED, 0x7F7E07FF, 0x00000000, 0x40000000, 0x6603D400, 0xF14BE3BD,
    0xF71EC5F9, 0xF513B1EE, 0x7D180FFF, 0x1EC606FA, 0x1FFF0ECF, 0x0001FDF8, 0x00000000,
    0x50010000, 0x8EF5980F, 0x17E7C52F, 0xC7BBDC7B, 0x4F32CE4E, 0xE659C000, 0xF81FFF09,
    0x000001FD, 0x00000000, 0x0F500100, 0x2F8EF598, 0x7B17E7C5, 0x4EC7BBDC, 0x7803BD88,
    0x7FA00ED7, 0xCE01DEF0, 0x4561A3AF, 0x78835BC7, 0xF365619F, 0xCE55746A, 0xFF467899,
    0xBE63B834, 0x00B118C0, 0x0000006B, 0x01FEF000, 0x77BDE400, 0xB7BDE42F, 0x77A817DF,
    0x28125006, 0x219DEA09, 0xBEFDBDEF, 0x2F77BDE4, 0xFEB00000, 0xDE783F77, 0xE0DF7EF7,
    0x662A653C, 0x63780212, 0x00067301, 0xE807CE60, 0x6BD035F9, 0xF133F025, 0xBE43C5F0,
    0xC83FE6E7, 0xFF900BFD, 0x0BD88135, 0x37FDFFAC, 0x9DF73DFA, 0xAA877A8B, 0x04617B1F,
    0x9DEFFEF1, 0x9DEE79D8, 0x8C033C8C, 0xFC2E61B8, 0x32B39CE3, 0xF00EF620, 0x7FA01DAE,
    0xBFEFFD60, 0xEFB9EFD1, 0x543BD45C, 0x230BD8FD, 0xEF7FF788, 0xEF73CEC4, 0x6019E464,
    0xE1730DC4, 0x959CE71F, 0x07FFFA81, 0x037D3E8C, 0x07678F63, 0x1BFEFFD6, 0xCEFB9EFD,
    0xD543BD45, 0x8230BD8F, 0x4EF7FF78, 0x4EF73CEC, 0x46019E46, 0xFE1730DC, 0x1959CE71,
    0x7E73C080, 0xBFF47F59, 0x8FF8D7CF, 0xFD614FB1, 0xEFD1BFEF, 0xD45CEFB9, 0xD8FD543B,
    0xF788230B, 0xCEC4EF7F, 0xE464EF73, 0x0DC46019, 0xE71FE173, 0x59C1959C, 0x380009E6,
    0xF5813CCB, 0xBF46FFBF, 0x5173BEE7, 0x63F550EF, 0xDE208C2F, 0x3B13BDFF, 0x9193BDCF,
    0x37118067, 0x9C7F85CC, 0x9E065673, 0xF7806FDF, 0xFDE0BEF7, 0xBF3C07BD, 0xDFFAC15F,
    0x73DFA37F, 0x77A8B9DF, 0x17B1FAA8, 0xFFEF1046, 0xE79D89DE, 0x33C8C9DE, 0xE61B88C0,
    0x39CE3FC2, 0xE77E432B, 0x9CEFCAEE, 0x6FB1B92F, 0xAEB9D77D, 0xF18EA6E1, 0xE33E5F89,
    0x7F08505F, 0xEBDCEFCF, 0x515EF7B9, 0x5AF7B8DF, 0xDF7BDEF7, 0x900F03A1, 0x1BD37CA6,
    0xFE9F2FC6, 0x71DF6BDD, 0xFA831DEF, 0xF506F3DD, 0x7F9DDFFB, 0xA3D94E7A, 0xFD8C5C62,
    0x03046030, 0xB7917188, 0x1DE29CF4, 0x7BFF7EA5, 0xB17EA373, 0x03D7605E, 0xDC82AF62,
    0x5FF900BF, 0x40BD8813, 0xD469EEFD, 0x79FFEFB7, 0x6FC65AE9, 0xF28D8E46, 0xFBDEF784,
    0xDEF77C17, 0x1B919F7B, 0xB58B9E92, 0xF7DBF3C3, 0xEC4077FC, 0x3B5DE01D, 0xFD40FF40,
    0xB7D469EE, 0xE979FFEF, 0x466FC65A, 0x84F28D8E, 0x17FBDEF7, 0x7BDEF77C, 0x921B919F,
    0xC3B58B9E, 0xFCF7DBF3, 0xFFFEA077, 0xDF4FA301, 0xD9E3D8C0, 0xD3DDFA81, 0xFFDF6FA8,
    0x8CB5D2F3, 0x1B1C8CDF, 0xBDEF09E5, 0xEEF82FF7, 0x233EF7BD, 0x173D2437, 0xB7E7876B,
    0xE0EFF9EF, 0x0004F32C, 0x409E659C, 0xD469EEFD, 0x79FFEFB7, 0x6FC65AE9, 0xF28D8E46,
    0xFBDEF784, 0xDEF77C17, 0x1B919F7B, 0xB58B9E92, 0xF7DBF3C3, 0xFEE477FC, 0x14D7FE45,
    0x03FBF17B, 0xC4000000, 0x1DAEF1DE, 0x07F7E3FD, 0x40000000, 0xE8C3FFFD, 0x1EC637D3,
    0x7F7E0ECF, 0x00000000, 0x659C0000, 0xCB38009E, 0x0FEFC13C, 0x00000000, 0xFD000000,
    0x7DFC187B, 0xBF3CD7FB, 0x9D179E39, 0x5FDE2F3F, 0xEF8CAAFD, 0xF1FF1D9E, 0x3DFCE71F,
    0x2B50E8EF, 0x88C00156, 0x1EBF5055, 0x6637C46F, 0x1DAF71EE, 0x2FCE7840, 0x7DFFAFEB,
    0x631FF6BE, 0xCFABBA9F, 0x7FF785F9, 0x8F99FCF6, 0x0DC5CA7C, 0x00000000, 0x4017FB90,
    0xC404D7FE, 0xCEF8C05E, 0x3FE40DF9, 0xC1FF1DCF, 0x9B3A2D9B, 0x88F7E0A7, 0x022220B8,
    0x0FCF08DC, 0xE9B3A1EA, 0x9C7FC66C, 0x6201FF93, 0xB5DE00EF, 0x301FE803, 0x037E73BE,
    0xC773CFF9, 0x8B66F07F, 0xF829E6CE, 0x882E223D, 0xC2370088, 0xE87A83F3, 0xF19B3A6C,
    0x7FE4E71F, 0x03FFFD40, 0x037D3E8C, 0x0ECF1EC6, 0xBF39DF18, 0xB9E7FC81, 0xB3783FE3,
    0x14F36745, 0x17111EFC, 0x1B804444, 0x3D41F9E1, 0xCD9D3674, 0xF2738FF8, 0x9E02003F,
    0x43FACBF3, 0x0D7CFBFF, 0x29F631FF, 0xBF39DF18, 0xB9E7FC81, 0xB3783FE3, 0x14F36745,
    0x17111EFC, 0x1B804444, 0x3D41F9E1, 0xCD9D3674, 0xF2738FF8, 0x7996703F, 0xCB380002,
    0x3BE3013C, 0xFF9037E7, 0x07FC773C, 0x6CE8B66F, 0x23DF829E, 0x088882E2, 0x3F3C2370,
    0xA6CE87A8, 0x71FF19B3, 0xD807FE4E, 0xFEC0001F, 0x7BDC6000, 0x8EF7BDEF, 0xF7BDEF7B,
    0x3FB0005E, 0x02FC0000, 0x33B39DF9, 0xE6F79DC8, 0x58E8F41A, 0xE1EA69F3, 0xAE22EEF7,
    0x5C429159, 0x550A4FDF, 0xC57E93CF, 0x674FBF9B, 0x9FF8E633, 0xF6781FF1, 0xDC81BF39,
    0xD7FE40BF, 0xBB8BD884, 0x00002EB0, 0x82E20000, 0x7EBD427A, 0x20B39EEB, 0x6BBC0EF6,
    0x5DC7FA07, 0x00001758, 0x41710000, 0xBF5EA13D, 0xA859CF75, 0xFA307FFF, 0x8F630DF4,
    0x585DC767, 0x00000017, 0x3D417100, 0x75BF5EA1, 0x659C59CF, 0xCB38009E, 0xD617713C,
    0x00000005, 0x4F505C40, 0xDD6FD7A8, 0xDEC41673, 0x01DAEF01, 0xE07BC3FD, 0x543C5FBC,
    0xFF0F237C, 0xAC27BE1C, 0xC5562787, 0x3FFFD647, 0x07D6A712, 0x2AA0584F, 0xA3D01D40,
    0xE171DCF0, 0x000003FD, 0xDDFFAC00, 0x79FFDE45, 0xBC5B21BE, 0x03D603E3, 0x0046008C,
    0xBC4B91EB, 0xCFFD27E3, 0x7FEB25F3, 0xE0000177, 0x0004F32C, 0xDE279967, 0xE2FDE703,
    0x791BE2A1, 0x3DF0E7F8, 0xB13C3D61, 0xFEB23E2A, 0xB53891FF, 0x02C2783E, 0x80EA0155,
    0x8EE7851E, 0x0000000B
EW_END_OF_FONT_RES( FlatFontS )

/* Table with links to derived variants of the font resource : 'Flat::FontS' */
EW_RES_WITHOUT_VARIANTS( FlatFontS )

/* Font resources used for the different widgets. If you want to change the fonts 
   within your project, just create a variant of these font resources and define 
   the attributes of the font resources according your design ideas. */
EW_DEFINE_FONT_RES( FlatFontM, 22, 6, 0, 16, 0x0001, 0x00C0 )
  EW_GLYPH( 0x0001, 1, -16, 8, 16, 10, 0x00000000 ),
  EW_GLYPH( 0x0020, 0, 0, 0, 0, 6, 0x0000018A ),                /* ' ' */
  EW_GLYPH( 0x0021, 1, -16, 4, 16, 6, 0x0000018A ),             /* '!' */
  EW_GLYPH( 0x0022, 1, -17, 6, 5, 7, 0x000001FE ),              /* '"' */
  EW_GLYPH( 0x0023, 1, -16, 13, 16, 14, 0x00000246 ),           /* '#' */
  EW_GLYPH( 0x0024, 1, -19, 11, 22, 13, 0x00000496 ),           /* '$' */
  EW_GLYPH( 0x0025, 1, -16, 15, 16, 17, 0x0000077E ),           /* '%' */
  EW_GLYPH( 0x0026, 1, -16, 14, 16, 14, 0x00000A6D ),           /* '&' */
  EW_GLYPH( 0x0027, 1, -17, 2, 5, 4, 0x00000D51 ),              /* ''' */
  EW_GLYPH( 0x0028, 1, -18, 7, 23, 8, 0x00000D75 ),             /* '(' */
  EW_GLYPH( 0x0029, 0, -18, 7, 23, 8, 0x00000EF8 ),             /* ')' */
  EW_GLYPH( 0x002A, 0, -16, 10, 10, 10, 0x00001078 ),           /* '*' */
  EW_GLYPH( 0x002B, 0, -14, 13, 13, 13, 0x000011BE ),           /* '+' */
  EW_GLYPH( 0x002C, 0, -2, 4, 6, 5, 0x000012E5 ),               /* ',' */
  EW_GLYPH( 0x002D, 0, -8, 6, 2, 6, 0x00001330 ),               /* '-' */
  EW_GLYPH( 0x002E, 1, -2, 4, 2, 6, 0x00001357 ),               /* '.' */
  EW_GLYPH( 0x002F, 0, -16, 9, 17, 9, 0x00001370 ),             /* '/' */
  EW_GLYPH( 0x0030, 1, -16, 11, 16, 13, 0x000014CC ),           /* '0' */
  EW_GLYPH( 0x0031, 1, -16, 8, 16, 13, 0x000016CC ),            /* '1' */
  EW_GLYPH( 0x0032, 1, -16, 12, 16, 13, 0x000017B0 ),           /* '2' */
  EW_GLYPH( 0x0033, 1, -16, 11, 16, 13, 0x000019DA ),           /* '3' */
  EW_GLYPH( 0x0034, 0, -16, 13, 16, 13, 0x00001C2A ),           /* '4' */
  EW_GLYPH( 0x0035, 1, -16, 11, 16, 13, 0x00001DDF ),           /* '5' */
  EW_GLYPH( 0x0036, 1, -16, 11, 16, 13, 0x0000200B ),           /* '6' */
  EW_GLYPH( 0x0037, 0, -16, 12, 16, 13, 0x0000223F ),           /* '7' */
  EW_GLYPH( 0x0038, 1, -16, 11, 16, 13, 0x000023FE ),           /* '8' */
  EW_GLYPH( 0x0039, 1, -16, 11, 16, 13, 0x00002684 ),           /* '9' */
  EW_GLYPH( 0x003A, 1, -12, 4, 12, 6, 0x000028C6 ),             /* ':' */
  EW_GLYPH( 0x003B, 0, -12, 5, 16, 5, 0x00002929 ),             /* ';' */
  EW_GLYPH( 0x003C, 0, -12, 10, 10, 12, 0x000029CE ),           /* '<' */
  EW_GLYPH( 0x003D, 1, -11, 11, 7, 13, 0x00002B26 ),            /* '=' */
  EW_GLYPH( 0x003E, 1, -12, 11, 10, 12, 0x00002BF4 ),           /* '>' */
  EW_GLYPH( 0x003F, 0, -16, 10, 16, 11, 0x00002D68 ),           /* '?' */
  EW_GLYPH( 0x0040, 1, -16, 19, 21, 21, 0x00002F09 ),           /* '@' */
  EW_GLYPH( 0x0041, 0, -16, 15, 16, 15, 0x00003406 ),           /* 'A' */
  EW_GLYPH( 0x0042, 1, -16, 12, 16, 14, 0x0000365D ),           /* 'B' */
  EW_GLYPH( 0x0043, 1, -16, 13, 16, 15, 0x0000384E ),           /* 'C' */
  EW_GLYPH( 0x0044, 1, -16, 13, 16, 15, 0x00003A9B ),           /* 'D' */
  EW_GLYPH( 0x0045, 1, -16, 12, 16, 13, 0x00003C80 ),           /* 'E' */
  EW_GLYPH( 0x0046, 1, -16, 11, 16, 13, 0x00003DF3 ),           /* 'F' */
  EW_GLYPH( 0x0047, 1, -16, 13, 16, 16, 0x00003F2A ),           /* 'G' */
  EW_GLYPH( 0x0048, 1, -16, 14, 16, 16, 0x0000417C ),           /* 'H' */
  EW_GLYPH( 0x0049, 2, -16, 3, 16, 6, 0x000042BB ),             /* 'I' */
  EW_GLYPH( 0x004A, 0, -16, 11, 16, 13, 0x000042F7 ),           /* 'J' */
  EW_GLYPH( 0x004B, 1, -16, 14, 16, 14, 0x00004439 ),           /* 'K' */
  EW_GLYPH( 0x004C, 1, -16, 11, 16, 12, 0x0000464A ),           /* 'L' */
  EW_GLYPH( 0x004D, 1, -16, 18, 16, 20, 0x0000472A ),           /* 'M' */
  EW_GLYPH( 0x004E, 1, -16, 14, 16, 16, 0x0000499F ),           /* 'N' */
  EW_GLYPH( 0x004F, 1, -16, 14, 16, 16, 0x00004B57 ),           /* 'O' */
  EW_GLYPH( 0x0050, 2, -16, 12, 16, 15, 0x00004DC8 ),           /* 'P' */
  EW_GLYPH( 0x0051, 1, -16, 14, 19, 16, 0x00004F78 ),           /* 'Q' */
  EW_GLYPH( 0x0052, 1, -16, 13, 16, 14, 0x0000526A ),           /* 'R' */
  EW_GLYPH( 0x0053, 1, -16, 12, 16, 14, 0x00005455 ),           /* 'S' */
  EW_GLYPH( 0x0054, 0, -16, 14, 16, 14, 0x00005708 ),           /* 'T' */
  EW_GLYPH( 0x0055, 1, -16, 13, 16, 15, 0x00005850 ),           /* 'U' */
  EW_GLYPH( 0x0056, 0, -16, 15, 16, 15, 0x000059DC ),           /* 'V' */
  EW_GLYPH( 0x0057, 0, -16, 20, 16, 20, 0x00005C1E ),           /* 'W' */
  EW_GLYPH( 0x0058, 0, -16, 14, 16, 14, 0x00005F64 ),           /* 'X' */
  EW_GLYPH( 0x0059, 0, -16, 14, 16, 14, 0x000061DF ),           /* 'Y' */
  EW_GLYPH( 0x005A, 1, -16, 12, 16, 14, 0x000063AE ),           /* 'Z' */
  EW_GLYPH( 0x005B, 1, -19, 5, 23, 6, 0x000065AA ),             /* '[' */
  EW_GLYPH( 0x005C, 0, -16, 10, 17, 9, 0x0000664E ),            /* '\' */
  EW_GLYPH( 0x005D, 0, -19, 5, 23, 6, 0x000067C1 ),             /* ']' */
  EW_GLYPH( 0x005E, 0, -16, 9, 8, 10, 0x00006865 ),             /* '^' */
  EW_GLYPH( 0x005F, 0, 0, 11, 2, 10, 0x0000693C ),              /* '_' */
  EW_GLYPH( 0x0060, 0, -17, 6, 3, 7, 0x0000697F ),              /* '`' */
  EW_GLYPH( 0x0061, 1, -12, 11, 12, 13, 0x000069C4 ),           /* 'a' */
  EW_GLYPH( 0x0062, 1, -17, 11, 17, 13, 0x00006B99 ),           /* 'b' */
  EW_GLYPH( 0x0063, 1, -12, 11, 12, 12, 0x00006D57 ),           /* 'c' */
  EW_GLYPH( 0x0064, 1, -17, 11, 17, 13, 0x00006F0A ),           /* 'd' */
  EW_GLYPH( 0x0065, 1, -12, 11, 12, 12, 0x000070D4 ),           /* 'e' */
  EW_GLYPH( 0x0066, 0, -18, 8, 18, 8, 0x0000729F ),             /* 'f' */
  EW_GLYPH( 0x0067, 1, -12, 11, 17, 13, 0x000073B3 ),           /* 'g' */
  EW_GLYPH( 0x0068, 1, -17, 11, 17, 13, 0x00007612 ),           /* 'h' */
  EW_GLYPH( 0x0069, 1, -16, 4, 16, 6, 0x00007750 ),             /* 'i' */
  EW_GLYPH( 0x006A, -1, -16, 5, 21, 5, 0x000077BF ),            /* 'j' */
  EW_GLYPH( 0x006B, 1, -18, 11, 18, 12, 0x00007878 ),           /* 'k' */
  EW_GLYPH( 0x006C, 1, -18, 3, 18, 6, 0x00007A26 ),             /* 'l' */
  EW_GLYPH( 0x006D, 1, -12, 18, 12, 20, 0x00007A6A ),           /* 'm' */
  EW_GLYPH( 0x006E, 1, -12, 11, 12, 13, 0x00007C2D ),           /* 'n' */
  EW_GLYPH( 0x006F, 1, -12, 11, 12, 13, 0x00007D35 ),           /* 'o' */
  EW_GLYPH( 0x0070, 1, -12, 11, 17, 13, 0x00007F07 ),           /* 'p' */
  EW_GLYPH( 0x0071, 1, -12, 11, 17, 13, 0x000080CE ),           /* 'q' */
  EW_GLYPH( 0x0072, 1, -12, 7, 12, 8, 0x000082AE ),             /* 'r' */
  EW_GLYPH( 0x0073, 1, -12, 10, 12, 12, 0x00008350 ),           /* 's' */
  EW_GLYPH( 0x0074, 0, -15, 7, 15, 8, 0x0000853A ),             /* 't' */
  EW_GLYPH( 0x0075, 1, -12, 11, 12, 13, 0x0000860A ),           /* 'u' */
  EW_GLYPH( 0x0076, 0, -12, 11, 12, 11, 0x00008709 ),           /* 'v' */
  EW_GLYPH( 0x0077, 0, -12, 17, 12, 17, 0x0000887C ),           /* 'w' */
  EW_GLYPH( 0x0078, 0, -12, 11, 12, 11, 0x00008AD8 ),           /* 'x' */
  EW_GLYPH( 0x0079, 0, -12, 11, 17, 11, 0x00008C81 ),           /* 'y' */
  EW_GLYPH( 0x007A, 1, -12, 10, 12, 11, 0x00008E7C ),           /* 'z' */
  EW_GLYPH( 0x007B, 0, -18, 8, 22, 8, 0x00008FE7 ),             /* '{' */
  EW_GLYPH( 0x007C, 2, -16, 2, 19, 6, 0x0000917F ),             /* '|' */
  EW_GLYPH( 0x007D, 0, -18, 8, 22, 8, 0x000091AE ),             /* '}' */
  EW_GLYPH( 0x007E, 1, -9, 14, 5, 16, 0x0000933C ),             /* '~' */
  EW_GLYPH( 0x00A0, 0, 0, 0, 0, 6, 0x00009444 ),
  EW_GLYPH( 0x00A1, 1, -12, 4, 16, 6, 0x00009444 ),
  EW_GLYPH( 0x00A2, 1, -15, 11, 18, 13, 0x000094BF ),
  EW_GLYPH( 0x00A3, 0, -16, 13, 16, 13, 0x000096E1 ),
  EW_GLYPH( 0x00A4, 1, -15, 15, 16, 16, 0x000098E1 ),
  EW_GLYPH( 0x00A5, 0, -16, 14, 16, 14, 0x00009BD6 ),
  EW_GLYPH( 0x00A6, 1, -16, 3, 19, 6, 0x00009E1D ),
  EW_GLYPH( 0x00A7, 1, -16, 12, 22, 14, 0x00009E83 ),
  EW_GLYPH( 0x00A8, 1, -16, 8, 2, 10, 0x0000A23A ),
  EW_GLYPH( 0x00A9, 1, -16, 16, 16, 18, 0x0000A26A ),
  EW_GLYPH( 0x00AA, 1, -16, 8, 9, 10, 0x0000A5FD ),
  EW_GLYPH( 0x00AB, 1, -11, 10, 9, 11, 0x0000A70C ),
  EW_GLYPH( 0x00AC, 1, -9, 10, 5, 13, 0x0000A866 ),
  EW_GLYPH( 0x00AD, 0, -8, 6, 2, 6, 0x0000A8E5 ),
  EW_GLYPH( 0x00AE, 1, -16, 16, 16, 18, 0x0000A90C ),
  EW_GLYPH( 0x00AF, 1, -17, 9, 2, 11, 0x0000AC3E ),
  EW_GLYPH( 0x00B0, 1, -16, 7, 6, 9, 0x0000AC76 ),
  EW_GLYPH( 0x00B1, 1, -15, 11, 15, 12, 0x0000AD10 ),
  EW_GLYPH( 0x00B2, 0, -16, 8, 9, 8, 0x0000AE63 ),
  EW_GLYPH( 0x00B3, 0, -16, 8, 9, 8, 0x0000AF63 ),
  EW_GLYPH( 0x00B4, 1, -17, 6, 3, 7, 0x0000B087 ),
  EW_GLYPH( 0x00B5, 1, -12, 11, 17, 13, 0x0000B0C4 ),
  EW_GLYPH( 0x00B6, 0, -16, 10, 16, 11, 0x0000B21A ),
  EW_GLYPH( 0x00B7, 1, -9, 4, 3, 6, 0x0000B33D ),
  EW_GLYPH( 0x00B8, 1, 0, 4, 5, 6, 0x0000B372 ),
  EW_GLYPH( 0x00B9, 1, -16, 5, 9, 8, 0x0000B3CE ),
  EW_GLYPH( 0x00BA, 1, -16, 8, 9, 10, 0x0000B43B ),
  EW_GLYPH( 0x00BB, 1, -11, 9, 9, 11, 0x0000B554 ),
  EW_GLYPH( 0x00BC, 1, -16, 15, 16, 17, 0x0000B6B1 ),
  EW_GLYPH( 0x00BD, 1, -16, 16, 16, 18, 0x0000B925 ),
  EW_GLYPH( 0x00BE, 1, -16, 16, 16, 18, 0x0000BBDB ),
  EW_GLYPH( 0x00BF, 0, -12, 10, 16, 11, 0x0000BF03 ),
  EW_GLYPH( 0x00C0, 0, -20, 15, 20, 15, 0x0000C09D ),
  EW_GLYPH( 0x00C1, 0, -20, 15, 20, 15, 0x0000C373 ),
  EW_GLYPH( 0x00C2, 0, -20, 15, 20, 15, 0x0000C63C ),
  EW_GLYPH( 0x00C3, 0, -21, 15, 21, 15, 0x0000C926 ),
  EW_GLYPH( 0x00C4, 0, -19, 15, 19, 15, 0x0000CC51 ),
  EW_GLYPH( 0x00C5, 0, -22, 15, 22, 15, 0x0000CF10 ),
  EW_GLYPH( 0x00C6, -1, -16, 23, 16, 22, 0x0000D243 ),
  EW_GLYPH( 0x00C7, 1, -16, 13, 21, 15, 0x0000D568 ),
  EW_GLYPH( 0x00C8, 1, -20, 12, 20, 13, 0x0000D84B ),
  EW_GLYPH( 0x00C9, 1, -20, 12, 20, 13, 0x0000DA31 ),
  EW_GLYPH( 0x00CA, 1, -20, 12, 20, 13, 0x0000DC0A ),
  EW_GLYPH( 0x00CB, 1, -19, 12, 19, 13, 0x0000DE04 ),
  EW_GLYPH( 0x00CC, -1, -20, 6, 20, 6, 0x0000DFD6 ),
  EW_GLYPH( 0x00CD, 2, -20, 6, 20, 6, 0x0000E09D ),
  EW_GLYPH( 0x00CE, -1, -20, 8, 20, 6, 0x0000E157 ),
  EW_GLYPH( 0x00CF, -1, -19, 8, 19, 6, 0x0000E25A ),
  EW_GLYPH( 0x00D0, 0, -16, 15, 16, 15, 0x0000E339 ),
  EW_GLYPH( 0x00D1, 1, -21, 14, 21, 16, 0x0000E568 ),
  EW_GLYPH( 0x00D2, 1, -20, 14, 20, 16, 0x0000E7EF ),
  EW_GLYPH( 0x00D3, 1, -20, 14, 20, 16, 0x0000EADB ),
  EW_GLYPH( 0x00D4, 1, -20, 14, 20, 16, 0x0000EDBA ),
  EW_GLYPH( 0x00D5, 1, -21, 14, 21, 16, 0x0000F0BA ),
  EW_GLYPH( 0x00D6, 1, -19, 14, 19, 16, 0x0000F3FA ),
  EW_GLYPH( 0x00D7, 1, -13, 11, 11, 12, 0x0000F6D0 ),
  EW_GLYPH( 0x00D8, 1, -17, 14, 18, 16, 0x0000F87B ),
  EW_GLYPH( 0x00D9, 1, -20, 13, 20, 15, 0x0000FBA3 ),
  EW_GLYPH( 0x00DA, 1, -20, 13, 20, 15, 0x0000FDA6 ),
  EW_GLYPH( 0x00DB, 1, -20, 13, 20, 15, 0x0000FF9C ),
  EW_GLYPH( 0x00DC, 1, -19, 13, 19, 15, 0x000101B3 ),
  EW_GLYPH( 0x00DD, 0, -20, 14, 20, 14, 0x000103A1 ),
  EW_GLYPH( 0x00DE, 2, -16, 11, 16, 14, 0x000105DE ),
  EW_GLYPH( 0x00DF, 1, -18, 12, 18, 14, 0x0001077B ),
  EW_GLYPH( 0x00E0, 1, -17, 11, 17, 13, 0x000109BD ),
  EW_GLYPH( 0x00E1, 1, -17, 11, 17, 13, 0x00010C0C ),
  EW_GLYPH( 0x00E2, 1, -17, 11, 17, 13, 0x00010E4E ),
  EW_GLYPH( 0x00E3, 1, -18, 11, 18, 13, 0x000110B1 ),
  EW_GLYPH( 0x00E4, 1, -16, 11, 16, 13, 0x00011351 ),
  EW_GLYPH( 0x00E5, 1, -18, 11, 18, 13, 0x0001158D ),
  EW_GLYPH( 0x00E6, 0, -12, 19, 12, 19, 0x00011826 ),
  EW_GLYPH( 0x00E7, 1, -12, 11, 17, 12, 0x00011B6B ),
  EW_GLYPH( 0x00E8, 1, -17, 11, 17, 12, 0x00011DAB ),
  EW_GLYPH( 0x00E9, 1, -17, 11, 17, 12, 0x00011FF0 ),
  EW_GLYPH( 0x00EA, 1, -17, 11, 17, 12, 0x00012228 ),
  EW_GLYPH( 0x00EB, 1, -16, 11, 16, 12, 0x00012481 ),
  EW_GLYPH( 0x00EC, -1, -17, 6, 17, 6, 0x000126B3 ),
  EW_GLYPH( 0x00ED, 1, -17, 6, 17, 6, 0x0001276A ),
  EW_GLYPH( 0x00EE, -1, -17, 8, 17, 6, 0x00012814 ),
  EW_GLYPH( 0x00EF, -1, -16, 8, 16, 6, 0x00012901 ),
  EW_GLYPH( 0x00F0, 1, -18, 11, 18, 13, 0x000129CA ),
  EW_GLYPH( 0x00F1, 1, -18, 11, 18, 13, 0x00012C7A ),
  EW_GLYPH( 0x00F2, 1, -17, 11, 17, 13, 0x00012E4D ),
  EW_GLYPH( 0x00F3, 1, -17, 11, 17, 13, 0x00013099 ),
  EW_GLYPH( 0x00F4, 1, -17, 11, 17, 13, 0x000132D8 ),
  EW_GLYPH( 0x00F5, 1, -18, 11, 18, 13, 0x00013538 ),
  EW_GLYPH( 0x00F6, 1, -16, 11, 16, 13, 0x000137D5 ),
  EW_GLYPH( 0x00F7, 0, -13, 12, 10, 13, 0x00013A0E ),
  EW_GLYPH( 0x00F8, 1, -14, 12, 16, 13, 0x00013B15 ),
  EW_GLYPH( 0x00F9, 1, -17, 11, 17, 13, 0x00013D8B ),
  EW_GLYPH( 0x00FA, 1, -17, 11, 17, 13, 0x00013F04 ),
  EW_GLYPH( 0x00FB, 1, -17, 11, 17, 13, 0x00014070 ),
  EW_GLYPH( 0x00FC, 1, -16, 11, 16, 13, 0x000141FD ),
  EW_GLYPH( 0x00FD, 0, -17, 11, 22, 11, 0x00014363 ),
  EW_GLYPH( 0x00FE, 1, -17, 11, 22, 13, 0x000145CB ),
  EW_GLYPH( 0x00FF, 0, -16, 11, 21, 11, 0x000147EC ),

  EW_FONT_PIXEL( FlatFontM, 0x00014A4E )                        /* ratio 64.78 % */
    0xEF7BDEF7, 0xF7BBF5BD, 0x4072AFDE, 0xA2A831A6, 0x9381EC7E, 0xFBF30FE3, 0x0000E01E,
    0xF7DF980E, 0x47F1C9C0, 0x3183D8FD, 0x320392A8, 0xBDEF77EB, 0x00BDC55F, 0x24000200,
    0x6DE1F300, 0xC07FFF10, 0x00DCF1BA, 0x04124208, 0xC63FD803, 0xCD8E407D, 0x1E501E2F,
    0x7BFF079E, 0xB37BFF5F, 0xF8001FEE, 0xDEEB1BDF, 0x91FEFFD7, 0x6091B871, 0xE01E7879,
    0x781C831F, 0xEF715DEF, 0x002F758D, 0xDD6BDEF0, 0x18BDCEDB, 0xC023FCFE, 0xE01F3163,
    0x30063244, 0x5800E192, 0x07FD1005, 0xB5DF9000, 0x9FB1857E, 0xE87BF510, 0x8F3DFFA8,
    0x52F9445F, 0x8085197C, 0xE0784647, 0xF7EBD3DD, 0xB584620E, 0x80EFFDCC, 0xDD732BDE,
    0xAFFFEC82, 0x7EA04BE2, 0x3EEFDF15, 0x0D862FE0, 0x85733F0E, 0x4B1ED358, 0x9E3A7B9F,
    0xA2157F47, 0xEFCF0FDE, 0x009BF7E7, 0x80F39E00, 0x00FFF7DA, 0xFB77DF18, 0x4C77802B,
    0x8D58B8CF, 0xF24CF139, 0xE6F000BD, 0xA6785CC2, 0xC7785CF9, 0x3D1B8CF2, 0xEFDF8C07,
    0x365F57F6, 0x9FFEFB50, 0xDFF9F759, 0x6BD100FD, 0xAFBF7D7D, 0x19F46FC0, 0x3C0E398F,
    0xAC2D6BCF, 0x0059E885, 0x585ACD68, 0xCE0DE30B, 0xF838E698, 0xF77DF50A, 0xFFE88AFB,
    0xF801BFFD, 0x0FF394AF, 0x777E233C, 0xCD20518F, 0x84027E32, 0x8AC136C4, 0x35ABF91A,
    0xECE2FC40, 0x22B01BA7, 0xDA805BE3, 0x278C5C31, 0x55DBE7E4, 0x3A97DF1F, 0x9EAFC7DE,
    0xE14B48F6, 0x151DEB1B, 0x73FC42A6, 0x33BDFCBA, 0xE62C1CC4, 0xA7B9EF13, 0xF7C13863,
    0xB7E7C855, 0x7FFE7E67, 0x7C030961, 0xCBE0BB09, 0xEF3CF27F, 0x93C2C740, 0x3C1F8E13,
    0x81E23031, 0x00012129, 0x61298120, 0x189E03C4, 0x9983F7F0, 0x782C7413, 0x97C0779E,
    0xD52F6127, 0x7EA0FCC0, 0xACF3C34F, 0xD642ED01, 0xB07C7018, 0x40646414, 0x0026584A,
    0x9484CB00, 0x2940C888, 0x8D443EB8, 0x9A8B8E81, 0xA7BE306B, 0xF007E6B1, 0x209803FF,
    0xDF798408, 0x35BBEA5A, 0x7EAAFE72, 0xE7D9E3CF, 0xA15F9D61, 0xE7C05446, 0xEAA346FC,
    0x5266A7CD, 0x13FEF17B, 0x8007BF58, 0x00000953, 0x71000000, 0xDF53BDEF, 0x80006F7B,
    0xA9DEF7B8, 0x0037BDEF, 0x00000000, 0x59F40000, 0x20177BC0, 0x4F18D63D, 0xBDEF3F1A,
    0x7181FEF7, 0xDE4001FE, 0xC07CF817, 0xF89E01AC, 0xC8262703, 0x07E7C09A, 0x89E01ACC,
    0x8262703F, 0x7E7C09AC, 0x6601ACC0, 0x4C7F81FC, 0x3F026A30, 0xCEF8C01F, 0xFA897FFD,
    0x3D9F213F, 0xF739E378, 0xE655715F, 0x6317F217, 0x4F280F6C, 0xA4EFE038, 0x00000801,
    0x00690000, 0xEFE038E2, 0x4F280F0C, 0x7F297E65, 0x9E378631, 0x5C57FDFF, 0x7884FFEA,
    0xFFD900F6, 0xAFFED721, 0x27CEFF14, 0x06FDEF50, 0x00019BF1, 0x00000000, 0x00000000,
    0xEFD40000, 0xA037FFDC, 0xF9F2157F, 0xDE2B3C3F, 0x3F15FF73, 0xFC86778E, 0x01E99445,
    0xC137FE0F, 0xE660078C, 0x6CE8C00A, 0x013BF8C0, 0x006FBF8C, 0x9015F7F9, 0xDE4057D7,
    0x671015F1, 0x11E8057C, 0xBDEF7BBF, 0x500006F7, 0x6FFF73BF, 0x72157FA0, 0xBC56A1DE,
    0xDA2BFEF7, 0x53F24EF1, 0x4881FB71, 0x1990959E, 0xF0D1D401, 0x77CBFBDE, 0x780EC402,
    0xF3CFDDEF, 0x8C6F8C07, 0xC4780B9A, 0xC4780FD7, 0xDF21EFCF, 0xBE2AB511, 0x3E33FF7B,
    0x9C856F7E, 0x7B9E00BB, 0x007E2003, 0xF50005F8, 0x68DE004C, 0x00BF9D00, 0x001EB318,
    0x8D600BD7, 0x1DE20137, 0x1717C00B, 0xEF7D9540, 0x04FB9CBD, 0xDEF73C00, 0xDCE5EF7B,
    0x00000007, 0x7BDEF7FE, 0x80245DEF, 0xF7BDEE30, 0x804D25DE, 0xFE520129, 0xD713DDCE,
    0x1FBC6153, 0x9EE75AFF, 0x5F9E3CF6, 0x01CB5887, 0x43003CF8, 0x10C07AC4, 0x78F017FA,
    0x306F89E2, 0x6B2FC75F, 0x7CC6FBDF, 0xD4435EC4, 0xEEF182F7, 0xE7BBC0BB, 0xEF99BE00,
    0x4F3C2EFF, 0xD78267FD, 0xF351880B, 0xE1EFEE77, 0xEA157F31, 0xBED6525B, 0xE30CE967,
    0x3E3F4437, 0x800D701E, 0xC980F0C9, 0xB5C06313, 0xFA253A63, 0xFE574789, 0xF93A59EE,
    0xA7B510F5, 0x7BDEF7B8, 0x0FF7BDEF, 0xEF7B8880, 0xF6DEF7BD, 0x02737801, 0xBC00F8AC,
    0x4C6600B1, 0x0178BF00, 0xF800AE66, 0xF19E00FC, 0x05EBC024, 0x800D4678, 0x31A805D7,
    0x00BDA00A, 0xFFF73BE3, 0x84FFEA26, 0xE2F8BB9C, 0xF15FF739, 0xE42FC8AA, 0x0984722F,
    0x1E09961E, 0x217E4F99, 0x7BE198BF, 0xCFFF739E, 0x2300C97C, 0xDCFA7DC4, 0x99BF9EB3,
    0x67E88573, 0xB60FEDCC, 0x715C121B, 0x9AC433BD, 0x3DE333F6, 0xDE55B4F7, 0xBF3C42AF,
    0xDDCEFD46, 0xC2AFE60B, 0xFAD91FE8, 0xF96A2FDC, 0xFCF0AE62, 0x3C3F867C, 0x609A6399,
    0xC1826199, 0x7C510FE3, 0xC9FEA2E6, 0x5FDEFA58, 0x21DFA9A6, 0xDCC90DE6, 0x8C63BCF7,
    0x905EBC00, 0xE0F55FF3, 0x9F37FFBD, 0xEFE6301F, 0x80FF38C3, 0x0001FE71, 0xFCE30000,
    0x0FF38C03, 0x007F9C60, 0xC0000000, 0xE480177B, 0x24F18CB1, 0xFD4007E3, 0x857FB980,
    0xD477FF58, 0x58F6FB27, 0xF633DFFF, 0x8274F7CA, 0xEBB8C035, 0x889DFEF9, 0x7FFD6D3E,
    0x3BFFAC0F, 0xFEE603EA, 0xDEF7B8D5, 0x01BDEF7B, 0xBDEF7180, 0x037BDEF7, 0xF7180000,
    0xBDEF7BDE, 0x3B300037, 0x6FED6201, 0xB3C7B300, 0xFEB103F7, 0x5FF7E67B, 0xEF3DE301,
    0x62201BEC, 0xD6DDF502, 0x7FFD6237, 0x15FF7E4F, 0xEF678F66, 0x6FED6207, 0xEE77E400,
    0x7EC64DFF, 0x6E9DCE42, 0x47FEE73C, 0x42F88C74, 0x81EE2B5E, 0x014B0030, 0xBC82F3F9,
    0xE6E203D1, 0x3673A05A, 0xACC03E50, 0x017EFC04, 0x019F6000, 0xFBE78000, 0x1EFFFBDF,
    0x9EFFF500, 0x0F6F9F24, 0xFCF97E60, 0xF7E7BDCE, 0xEA80FF8C, 0xA20ABFB1, 0x5E04EDBE,
    0xFF8C0077, 0x4BF95978, 0x37F73DE2, 0x1BE1EB19, 0xA19FF10F, 0xC73FC1DE, 0x3C7A1FC8,
    0x3CA0B6E7, 0xF8E7228F, 0x63888902, 0x027178F0, 0x42BF8086, 0xA624180E, 0x48889CC0,
    0x96039009, 0xC9699215, 0xCAEC9313, 0xFBE8E2BF, 0xBFFF278F, 0x51F155ED, 0x7F73C66F,
    0xA76A78CF, 0xFF326358, 0xCEF8CBE7, 0x3D1D12F9, 0x79F10001, 0xF3C493F7, 0xC73FD401,
    0x7CF7BFF7, 0xFFE30015, 0x3B58C93D, 0x17DEF000, 0x00159600, 0x005888CC, 0x007CFDFC,
    0x6353D546, 0xFDFCFC00, 0x2C6600FD, 0x89E02633, 0xC03C560A, 0x4077F071, 0x2B2A1656,
    0xDEF793E1, 0x0F07D37B, 0x79950780, 0xDEF7BDEF, 0x00F8E2CC, 0x04CA239F, 0xC66278CC,
    0x33288013, 0xDEF7BDEE, 0x9001EFFF, 0xEF70BDF5, 0x01CDA7BD, 0x400A5588, 0x05D2003A,
    0x71395BE4, 0x59FFBDEF, 0xC267801B, 0xDFDEF7BD, 0xED5009E8, 0x8024A007, 0xCFCF0012,
    0xDEF7BDC2, 0xA203462F, 0xF7B2077A, 0xE603BBBD, 0xF6B1835E, 0xF678DEA0, 0xD0F2BBBD,
    0xBF1837E6, 0x788C6B91, 0x052ECF81, 0xFE3FFD58, 0x00135880, 0x70000000, 0x54F101FC,
    0xEEFAC029, 0xB3E068C8, 0x8C9BD6BD, 0xDEA5C8DF, 0x777BFF98, 0x33DCC5E5, 0x8A7FE8C5,
    0xE7BDEF7B, 0x7A880137, 0x7BDC03FF, 0x9FF2AFEF, 0xE27BF500, 0x1A8BE005, 0xC0052C00,
    0x052007F1, 0x05200000, 0x401FC700, 0x8BE0052C, 0xBB3C401A, 0xEF7B85E2, 0x13FE46F9,
    0x07FEF510, 0xF7BDEF71, 0x006F7BDE, 0xF7BDEE00, 0x00037BDE, 0x00000000, 0x7BDEF700,
    0x80000DEF, 0xF7BDEF7B, 0x00000006, 0xDC000000, 0xF7BDEF7B, 0x7B88000E, 0xDEF7BDEF,
    0x7B80017B, 0x5EF7BDEF, 0x00000000, 0xF7BDC000, 0x0007FBDE, 0xBDEF7BDC, 0x0000007F,
    0x00000000, 0xFFDF2000, 0xE613BBBD, 0xBB58C99E, 0xBEE637A8, 0xE97C5777, 0xF8C1DEB5,
    0xA3237C55, 0x014AAB81, 0x0123EEEA, 0xB80002E0, 0xB97BDEF7, 0xEE035C00, 0x24F287BD,
    0x0178AC80, 0x115FA8E8, 0x8BE309F5, 0x7E7BDDFA, 0x7B751F15, 0x15BEA884, 0xEEFC02F7,
    0x00000002, 0x00000000, 0xDC000000, 0xF7BDEF7B, 0xEE000016, 0x7BDEF7BD, 0x0000000B,
    0x00000000, 0xB8000000, 0x00000077, 0x80000000, 0x0000FF71, 0x00000000, 0x00000000,
    0x40000000, 0xD42C1AFD, 0x8CACDB04, 0xF96B10DF, 0x3DF6A37B, 0xCF6A99ED, 0xE27DF514,
    0x9DCF205E, 0x9AC6F200, 0x36727100, 0x5E78FF80, 0x1F51BF00, 0x07C6AF80, 0x1FF27BE0,
    0x0198FD00, 0x0BD66560, 0xF989EE20, 0xB473FC00, 0x7306025F, 0x3BC005C6, 0x89C003F2,
    0x9F900167, 0x15A800B7, 0x01BDC66F, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xDCE00000, 0x7FBDEF7B, 0x7FBDC400, 0x81BDF600, 0x0031802C, 0x3203E007, 0xC562009E,
    0x6604D300, 0x01F3E02C, 0x64602F9F, 0x359503E5, 0x1C0EB840, 0x92B2A007, 0xC00C7CA8,
    0x43C663E7, 0x3E4C6600, 0x3151002F, 0xC0009F2B, 0x001D7FEB, 0x0B2AA318, 0x007C7C00,
    0x80988CC0, 0xDC009EE7, 0x0007C41B, 0x7420026A, 0xF13CF000, 0x3597E001, 0x07578801,
    0x07C4F500, 0x04D65F80, 0x001D5E20, 0x001F13D4, 0x8013597E, 0xEA003578, 0x25F80009,
    0x640BC400, 0x0AF67BEF, 0x310D7B50, 0x2F8C0F7A, 0xAEEF7D9E, 0xE63707FC, 0x8ABF1837,
    0x40BC4636, 0x46014A5B, 0x807F1D46, 0x02900129, 0x8A400000, 0x65300FE3, 0xA8C8C029,
    0x5A05E231, 0x837E6371, 0x31F8ABF1, 0xBDF678BE, 0xA81FF2BB, 0xBD1886BB, 0xEF7BFF07,
    0x0DFFF7BD, 0x85ECF900, 0xFF7BDEEF, 0xDF201753, 0x5BF800E9, 0x9B600000, 0xE1CB5C80,
    0x7FDEF7BB, 0x9F200F9B, 0xDEEF8BDF, 0x015FFF7B, 0x00000000, 0xC8000000, 0x15ECF7DE,
    0x621AF6A0, 0x5F181EF4, 0x5DDEFB3C, 0xCC6E0FF9, 0x157E306F, 0x81788C6D, 0x8C0294B6,
    0x00FE3A8C, 0x52000E53, 0x80030000, 0x601FC714, 0x918052CA, 0x2F118CF1, 0x98DC2AD0,
    0x2AFC60DF, 0x9E2F8C7E, 0xFCAEEF7D, 0x21AF6A07, 0x7B2098D2, 0xF8EFF3DF, 0x2FD6005E,
    0xF6A000D6, 0xEF7B8C7F, 0x3DFFF7BD, 0xBDF3E400, 0xFF7BDEE0, 0x5C804E6D, 0x9F801FCB,
    0xF0000007, 0x2F6400F3, 0xF7BDEE17, 0x880174BF, 0xF7BDC0BD, 0x6800788E, 0x89EA001D,
    0x0E63A006, 0x00BAF900, 0xE8931CAC, 0x4DFFEE7D, 0xC846BB8C, 0x6A2727B9, 0xD15FFBDF,
    0x837F32A3, 0x986F19EC, 0x9E5ADFC0, 0xB9FF7502, 0x803DF7E2, 0xEEF9E37E, 0xBE79826F,
    0x05FF7A8A, 0x2AF9DF9E, 0x7E7801BF, 0x0B7FFA33, 0x01CB3CF8, 0x7CF1D1A6, 0x4F3F9883,
    0x7BECF17E, 0xEAD51BCF, 0x7CF908F6, 0x7BDEEB3F, 0xDEF7BDEF, 0xB000077B, 0x7377BDEE,
    0x0077BDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xFDCF0000,
    0x01777E01, 0x00000000, 0x00000000, 0x00000000, 0x10000000, 0x47C96026, 0x8AC31816,
    0x3C4337C7, 0x8ABE93C7, 0x65F3DCF7, 0x2B7BF0FD, 0x50BFBD44, 0xF73800F7, 0xF0078CA9,
    0x071E3C44, 0x4F3E4D70, 0xB23F2880, 0x63158162, 0xFE0FEFE0, 0x8951983E, 0x796058A8,
    0xBF805530, 0x500E7E1F, 0x2C8E5239, 0x79F3E7C0, 0xC78F1E00, 0x2B959007, 0xED1C012B,
    0x6213C00F, 0xC0596002, 0xEEF807B8, 0x1BFB9E03, 0x05CA0911, 0xA8295B7F, 0xDB0CA050,
    0x80C46D86, 0x782CA511, 0x0F2853E2, 0x3E649919, 0x81863633, 0x4F7F28B2, 0xDFC6DB05,
    0xC56CAFE6, 0x9E1E50A3, 0x88DB1E91, 0x54462301, 0x294B9914, 0x1FBF9E50, 0x06DFC62A,
    0xE062A37F, 0x650296AF, 0x9D8A82E7, 0x36511803, 0x4A014A78, 0x01B3F814, 0xA2804F7F,
    0x205F7FE0, 0x731C7DCF, 0xC79E3780, 0x8ACC0E98, 0x26CCDE1F, 0xE6BC075A, 0xA09A8BF0,
    0x89E7DC66, 0x3E39D017, 0x6A68809D, 0x004C1802, 0xE01B22D1, 0x01CCFA8B, 0x66B78ACC,
    0x53AD105C, 0x8BF058E7, 0x937B449A, 0x9E1789E7, 0x79F88E27, 0xAC62FC13, 0x9E407FBE,
    0x81399D5B, 0xF9F9545F, 0xE65E9C81, 0x266D05C8, 0x44F18BDA, 0xED345543, 0x8CC6F00D,
    0xAE405CAA, 0x1D00D6E8, 0x20078C73, 0xC5002E5E, 0x00000000, 0x00000000, 0xDEFFC000,
    0xF7BDEF7B, 0xFF0005DE, 0xF7BDEF7B, 0x460272BE, 0x8DC009C7, 0x51DE0077, 0xFCCCF00B,
    0x06F3F900, 0x402AC4E0, 0x5A80D18F, 0xF9F10071, 0xF98BE025, 0x178D5600, 0xEF7B8DA0,
    0x3FDEF7BD, 0xDEF73C00, 0x1FEEA03F, 0x00000000, 0x00000000, 0xEA000000, 0x5F73C1FE,
    0xE00B93C0, 0x7CF80989, 0x0031AC80, 0x727807C7, 0x01317C01, 0x678807D3, 0x01F1C00C,
    0xBE00572A, 0x03E98058, 0xE00633C4, 0x2B9500F8, 0x07DEF7FE, 0x00016FFC, 0x00000000,
    0x00000000, 0x16FFC000, 0xE07FFE00, 0xC2702CC9, 0x2A7AAC85, 0x87C739F1, 0x99395599,
    0xF4C5F1F1, 0x77C664C5, 0xDEF7BDEF, 0x0003EF7B, 0x63FE36FB, 0xFE3FE24D, 0x7BFFBE41,
    0x33DA81BE, 0xF12FF3C5, 0x7FFB9F45, 0x56B58DA2, 0xDF219FC8, 0xBE782086, 0xBE17BDFF,
    0x9EA049EF, 0x5EF7FF78, 0x1026730C, 0x30FD419E, 0x7F7BEE47, 0x95FF0C33, 0x9EB4EE72,
    0x000003FB, 0x00000000, 0x7BB9DF8C, 0x1857FCC2, 0x7FEB236F, 0xE306B2CF, 0x8F8FD14B,
    0x60078E05, 0x2C00000A, 0xC3D702C1, 0xE3F452F8, 0x3DFFA8C7, 0x7FF5274B, 0xC61778C2,
    0x03BFEE77, 0xD7213F73, 0xB9D6D94E, 0x2FD7CAFF, 0x65FC8766, 0xFBC0F965, 0x9EA0948D,
    0x0090C000, 0x6FFC0F8F, 0x90AE62FE, 0xEB66565F, 0xBE4FFF73, 0x5C84FDCC, 0xEEFC013B,
    0x00000003, 0xBF3C0000, 0xD6037E73, 0x7FF51157, 0xF73CD7C8, 0xCF17C15F, 0x941BF21B,
    0x0161160B, 0x804C2000, 0x8BE2C072, 0x0DF90DE7, 0xFF73CDB2, 0x2AFE624F, 0xF8C176A2,
    0xEA0BDDCE, 0x9BD184FF, 0xDDCFA2FC, 0x58BF2C63, 0x53E38C2B, 0x9999907E, 0xDEF7BDF6,
    0xE7080014, 0xBDEF7BDE, 0x57804CA3, 0x33FB5277, 0xEF7FEB5E, 0xFB99FC6F, 0x16FCF109,
    0x47FBFF58, 0xD4C41A77, 0x58C4F0F7, 0x9E001610, 0x077BA9FB, 0x753F73C0, 0x000000EF,
    0x00000000, 0x7EA00000, 0xDD6AFCE7, 0x4455FCC7, 0xCDB23EFD, 0xF933FF73, 0xEF90DEA2,
    0x31603860, 0x4C00004D, 0x603B6013, 0x21BD44F1, 0x79B641DF, 0xE6067FEE, 0xF7EA22AF,
    0xF9CEFD40, 0x78808C15, 0x62EFF8AC, 0xCC6463FC, 0x47BBDDFC, 0x84F7FA1E, 0xFB8D3B5C,
    0x00000007, 0xC4000000, 0x86FFBFFB, 0xF5CA67B1, 0xDBDF6222, 0x583FE216, 0x30118319,
    0x00000001, 0x00000000, 0xFFF10000, 0x1FFFC407, 0x0002F710, 0x00000000, 0x9F404CFA,
    0x02EF7809, 0x00000000, 0x20000000, 0x88CF711E, 0xCF17C695, 0x0000017D, 0x00000000,
    0xDBEC4000, 0x1A78FF80, 0x03E78DF8, 0xF01F557E, 0xF580FD55, 0x7C8C4008, 0x27FE3016,
    0x189E01DE, 0xAC009C6F, 0x2F803F27, 0x789C016B, 0x007FB8C7, 0x00000000, 0xEABBAC00,
    0x11EFEE77, 0xDFFEFFEF, 0xA157EFC0, 0xCA67B5BE, 0x73E8C7F9, 0xEEFDA5FF, 0xCF1462FD,
    0xC5BCD90A, 0x06030653, 0x00000305, 0x00000000, 0x00000000, 0x00000000, 0x5FDC6000,
    0x6FFBFFBC, 0x5CA67B58, 0x7BEC462F, 0x07FC42DB, 0x0230632B, 0x00000026, 0x00000000,
    0xF1800000, 0x4DFFEFFE, 0x7299FF3C, 0x98BF92EE, 0x7C67FEE7, 0x0DE78BF9, 0x2BF13EF9,
    0x4A55782F, 0x48009290, 0x2F2CA403, 0x9E2FD578, 0xC4FBC437, 0xCF317F2F, 0xF4BE333D,
    0x73949FFC, 0xF8F6E797, 0xF09BFB9D, 0xBBD42BFC, 0x33DCEB90, 0x10DEA0F5, 0x1C01F96F,
    0x00053005, 0x3800A600, 0xBC437A8A, 0xB9E623E5, 0xF9E4EA67, 0x416FA855, 0x3DFDCEFD,
    0x00000000, 0x77F30000, 0x3BDEAFCF, 0x7EA25BF4, 0x73CCB18B, 0x79F04FFF, 0xE0DF90DE,
    0x3D22C071, 0x0F480000, 0xC580E3C0, 0x7E4379E7, 0xB9E6D183, 0xBEB027FF, 0xE07BF512,
    0x2BF3DDF9, 0x00000000, 0x7F73C000, 0x7E62EFB5, 0xBB9D7203, 0x02C06F18, 0x00000000,
    0xDFCC0000, 0x7BE17BB9, 0xA9FE8C2B, 0xBFBDF727, 0xA0D619AC, 0x7E7962BA, 0x2B7E786B,
    0xA7DEA8BF, 0x737CE783, 0xE789BAC4, 0xDE89E7DD, 0xF11C41F7, 0xC6B8C5D3, 0xBBDDFCAA,
    0x77BF5F2B, 0xB076B184, 0xF0000BEE, 0x1FEF36DE, 0xEF36DEF0, 0x0000001F, 0x03C20000,
    0xBE4BDC65, 0x07F73C69, 0x000077FE, 0x00000000, 0x00100000, 0x460C132C, 0x02FC62E4,
    0x9FBBDF53, 0xFA8A7744, 0xC17DD64F, 0xC0A3D77B, 0x6072B332, 0x0FBF8544, 0x428AC39F,
    0x0E5443C5, 0x9F1C1723, 0x4B2A1FCF, 0x57278165, 0xEBCFC03E, 0x63118C07, 0xB07E7E00,
    0x277582EE, 0x07E55DF4, 0xCF287F3F, 0x50E411C8, 0xA54C8C41, 0x79454C78, 0xECECFED8,
    0x9E3F6C38, 0x3C554478, 0x4F03150F, 0xF139F2C6, 0xADFC1644, 0x97650C7F, 0x2CFFE50B,
    0x9055D6A2, 0x1FE362A3, 0x3C4A0155, 0x3F036258, 0x710A5105, 0xCEFFC16E, 0x6B3A2F68,
    0x98CB959A, 0x378BE1F1, 0x1D103A3B, 0x59826AB7, 0x31601F19, 0x1C463580, 0x9FFC6F90,
    0xE3A270D1, 0xA3D07317, 0xC6B8E8A6, 0xA31CC68C, 0xDF81FDD7, 0xE0278F5D, 0xE14564F1,
    0x0EFE9189, 0x4F158FB6, 0xA2A22CB0, 0x75C0A88C, 0xE2781CFC, 0xAC0A2789, 0x9F00ACE8,
    0xC52302E9, 0x802CF803, 0x64F00FEB, 0x03E5F101, 0x0BE4F3DC, 0xF00DD464, 0x7BDEF7BF,
    0xFC001DEF, 0x3EF7BDEF, 0x19EB00E6, 0xFF3A782F, 0x04E2FC60, 0x00DF89C4, 0xBC07AE5F,
    0x1CE60D55, 0xB9C6D01F, 0x06FBDEF7, 0x07BF5000, 0x8C4D6FD6, 0xF9F03DCE, 0x5A601A40,
    0x08600000, 0x19231BC4, 0xC001E667, 0xC40F3338, 0x10C1231B, 0xCB002000, 0xCF806902,
    0xFF3A3017, 0xCD6FD603, 0x000002FB, 0x2BF3C000, 0xC16FD730, 0x880F67F8, 0x01A40FCF,
    0x80000026, 0x0D118C07, 0x003758CE, 0xC13AC670, 0x1E01D118, 0x00B00000, 0xFCF880C3,
    0x0EF9FE30, 0xC09BF5CC, 0x80DF9FFC, 0x66F995FA, 0x6BB0BFD4, 0xE3B7D8E9, 0x31CCC65B,
    0xD3EB0E62, 0x37334777, 0xEFC97F9E, 0x407FFF11, 0xDE01FFFC, 0x0100551F, 0x00001200,
    0xAC00F5C8, 0xE200003E, 0x20FDA9FD, 0xB7C60CF7, 0xBDF6B378, 0xE2A39D1D, 0x53D35837,
    0x3ABEF816, 0x0067C80E, 0x650038E0, 0x8C7B7581, 0xEBE60DF8, 0x7BED44E7, 0xDE4358DF,
    0x11AF8C19, 0x07ED4FEF, 0x1B9CC000, 0x3DFFDF20, 0x67B1825F, 0xB80F678A, 0xAFFBFF51,
    0x5F11A8B8, 0xD208CFCA, 0x0BEF8813, 0x03079E00, 0xF7100000, 0x07DEF753, 0x2DDC4000,
    0xC00FBDEF, 0x00196000, 0x71003DFC, 0xBDEF75A7, 0x0005DEF7, 0xED410024, 0xBBB9F6B2,
    0xC7FB7723, 0xC611EFF7, 0xFBCB37BA, 0xDEEFD644, 0x3F8E44FD, 0xE315F9E1, 0xFCAC845B,
    0x94A31E80, 0x5DB3E00F, 0x0018F009, 0xE01FD700, 0xE0079431, 0x07E565B3, 0x962518F4,
    0x6F8C57E7, 0x991BE1C9, 0x3F77BBF5, 0x8EF7F151, 0xC611EFFB, 0xE4FABFBA, 0xBB9F6B4E,
    0x73CAFC3B, 0x4F75004F, 0xB40D153E, 0xC2663A99, 0xD319B233, 0x8DE1AD0B, 0x03D6562A,
    0x1ABC5AD1, 0x1D3C6398, 0x5EAE0073, 0xBBDD60D1, 0x77B9C465, 0x7BAC0000, 0x7BDEE6EF,
    0xBBDEEB07, 0x01DEF7B9, 0xBDEEB000, 0x1DEF7B9B, 0xE0000000, 0x00003FB9, 0x9E1FDCF0,
    0x000003FB, 0xBDFFDF20, 0xF73137FF, 0x12EE724C, 0xBBDF731D, 0xEA2B3E2B, 0x88DF8C1D,
    0xCBF02427, 0xEB04AC31, 0x7F62AB3F, 0xE788E00F, 0xE789BFBB, 0xBD43358B, 0xBF5FB4A7,
    0x6F88AF67, 0x53E8C2A4, 0x5C050DF1, 0x03BDF9F9, 0xEE6D9886, 0x37ACFBFF, 0xCCAF6B5E,
    0x20FFB5F9, 0x21EFFFFB, 0x5FB5C80A, 0xC0FFFC6F, 0x0272911C, 0x3257A7C9, 0x3D63917E,
    0x777BFFD1, 0x3DF7CBC5, 0xBCBB58C9, 0x0677E1E7, 0xF778C003, 0xF013BBBD, 0x3DEE739D,
    0xF6D83777, 0xF1DD724A, 0x18BEB7C3, 0x8CBE7BBF, 0x5EA36ADF, 0xD9E25FE3, 0x2AFCCEE1,
    0x76F7BC75, 0xDA9F232C, 0xF564CF3C, 0x23E76FC3, 0x906B0FE2, 0x1F200013, 0x83587F11,
    0x53CDACFF, 0xB50FD593, 0xBDED4ABF, 0x391963B7, 0xBFC6BD47, 0x9DC3B3C4, 0xF18BF3E1,
    0xF8CBE7BB, 0xF72FC6AD, 0xF1DD724A, 0xE739EF03, 0x437773DE, 0x06FCE77E, 0x63A889F7,
    0xACADEE78, 0xC2D8FFF1, 0x19B73BF3, 0x94DBDE5F, 0xEB0CD888, 0xD53AA29E, 0x63FD899B,
    0xEAF9D0FF, 0x9BD6797C, 0xFE537ACF, 0x58DFCAC6, 0x8BF5E2FC, 0xFD78BF17, 0xC6FE45E2,
    0x7858DFCA, 0x7ACF9BD6, 0xCEAF9D13, 0xBDEF7BD7, 0x03FBDEF7, 0xDEF7BDE0, 0x00003F7B,
    0xDEF7BDE0, 0xDDE3003F, 0xC04EEEF7, 0xF7B9CE77, 0xC760DDDC, 0x3BAE495E, 0x2FD6F87E,
    0x37E7BDEF, 0xA8DAB7E2, 0xC3FD4417, 0x6255F99D, 0x1946FBDF, 0x1006D4F9, 0xB03E76FC,
    0x91677DEF, 0xF9048013, 0xABB7BEC0, 0x80DACFF8, 0x2AFED412, 0x3E469081, 0x1DC6BD63,
    0x4CEE5DE4, 0xF1005FAF, 0xEE5F8D5B, 0xE3BAE495, 0xCE73DE07, 0xC6EEE7BD, 0xF7BDEF7B,
    0xDA8007DE, 0x8DF90BE7, 0x7D8F3E78, 0xD8F002BB, 0xCBF22BB7, 0xBCF03E78, 0x0067B009,
    0x80000000, 0xDA77BDFF, 0x0007DEF7, 0xB4EF7BFF, 0x000FBDEF, 0xF8000000, 0x0AD40277,
    0x7BDEF758, 0x007FBDEF, 0x7CE77E30, 0xF115FE29, 0x9EFA2B5C, 0x22EF3191, 0x17B6302A,
    0xCC9D8FF5, 0x78C1DADF, 0x02EF7BCD, 0xBE7BBF50, 0xE7895F94, 0x19EEFEF2, 0x230AB919,
    0xC5E4F718, 0x51FEA7B8, 0x6B91096F, 0x227DEEFE, 0xF3C4AFC7, 0x7E6DF60F, 0x56B1B563,
    0xFC0FEE33, 0x000000EF, 0x00000000, 0x40058000, 0x85F88006, 0xE73C12FC, 0x31849FFE,
    0xC49EF8C3, 0x4FDDCF7A, 0x000007FF, 0x60000000, 0x1DEF73ED, 0xF008F762, 0xC016400D,
    0x04C00002, 0x1BC01230, 0x802FF500, 0x277B3BF1, 0x00006310, 0x20000000, 0x18E55BFE,
    0xBB8C6395, 0xDF1DFA78, 0xEB9AC653, 0xBD3C5F5F, 0x61ADFD9F, 0xDDEFC9CE, 0x30000000,
    0x297CE77E, 0xECF115FF, 0x67BAC5F8, 0xD168FBC6, 0x01984046, 0xDA5E3E61, 0x77BCC5F8,
    0x27FF9BC6, 0xFDF1D9E2, 0x7E0FF7C3, 0x7E37E7E3, 0xF159EFC4, 0xBD4F167B, 0xD077A9E3,
    0x8E9A3AD1, 0x7A9ED1D6, 0x88EF53C7, 0xF7E2B3DF, 0xF3F1BF2C, 0xFAD43F1B, 0xBFBC00BD,
    0x889DE02E, 0x0E630167, 0x6E03F7F4, 0xF958003D, 0x99DE2002, 0x068DF800, 0xBACD3D40,
    0x91EBA02F, 0x5DF7182F, 0x2026F2F9, 0xE7CD37DE, 0xC9637E02, 0x69EA04EE, 0xB7809ADE,
    0x3DCF551E, 0x2F989FE6, 0xC97E2001, 0xE63DEF73, 0x0BDFAD5F, 0x05D7F780, 0x59E213BC,
    0xFA0398C0, 0x1EB701FB, 0x02F95800, 0x0133BC40, 0x001A37E0, 0x3BF1E9EA, 0x57404BE7,
    0xB9E22BFD, 0xF95DF718, 0x467BE8AE, 0xE6FBC406, 0x80A88BBC, 0xB63058DF, 0xA869EA17,
    0xB784EC7F, 0xDADFCC1E, 0x8C5F3101, 0x2EF7BCD7, 0x900097E2, 0x07BFB9DF, 0xFA84FB80,
    0x7C49DE12, 0x898FBDDF, 0x9EB10731, 0x6E156B7B, 0xAC48803D, 0xFB7B817C, 0x133BC479,
    0xD206FFE3, 0xF30C346F, 0x9EA78EDC, 0x7DCBEEB6, 0x5D9FEA22, 0xDF90BE4F, 0xF2B1BF39,
    0x788026F5, 0x05CF9CDF, 0xBB2B1BF0, 0xF69EA013, 0xD6F004D6, 0x63DCF553, 0x2BE621FE,
    0xF4BF1000, 0xF98F7BDC, 0xC01B7587, 0x00BBAC05, 0xC02AE400, 0xF3F01BD3, 0x0F51BE07,
    0x03F19EF8, 0xF81B19F3, 0x26664039, 0xF2030C44, 0x42F8C8DC, 0xCE7B4ABE, 0x67B657FD,
    0x13B9C857, 0xF8006DF6, 0x1001358F, 0x000FF1FF, 0x0005FEC4, 0x8005F7BC, 0x33000565,
    0x7F001622, 0x51801F3F, 0x0018D4F5, 0x3F7F7F3F, 0x8CCB1980, 0x82A27809, 0x1C700F15,
    0x95901DFC, 0xF84ACA85, 0xDEF7BDE4, 0xE003C1F4, 0x7BDE6541, 0xB337BDEF, 0xE7C03E38,
    0x33013288, 0x04F1989E, 0xD804CA20, 0x1BF001B7, 0x6B1801AB, 0x6EC60035, 0x0BEF7800,
    0x000ACB00, 0x002C4466, 0x003E7EFE, 0x31A9EAA3, 0xFEFE7E00, 0x9633007E, 0x44F01319,
    0xE01E2B05, 0x203BF838, 0x95950B2B, 0xEF7BC9F0, 0x0783E9BD, 0xBCCA83C0, 0x6F7BDEF7,
    0x807C7166, 0x026511CF, 0xE3313C66, 0x09944009, 0x4005DF62, 0x017EE8EE, 0x7EAEE2FC,
    0x69DDE00A, 0xBDE002ED, 0x2B2C002F, 0xB1119800, 0xF9FBF800, 0xA7AA8C00, 0xF9F800C6,
    0xCC01FBFB, 0xC04C6658, 0x78AC1513, 0xEFE0E380, 0x542CAC80, 0xEF27C256, 0x0FA6F7BD,
    0x2A0F001E, 0xEF7BDEF3, 0xF1C599BD, 0x94473E01, 0xC4F19809, 0x5100278C, 0xD0010026,
    0xA73D3FE7, 0xBE456780, 0xF8078BF7, 0xF23339E7, 0x11FFA00B, 0x0017F9EF, 0x60017DEF,
    0x8CC00159, 0xDFC00588, 0x546007CF, 0xC006353D, 0x0FDFDFCF, 0x6332C660, 0x60A89E02,
    0x071C03C5, 0x6564077F, 0x3E12B2A1, 0x37BDEF79, 0x7800F07D, 0xDEF79950, 0x2CCDEF7B,
    0x39F00F8E, 0x8CC04CA2, 0x013C6627, 0x3DE13288, 0x0033BF0F, 0xCF78000C, 0x800677E4,
    0xB000BEF7, 0x466000AC, 0xEFE002C4, 0xAA3003E7, 0xE0031A9E, 0x07EFEFE7, 0x31996330,
    0xB0544F01, 0x838E01E2, 0xB2B203BF, 0x9F095950, 0x9BDEF7BC, 0x3C00783E, 0xEF7BCCA8,
    0x1666F7BD, 0x1CF807C7, 0xC6602651, 0x009E3313, 0x3AC09944, 0xFA8007FF, 0x8005F9EE,
    0x079E3151, 0x67C8A8C0, 0xDEEFA802, 0xF9D6004E, 0xF7BC004F, 0x05658005, 0x16223300,
    0x1F3F7F00, 0xD4F55180, 0x7F3F0018, 0x19803F7F, 0x78098CCB, 0x0F1582A2, 0x1DFC1C70,
    0xCA859590, 0xBDE4F84A, 0xC1F4DEF7, 0x6541E003, 0xBDEF7BDE, 0x3E38B337, 0x3288E7C0,
    0x989E3301, 0xCA2004F1, 0xBDEFA004, 0xEF7BDEF7, 0x1318007D, 0x28DC0000, 0xEF7BDEF3,
    0x39800FBD, 0x800048EA, 0x000378E8, 0x5CCC5F80, 0xC9EA0000, 0xBC0004C6, 0xDEF7909A,
    0xAC02EF7B, 0x000187AC, 0xE05E37C8, 0x5DEF7BDE, 0xBFF11BC0, 0xE0001EF7, 0x88000029,
    0xEF7BDDF6, 0x9D0004BD, 0x001201E3, 0xCE00BA63, 0x7BDEF7BD, 0x000735C3, 0xF7DEC800,
    0x7B980EEE, 0x83DAC60D, 0xF7D9E37A, 0x9B43CAEE, 0x46FC60DF, 0x05E231AE, 0x6014BB3E,
    0x03F8FFF5, 0x00004D62, 0xF1C00000, 0xA553C407, 0x23BBEB00, 0xF6CF81A3, 0x7E326F5A,
    0x637A9723, 0x95DDEFFE, 0x14CF7317, 0xF909FFA3, 0x005EEF1E, 0x8C017E9E, 0xC60029EF,
    0xBFD6009A, 0x0DBEC03E, 0x04D63FE0, 0x07F8FF88, 0x405FEC40, 0xBDEF7BDC, 0x001BDEF7,
    0xBDEF7B80, 0x0000DEF7, 0x00000000, 0xDEF7BDC0, 0xE000037B, 0xBDEF7BDE, 0x00000001,
    0xF7000000, 0xBDEF7BDE, 0x7D800003, 0x5637E01B, 0x0D5AC603, 0xB8837630, 0xEF7BDEF7,
    0x000037BD, 0xEF7BDEF7, 0x000001BD, 0x80000000, 0xF7BDEF7B, 0xBDC00006, 0x037BDEF7,
    0x00000000, 0xBDEE0000, 0x077BDEF7, 0xBBEC4000, 0xFBA3B900, 0x57717E05, 0x9DDE053F,
    0xDEE22ED6, 0xF7BDEF7B, 0xDC0000DE, 0xF7BDEF7B, 0x00000006, 0xEE000000, 0x1BDEF7BD,
    0xDEF70000, 0x000DEF7B, 0x00000000, 0xDEF7B800, 0x001DEF7B, 0x7E1E7BC0, 0xC0030067,
    0x33BF267B, 0xBDEF7B88, 0x037BDEF7, 0xBDEF7000, 0x001BDEF7, 0x00000000, 0xDEF7B800,
    0x00006F7B, 0xBDEF7BDC, 0x00000037, 0xE0000000, 0xBDEF7BDE, 0x7D800077, 0x26B1FF1B,
    0x20FF1FF1, 0xEF702FF6, 0x00000000, 0x00000000, 0x80000000, 0x58DF9B7D, 0x8CD5AC6D,
    0x0077B8DD, 0x00000000, 0x00000000, 0x62000000, 0xD1DC85DF, 0xBB8BF2FD, 0x4EEF29FA,
    0x1DEE176B, 0x00000000, 0x00000000, 0x00000000, 0xBC000000, 0x0677E1E7, 0xF267BC03,
    0x0EF7033B, 0x00000000, 0x00000000, 0x00000000, 0xF8000000, 0xD9EF7BDD, 0xB188009D,
    0xF77C02F6, 0x17A2BDDE, 0x6F3FA300, 0xE279E002, 0x00A38003, 0x5BDE1A60, 0x0C5F7BBE,
    0x5BDE0000, 0x0C5F7BBE, 0x001A6000, 0xE6001470, 0xF1801F13, 0xDF04DEBE, 0xE8CF77BD,
    0xDAC62005, 0xA004000B, 0x4E7A7FCF, 0xBE456781, 0xFC078BF7, 0xF9199CF3, 0xC47FE805,
    0xE785FE7B, 0x1BDC009E, 0x6A0007C4, 0x00742002, 0x01F13CF0, 0x013597E0, 0x00075788,
    0x8007C4F5, 0x2004D65F, 0xD4001D5E, 0x7E001F13, 0x78801359, 0x09EA0035, 0x0025F800,
    0xB7D80BC4, 0x6B1FF001, 0xF1FF1002, 0xFF62000F, 0xDF7B2002, 0xDA8057B3, 0x7BD1886B,
    0xECF17C60, 0x3FE5777B, 0xC1BF31B8, 0x31B455F8, 0x52DA05E2, 0xEA32300A, 0x094C03F8,
    0x00001480, 0x7F1C5200, 0x014B2980, 0x118D4646, 0x1B8AD02F, 0x5F8C1BF3, 0xC5F18FC5,
    0x95DDEFB3, 0x35DD40FF, 0x003DE8C4, 0xFC00DBEC, 0x63006AC6, 0xEC6006AD, 0xEFBD9006,
    0xED402BD9, 0x3DE8C435, 0xF678BE30, 0x1FF2BBBD, 0x60DF98DC, 0x18DA2AFC, 0x296D02F1,
    0x75191805, 0x04A601FC, 0x00000A40, 0x3F8E2900, 0x00A594C0, 0x88C6A323, 0x8DC56817,
    0xAFC60DF9, 0xE2F8C7E2, 0xCAEEF7D9, 0x1AEEA07F, 0x801EF462, 0xC80177D8, 0xC02FDD1D,
    0xA7EAEE2F, 0x6B4EEF00, 0xEFBD9017, 0xED402BD9, 0x3DE8C435, 0xF678BE30, 0x1FF2BBBD,
    0x60DF98DC, 0x18DA2AFC, 0x296D02F1, 0x75191805, 0x04A601FC, 0x00000A40, 0x3F8E2900,
    0x00A594C0, 0x88C6A323, 0x8DC56817, 0xAFC60DF9, 0xE2F8C7E2, 0xCAEEF7D9, 0x1AEEA07F,
    0x001EF462, 0xFF3E8010, 0x9E0539E9, 0x2FDEF915, 0x73CFF01E, 0xA017E466, 0xF9EF11FF,
    0xEFBD9017, 0xED402BD9, 0x3DE8C435, 0xF678BE30, 0x1FF2BBBD, 0x60DF98DC, 0x18DA2AFC,
    0x296D02F1, 0x75191805, 0x04A601FC, 0x00000A40, 0x3F8E2900, 0x00A594C0, 0x88C6A323,
    0x8DC56817, 0xAFC60DF9, 0xE2F8C7E2, 0xCAEEF7D9, 0x1AEEA07F, 0xE01EF462, 0x33BF0F3D,
    0xDE000600, 0x019DF933, 0xF67BEF64, 0x0D7B500A, 0x8C0F7A31, 0xEF7D9E2F, 0x3707FCAE,
    0xBF1837E6, 0xBC46368A, 0x014A5B40, 0x7F1D4646, 0x90012980, 0x40000002, 0x300FE38A,
    0xC8C02965, 0x05E231A8, 0x7E63715A, 0xF8ABF183, 0xF678BE31, 0x1FF2BBBD, 0x1886BBA8,
    0x01F907BD, 0x1F3EF0EF, 0xF37AF3BC, 0x4719E8F9, 0xAD7A78DE, 0x8FF927F8, 0x180DF1D5,
    0x4C605593, 0xC7F8C156, 0xF22BE37A, 0xE2B9ECC4, 0x5E7CDE1B, 0x3EF1C67A, 0x00F3BC1F,
    0xDE885980, 0xD98EEEF7, 0x60D77193, 0xE533DBAC, 0xFBDF6A3F, 0xDE3F115F, 0xFF20DFA8,
    0xC42F2CB4, 0x32E5466F, 0x7DE37E12, 0x3D40F4AC, 0xBC03CA47, 0xAF02E073, 0xF9A81C17,
    0xF7929B82, 0x9E5CA429, 0x59643F68, 0x0EADF159, 0xD46F4AB4, 0x13DF8C58, 0xFFC6592F,
    0x25F15DDE, 0x1835DEA3, 0x9ADE16EB, 0x1DDDEFBD, 0xC00DBEC0, 0x2009AC7F, 0x001FE3FE,
    0x3C02FF62, 0xDDF807F7, 0x00000005, 0x00000000, 0x00000000, 0x00000000, 0x25809840,
    0x0C60591F, 0x0CDF1E2B, 0xFA4F1CF1, 0xCF73DE2A, 0xEFC3F597, 0xFEF510AD, 0x06DF6002,
    0x01AB1BF0, 0x600D5AC6, 0xFDCF06EC, 0x01777E01, 0x00000000, 0x00000000, 0x00000000,
    0x10000000, 0x47C96026, 0x8AC31816, 0x3C4337C7, 0x8ABE93C7, 0x65F3DCF7, 0x2B7BF0FD,
    0x00BFBD44, 0xC802EFB1, 0xE02FDD1D, 0x53F57717, 0xDAD3BBC0, 0x00FEE785, 0x0000BBBF,
    0x00000000, 0x00000000, 0x00000000, 0x13080000, 0x0B23E4B0, 0xE3C5618C, 0xE39E219B,
    0x7BC55F49, 0x7EB2F9EE, 0xA215BDF8, 0x7BC05FDE, 0x00677E1E, 0x99EF0006, 0xB9E0CEFC,
    0x2EEFC03F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF92C04C2, 0x586302C8,
    0x8866F8F1, 0x57D278E7, 0xBE7B9EF1, 0x6F7E1FAC, 0x17F7A885, 0x0036FB00, 0xC01AB1BF,
    0x1801AB58, 0x7FBE81BB, 0x9D5B9E40, 0x545F8139, 0x9C81F9F9, 0x05C8E65E, 0x8BDA266D,
    0x554344F1, 0xF00DED34, 0x5CAA8CC6, 0xD6E8AE40, 0x8C731D00, 0x2E5E2007, 0x0000C500,
    0x00000000, 0xC0000000, 0x000006FF, 0xF7B9C000, 0x9001DFFE, 0xEE713FF3, 0x9D19FFBD,
    0x7C4FBE40, 0x0000D700, 0x7C8035C0, 0xF738F89F, 0x4E8CFFDE, 0xE27FE720, 0xEFFF7BDC,
    0x60000000, 0x0BDDCEFC, 0xD1857F8C, 0xE73C742F, 0xA893317E, 0x2CA785F8, 0x80860652,
    0xC00F1505, 0xAF0015CA, 0x00888806, 0xC0078888, 0x7801EFCF, 0x7802DF3E, 0xC00FD1FE,
    0xC20039F8, 0x6C866782, 0xDCF7DC0F, 0x9C1F88FF, 0x93B3C527, 0x3FE01B7D, 0x7FC404D6,
    0xFB1003FC, 0xF2000017, 0x0DF3DFFD, 0x9E299ED4, 0xFA2F897F, 0x6D13FFDC, 0xFE42B5AC,
    0x0436F90C, 0xEFFDF3C1, 0x4F7DF0BD, 0xFBC4F502, 0x9862F7BF, 0x0CF08133, 0x723987EA,
    0x619BFBDF, 0x7394AFF8, 0xDBEC05A7, 0x0D58DF80, 0x301AB58C, 0xC8000376, 0x37CF7FF7,
    0x78A67B50, 0xE8BE25FE, 0xB44FFF73, 0xF90AD6B1, 0x10DBE433, 0xBFF7CF04, 0x3DF7C2F7,
    0xEF13D409, 0x618BDEFF, 0x33C204CE, 0xC8E61FA8, 0x866FEF7D, 0xCE52BFE1, 0xDF62169D,
    0xEE8EE405, 0xAEE2FC17, 0x9DDE0A7E, 0x40002ED6, 0xBE7BFFBE, 0xC533DA81, 0x45F12FF3,
    0xA27FFB9F, 0xC856B58D, 0x86DF219F, 0xFFBE7820, 0xEFBE17BD, 0x789EA049, 0x0C5EF7FF,
    0x9E102673, 0x4730FD41, 0x337F7BEE, 0x7295FF0C, 0x0200B4EE, 0xE7A7FCFA, 0x7C8ACF14,
    0xFF0F17EF, 0x7E46673C, 0xDE23FF41, 0x40002FF3, 0xBE7BFFBE, 0xC533DA81, 0x45F12FF3,
    0xA27FFB9F, 0xC856B58D, 0x86DF219F, 0xFFBE7820, 0xEFBE17BD, 0x789EA049, 0x0C5EF7FF,
    0x9E102673, 0x4730FD41, 0x337F7BEE, 0x7295FF0C, 0xCF78B4EE, 0x300CEFC3, 0xF933DE00,
    0xE400019D, 0x1BE7BFFB, 0x3C533DA8, 0xF45F12FF, 0xDA27FFB9, 0xFC856B58, 0x086DF219,
    0xDFFBE782, 0x9EFBE17B, 0xF789EA04, 0x30C5EF7F, 0x19E10267, 0xE4730FD4, 0xC337F7BE,
    0xE7295FF0, 0xF9D60B4E, 0xF77D403F, 0x8A8C02FC, 0x54603CF1, 0x7D4133E4, 0xEB0276F7,
    0xF7C827FC, 0x5037CF7F, 0xFE78A67B, 0x73E8BE25, 0xB1B44FFF, 0x33F90AD6, 0x0410DBE4,
    0xF7BFF7CF, 0x093DF7C2, 0xFFEF13D4, 0xCE618BDE, 0xA833C204, 0x7DC8E61F, 0xE1866FEF,
    0x9DCE52BF, 0xEFFEF916, 0xFF7895F9, 0x6A06FFF7, 0x5BF514CF, 0x379CA67B, 0x3DF678E9,
    0xBFF3E74B, 0x6FCBC667, 0x1A74437E, 0x2B378A5F, 0x81F017AD, 0x73BF98B2, 0xBDEF4DEF,
    0xF789DEF7, 0x720000AD, 0x2DEF73EA, 0xBDEF7BBF, 0xAD4B3EF7, 0x7A600700, 0xE796F18A,
    0x8CB3E41D, 0x7BBDDF8A, 0xDF7397E6, 0xF0DEFFFB, 0xFF46295B, 0x6306BD9F, 0xE77C60ED,
    0xF7303BFE, 0x94ED7213, 0xAFFB9D6D, 0x7662FD7C, 0x96565FC8, 0x48DFBC0F, 0x0009EA09,
    0xF8F0090C, 0x2FE6FFC0, 0x65F90AE6, 0xF73EB665, 0xDCCBE4FF, 0x13B5C84F, 0x3AFBFBE3,
    0x80BF4F00, 0x30053DF1, 0x7FAC04D6, 0x06DF607D, 0x01358FF8, 0x00FF1FF1, 0x0005FEC4,
    0xBB9DF180, 0x09FFD417, 0x45F937A3, 0x58C7BB9F, 0x1856B17E, 0x20FCA7C7, 0x7BED3333,
    0x0029BDEF, 0xF7BDCE10, 0x99477BDE, 0xA4EEAF00, 0xD6BC67F6, 0xF8DFDEFF, 0xE213F733,
    0xBEC02DF9, 0xD58DF80D, 0x01AB58C0, 0x80003763, 0x17BB9DF1, 0xA309FFD4, 0x9F45F937,
    0x7E58C7BB, 0xC71856B1, 0x3320FCA7, 0xEF7BED33, 0x100029BD, 0xDEF7BDCE, 0x0099477B,
    0xF6A4EEAF, 0xFFD6BC67, 0x33F8DFDE, 0xF9E213F7, 0x177D882D, 0x5FBA3B90, 0xFABB8BF0,
    0x5A777829, 0xE30000BB, 0xA82F773B, 0x6F4613FF, 0x773E8BF2, 0x62FCB18F, 0x4F8E30AD,
    0x666641F9, 0x7BDEF7DA, 0x9C200053, 0xF7BDEF7B, 0x5E01328E, 0xCFED49DD, 0xBDFFAD78,
    0xEE67F1BF, 0x5BF3C427, 0xEFC3CF78, 0xDE00300C, 0x019DF933, 0xDCEF8C00, 0x4FFEA0BD,
    0x2FC9BD18, 0xC63DDCFA, 0xC2B58BF2, 0x07E53E38, 0xDF699999, 0x014DEF7B, 0xBDEE7080,
    0xCA3BDEF7, 0x27757804, 0xB5E33FB5, 0xC6FEF7FE, 0x109FB99F, 0x6FB16FCF, 0x24D63FE3,
    0xC41FE3FE, 0xB8C005FE, 0x0000007F, 0x00000000, 0xF36FB000, 0xB58DAB1B, 0xC01BB19A,
    0x00007FB8, 0x00000000, 0xEC400000, 0xBA3B90BB, 0x57717E5F, 0x69DDE53F, 0xDC6002ED,
    0x0000003F, 0x00000000, 0x00000000, 0x3BF0F3DE, 0x33DE0183, 0xC0019DF9, 0x00007FB8,
    0x00000000, 0x00000000, 0x01DFB000, 0x2FF73918, 0xF719BFC7, 0xF9FFDACD, 0x8889E622,
    0xCFFEB01B, 0x7F7805F4, 0x5AC3456F, 0xBE3056BC, 0x5153F773, 0xD184FFEA, 0x3C5F1FE5,
    0x94BF7BFF, 0x9E4BEA33, 0x180ED89F, 0x9960132C, 0x80ED8D20, 0x7D466FCF, 0x23597F29,
    0xF7FE78BE, 0x7B52F95F, 0x013B5CA6, 0x4FF9F404, 0x159E29CF, 0x1E2FDEF9, 0x8CCE79FE,
    0x47FE82FC, 0x005FE7BC, 0xBC5FDC60, 0x586FFBFF, 0x2F5CA67B, 0xDB7BEC46, 0x2B07FC42,
    0x26023063, 0x00000000, 0x00000000, 0x1B7D8000, 0x04D63FE0, 0x03FC7FC4, 0x0017FB10,
    0xBFFBC600, 0xFCF137FF, 0x4BB9CA67, 0xFB9E62FE, 0x2FE5F19F, 0xFBE4379E, 0xE0BCAFC4,
    0x4A412955, 0x900D2002, 0x55E0BCB2, 0x10DE78BF, 0xFCBF13EF, 0xCCF73CC5, 0x7FF3D2F8,
    0x805DCE52, 0x1BF01B7D, 0x56B181AB, 0x006EC603, 0xDFFDE300, 0xFE789BFF, 0x25DCE533,
    0xFDCF317F, 0x17F2F8CF, 0x7DF21BCF, 0xF05E57E2, 0x252094AA, 0x48069001, 0xAAF05E59,
    0x886F3C5F, 0xFE5F89F7, 0x667B9E62, 0x3FF9E97C, 0x882EE729, 0x3B90177D, 0x8BF05FBA,
    0x7829FABB, 0x00BB5A77, 0xDFFDE300, 0xFE789BFF, 0x25DCE533, 0xFDCF317F, 0x17F2F8CF,
    0x7DF21BCF, 0xF05E57E2, 0x252094AA, 0x48069001, 0xAAF05E59, 0x886F3C5F, 0xFE5F89F7,
    0x667B9E62, 0x3FF9E97C, 0x002EE729, 0xD3FE7D01, 0x45678A73, 0x878BF7BE, 0x23339E7F,
    0x11FFA0BF, 0x0017F9EF, 0xFBFFBC60, 0x7FCF137F, 0xE4BB9CA6, 0xFFB9E62F, 0xE2FE5F19,
    0x4FBE4379, 0x5E0BCAFC, 0x24A41295, 0x2900D200, 0xF55E0BCB, 0xF10DE78B, 0x5FCBF13E,
    0x8CCF73CC, 0x27FF3D2F, 0xF785DCE5, 0x00CEFC3C, 0x933DE003, 0xC00019DF, 0xFFF7FF78,
    0x4CFF9E26, 0x5FC97739, 0x33FF73CC, 0xF3C5FCBE, 0xF89F7C86, 0x2ABC1795, 0x00494825,
    0x965201A4, 0x17EABC17, 0x7DE21BCF, 0x98BF97E2, 0x5F199EE7, 0xCA4FFE7A, 0xCF780BB9,
    0xF0003002, 0x3000059D, 0xDEF7BDEE, 0x00BDEF7B, 0xF7BDEE30, 0xBDEF7BDE, 0xB3DE0000,
    0x20000C00, 0x17BF0006, 0xFFDFFDF2, 0xCF6A34F7, 0xF22C4F94, 0x5BBFF98B, 0xCF17D2FC,
    0xF8AABE9B, 0xBB318729, 0xE7A1E195, 0x4F3C1218, 0x6FD1E183, 0x1DB94218, 0x45F2CF8B,
    0x33BC4FAD, 0xEF0BF27E, 0xA93A333D, 0xFF9E2951, 0xFFBF1CC4, 0x6780DF3D, 0x06DF6003,
    0x01358FF8, 0x00FF1FF1, 0x0005FEC4, 0xF03FB9E0, 0x000003BF, 0x00000000, 0x60008000,
    0x22306099, 0x9817E317, 0x24FDDEFA, 0x7FD453BA, 0x80DBEC02, 0x8C0D58DF, 0x76301AB5,
    0xFB9E0003, 0x003BFF03, 0x00000000, 0x08000000, 0x06099600, 0x7E317223, 0xDDEFA981,
    0x453BA24F, 0x7D8827FD, 0xBA3B9017, 0xBB8BF05F, 0x777829FA, 0xC000BB5A, 0x7FE07F73,
    0x00000007, 0x00000000, 0x32C00100, 0x2E4460C1, 0xF5302FC6, 0x7449FBBD, 0x84FFA8A7,
    0xCEFC3CF7, 0x3DE00300, 0x0019DF93, 0xF81FDCF0, 0x000001DF, 0x00000000, 0xB0004000,
    0x9118304C, 0x4C0BF18B, 0x127EEF7D, 0x3FEA29DD, 0xC06DF601, 0xC606AC6F, 0xBB180D5A,
    0xFEEB0001, 0xC7AEEFC0, 0xB278F013, 0x48C4F0A2, 0xC7DB077F, 0x1658278A, 0x54465151,
    0x0E7E3AE0, 0x13C4F13C, 0x56745605, 0x8174CF80, 0x7C01E291, 0x07F5C016, 0xF880B278,
    0x79EE01F2, 0xEA3205F2, 0x05F75806, 0x00000000, 0xEFD40000, 0xF503DF9C, 0x26FA88AB,
    0x7FFB9D72, 0xC874F274, 0x00C3C46F, 0x23C03F9F, 0x29001600, 0xE7F3E018, 0x88DF90E9,
    0xFF73AC49, 0x57D60E8F, 0xF09BF511, 0x15F9CEFC, 0x00000000, 0x1E7BC000, 0x0180677E,
    0xEFC99EF0, 0xF758000C, 0x3D777E07, 0x93C7809E, 0x46278515, 0x3ED83BFA, 0xB2C13C56,
    0xA2328A88, 0x73F1D702, 0x9E2789E0, 0xB3A2B028, 0x0BA67C02, 0xE00F148C, 0x3FAE00B3,
    0xC40593C0, 0xCF700F97, 0x51902F93, 0x00000037
EW_END_OF_FONT_RES( FlatFontM )

/* Table with links to derived variants of the font resource : 'Flat::FontM' */
EW_RES_WITHOUT_VARIANTS( FlatFontM )

/* Font resources used for the different widgets. If you want to change the fonts 
   within your project, just create a variant of these font resources and define 
   the attributes of the font resources according your design ideas. */
EW_DEFINE_FONT_RES( FlatFontXL, 38, 10, 0, 16, 0x0001, 0x00C0 )
  EW_GLYPH( 0x0001, 2, -28, 14, 28, 18, 0x00000000 ),
  EW_GLYPH( 0x0020, 0, 0, 0, 0, 10, 0x000003DB ),               /* ' ' */
  EW_GLYPH( 0x0021, 2, -28, 7, 28, 11, 0x000003DB ),            /* '!' */
  EW_GLYPH( 0x0022, 2, -30, 10, 10, 13, 0x00000540 ),           /* '"' */
  EW_GLYPH( 0x0023, 1, -28, 23, 28, 24, 0x000005F7 ),           /* '#' */
  EW_GLYPH( 0x0024, 2, -33, 19, 37, 23, 0x00000B0E ),           /* '$' */
  EW_GLYPH( 0x0025, 1, -28, 27, 28, 29, 0x00001126 ),           /* '%' */
  EW_GLYPH( 0x0026, 1, -28, 25, 28, 26, 0x000017E5 ),           /* '&' */
  EW_GLYPH( 0x0027, 1, -30, 5, 10, 7, 0x00001E08 ),             /* ''' */
  EW_GLYPH( 0x0028, 2, -32, 12, 41, 14, 0x00001E60 ),           /* '(' */
  EW_GLYPH( 0x0029, 0, -32, 12, 41, 14, 0x00002217 ),           /* ')' */
  EW_GLYPH( 0x002A, 0, -28, 18, 17, 18, 0x000025C4 ),           /* '*' */
  EW_GLYPH( 0x002B, 1, -24, 20, 21, 22, 0x000028BC ),           /* '+' */
  EW_GLYPH( 0x002C, 0, -5, 7, 11, 9, 0x00002B29 ),              /* ',' */
  EW_GLYPH( 0x002D, 1, -14, 11, 4, 13, 0x00002BE0 ),            /* '-' */
  EW_GLYPH( 0x002E, 2, -5, 7, 5, 11, 0x00002C3A ),              /* '.' */
  EW_GLYPH( 0x002F, 0, -28, 15, 30, 16, 0x00002CB0 ),           /* '/' */
  EW_GLYPH( 0x0030, 2, -28, 19, 28, 23, 0x00002FCA ),           /* '0' */
  EW_GLYPH( 0x0031, 3, -28, 12, 28, 23, 0x00003406 ),           /* '1' */
  EW_GLYPH( 0x0032, 1, -28, 21, 28, 23, 0x000035FC ),           /* '2' */
  EW_GLYPH( 0x0033, 1, -28, 20, 28, 23, 0x00003ABA ),           /* '3' */
  EW_GLYPH( 0x0034, 1, -28, 21, 28, 23, 0x00003FB4 ),           /* '4' */
  EW_GLYPH( 0x0035, 2, -28, 20, 28, 23, 0x00004374 ),           /* '5' */
  EW_GLYPH( 0x0036, 2, -28, 20, 28, 23, 0x00004846 ),           /* '6' */
  EW_GLYPH( 0x0037, 1, -28, 21, 28, 23, 0x00004D4B ),           /* '7' */
  EW_GLYPH( 0x0038, 2, -28, 19, 28, 23, 0x00005157 ),           /* '8' */
  EW_GLYPH( 0x0039, 1, -28, 20, 28, 23, 0x0000567B ),           /* '9' */
  EW_GLYPH( 0x003A, 2, -22, 7, 22, 11, 0x00005B5B ),            /* ':' */
  EW_GLYPH( 0x003B, 0, -22, 9, 28, 10, 0x00005CB3 ),            /* ';' */
  EW_GLYPH( 0x003C, 1, -21, 17, 19, 20, 0x00005E84 ),           /* '<' */
  EW_GLYPH( 0x003D, 2, -19, 18, 12, 22, 0x000061AE ),           /* '=' */
  EW_GLYPH( 0x003E, 2, -21, 18, 19, 21, 0x0000635E ),           /* '>' */
  EW_GLYPH( 0x003F, 0, -28, 18, 28, 19, 0x000066B3 ),           /* '?' */
  EW_GLYPH( 0x0040, 1, -28, 34, 37, 36, 0x00006AA7 ),           /* '@' */
  EW_GLYPH( 0x0041, 0, -28, 27, 28, 27, 0x000075CE ),           /* 'A' */
  EW_GLYPH( 0x0042, 2, -28, 22, 28, 25, 0x00007B23 ),           /* 'B' */
  EW_GLYPH( 0x0043, 1, -28, 24, 28, 26, 0x00007FA9 ),           /* 'C' */
  EW_GLYPH( 0x0044, 2, -28, 22, 28, 26, 0x00008531 ),           /* 'D' */
  EW_GLYPH( 0x0045, 2, -28, 20, 28, 23, 0x00008967 ),           /* 'E' */
  EW_GLYPH( 0x0046, 2, -28, 19, 28, 22, 0x00008CC4 ),           /* 'F' */
  EW_GLYPH( 0x0047, 2, -28, 23, 28, 27, 0x00008FC0 ),           /* 'G' */
  EW_GLYPH( 0x0048, 2, -28, 24, 28, 28, 0x00009518 ),           /* 'H' */
  EW_GLYPH( 0x0049, 3, -28, 6, 28, 11, 0x00009855 ),            /* 'I' */
  EW_GLYPH( 0x004A, 0, -28, 20, 28, 22, 0x00009916 ),           /* 'J' */
  EW_GLYPH( 0x004B, 2, -28, 24, 28, 25, 0x00009C58 ),           /* 'K' */
  EW_GLYPH( 0x004C, 2, -28, 19, 28, 22, 0x0000A0EB ),           /* 'L' */
  EW_GLYPH( 0x004D, 2, -28, 31, 28, 35, 0x0000A351 ),           /* 'M' */
  EW_GLYPH( 0x004E, 2, -28, 24, 28, 28, 0x0000A8FC ),           /* 'N' */
  EW_GLYPH( 0x004F, 2, -28, 24, 28, 28, 0x0000ACED ),           /* 'O' */
  EW_GLYPH( 0x0050, 3, -28, 22, 28, 26, 0x0000B248 ),           /* 'P' */
  EW_GLYPH( 0x0051, 2, -28, 24, 33, 28, 0x0000B64A ),           /* 'Q' */
  EW_GLYPH( 0x0052, 2, -28, 23, 28, 25, 0x0000BC9D ),           /* 'R' */
  EW_GLYPH( 0x0053, 1, -28, 22, 28, 24, 0x0000C115 ),           /* 'S' */
  EW_GLYPH( 0x0054, 0, -28, 24, 28, 24, 0x0000C70D ),           /* 'T' */
  EW_GLYPH( 0x0055, 2, -28, 22, 28, 26, 0x0000CA5C ),           /* 'U' */
  EW_GLYPH( 0x0056, 0, -28, 26, 28, 26, 0x0000CE06 ),           /* 'V' */
  EW_GLYPH( 0x0057, 0, -28, 35, 28, 35, 0x0000D324 ),           /* 'W' */
  EW_GLYPH( 0x0058, 0, -28, 25, 28, 25, 0x0000DA34 ),           /* 'X' */
  EW_GLYPH( 0x0059, 0, -28, 25, 28, 24, 0x0000DFA8 ),           /* 'Y' */
  EW_GLYPH( 0x005A, 1, -28, 22, 28, 24, 0x0000E40A ),           /* 'Z' */
  EW_GLYPH( 0x005B, 2, -33, 9, 39, 11, 0x0000E884 ),            /* '[' */
  EW_GLYPH( 0x005C, 0, -28, 17, 30, 17, 0x0000EA2A ),           /* '\' */
  EW_GLYPH( 0x005D, 0, -33, 9, 39, 11, 0x0000ED91 ),            /* ']' */
  EW_GLYPH( 0x005E, 1, -28, 15, 14, 17, 0x0000EF38 ),           /* '^' */
  EW_GLYPH( 0x005F, 0, 0, 18, 4, 18, 0x0000F114 ),              /* '_' */
  EW_GLYPH( 0x0060, 1, -30, 10, 6, 13, 0x0000F1A4 ),            /* '`' */
  EW_GLYPH( 0x0061, 1, -21, 20, 21, 22, 0x0000F253 ),           /* 'a' */
  EW_GLYPH( 0x0062, 2, -30, 20, 30, 23, 0x0000F630 ),           /* 'b' */
  EW_GLYPH( 0x0063, 1, -21, 19, 21, 21, 0x0000FA3D ),           /* 'c' */
  EW_GLYPH( 0x0064, 1, -30, 20, 30, 23, 0x0000FDE9 ),           /* 'd' */
  EW_GLYPH( 0x0065, 1, -21, 19, 21, 21, 0x000101E3 ),           /* 'e' */
  EW_GLYPH( 0x0066, 0, -30, 15, 30, 14, 0x000105BD ),           /* 'f' */
  EW_GLYPH( 0x0067, 1, -21, 20, 29, 23, 0x00010849 ),           /* 'g' */
  EW_GLYPH( 0x0068, 2, -30, 18, 30, 22, 0x00010D32 ),           /* 'h' */
  EW_GLYPH( 0x0069, 2, -29, 6, 29, 10, 0x00011018 ),            /* 'i' */
  EW_GLYPH( 0x006A, -2, -29, 10, 37, 10, 0x0001113E ),          /* 'j' */
  EW_GLYPH( 0x006B, 2, -30, 20, 30, 21, 0x00011376 ),           /* 'k' */
  EW_GLYPH( 0x006C, 2, -30, 6, 30, 10, 0x0001173F ),            /* 'l' */
  EW_GLYPH( 0x006D, 2, -21, 31, 21, 35, 0x0001180B ),           /* 'm' */
  EW_GLYPH( 0x006E, 2, -21, 18, 21, 22, 0x00011C11 ),           /* 'n' */
  EW_GLYPH( 0x006F, 1, -21, 21, 21, 23, 0x00011E67 ),           /* 'o' */
  EW_GLYPH( 0x0070, 2, -21, 20, 29, 23, 0x00012270 ),           /* 'p' */
  EW_GLYPH( 0x0071, 1, -21, 20, 29, 23, 0x00012693 ),           /* 'q' */
  EW_GLYPH( 0x0072, 2, -21, 12, 21, 14, 0x00012A96 ),           /* 'r' */
  EW_GLYPH( 0x0073, 1, -21, 19, 21, 21, 0x00012C11 ),           /* 's' */
  EW_GLYPH( 0x0074, 0, -26, 12, 26, 13, 0x0001305D ),           /* 't' */
  EW_GLYPH( 0x0075, 2, -21, 18, 21, 22, 0x00013234 ),           /* 'u' */
  EW_GLYPH( 0x0076, 0, -21, 20, 21, 20, 0x00013473 ),           /* 'v' */
  EW_GLYPH( 0x0077, 0, -21, 30, 21, 30, 0x000137B3 ),           /* 'w' */
  EW_GLYPH( 0x0078, 0, -21, 20, 21, 20, 0x00013CB8 ),           /* 'x' */
  EW_GLYPH( 0x0079, 0, -21, 19, 29, 19, 0x00014056 ),           /* 'y' */
  EW_GLYPH( 0x007A, 1, -21, 18, 21, 20, 0x00014496 ),           /* 'z' */
  EW_GLYPH( 0x007B, 0, -31, 13, 38, 13, 0x00014797 ),           /* '{' */
  EW_GLYPH( 0x007C, 3, -28, 4, 33, 10, 0x00014B0C ),            /* '|' */
  EW_GLYPH( 0x007D, 0, -31, 12, 38, 13, 0x00014BA2 ),           /* '}' */
  EW_GLYPH( 0x007E, 2, -16, 23, 8, 27, 0x00014EE0 ),            /* '~' */
  EW_GLYPH( 0x00A0, 0, 0, 0, 0, 10, 0x000150EC ),
  EW_GLYPH( 0x00A1, 2, -21, 7, 28, 11, 0x000150EC ),
  EW_GLYPH( 0x00A2, 1, -26, 19, 31, 22, 0x00015249 ),
  EW_GLYPH( 0x00A3, 2, -28, 21, 28, 24, 0x000156E3 ),
  EW_GLYPH( 0x00A4, 1, -26, 26, 27, 28, 0x00015B0A ),
  EW_GLYPH( 0x00A5, 0, -28, 24, 28, 24, 0x00016191 ),
  EW_GLYPH( 0x00A6, 2, -28, 6, 33, 10, 0x00016685 ),
  EW_GLYPH( 0x00A7, 1, -28, 22, 37, 25, 0x00016793 ),
  EW_GLYPH( 0x00A8, 1, -29, 15, 5, 18, 0x00016F85 ),
  EW_GLYPH( 0x00A9, 1, -29, 29, 29, 31, 0x00017073 ),
  EW_GLYPH( 0x00AA, 2, -28, 14, 15, 18, 0x00017930 ),
  EW_GLYPH( 0x00AB, 2, -18, 16, 15, 19, 0x00017B7E ),
  EW_GLYPH( 0x00AC, 2, -16, 17, 8, 22, 0x00017E4A ),
  EW_GLYPH( 0x00AD, 1, -14, 11, 4, 13, 0x00017F4C ),
  EW_GLYPH( 0x00AE, 1, -28, 29, 28, 31, 0x00017FA6 ),
  EW_GLYPH( 0x00AF, 2, -28, 15, 3, 19, 0x000187AE ),
  EW_GLYPH( 0x00B0, 2, -28, 11, 11, 15, 0x0001881A ),
  EW_GLYPH( 0x00B1, 1, -26, 19, 26, 21, 0x0001899B ),
  EW_GLYPH( 0x00B2, 1, -28, 13, 15, 15, 0x00018C9A ),
  EW_GLYPH( 0x00B3, 1, -28, 13, 15, 15, 0x00018EB1 ),
  EW_GLYPH( 0x00B4, 2, -30, 10, 6, 13, 0x000190F9 ),
  EW_GLYPH( 0x00B5, 3, -21, 18, 29, 24, 0x000191B1 ),
  EW_GLYPH( 0x00B6, 1, -28, 16, 28, 20, 0x0001948F ),
  EW_GLYPH( 0x00B7, 2, -17, 7, 5, 11, 0x00019723 ),
  EW_GLYPH( 0x00B8, 2, 0, 7, 9, 10, 0x0001979D ),
  EW_GLYPH( 0x00B9, 2, -28, 9, 15, 15, 0x00019872 ),
  EW_GLYPH( 0x00BA, 2, -28, 14, 15, 18, 0x00019961 ),
  EW_GLYPH( 0x00BB, 1, -18, 17, 15, 19, 0x00019B9F ),
  EW_GLYPH( 0x00BC, 1, -28, 27, 28, 29, 0x00019E70 ),
  EW_GLYPH( 0x00BD, 1, -28, 29, 28, 31, 0x0001A40C ),
  EW_GLYPH( 0x00BE, 2, -28, 28, 28, 32, 0x0001AA76 ),
  EW_GLYPH( 0x00BF, 1, -21, 17, 28, 19, 0x0001B184 ),
  EW_GLYPH( 0x00C0, 0, -36, 27, 36, 27, 0x0001B551 ),
  EW_GLYPH( 0x00C1, 0, -36, 27, 36, 27, 0x0001BC05 ),
  EW_GLYPH( 0x00C2, 0, -36, 27, 36, 27, 0x0001C2C6 ),
  EW_GLYPH( 0x00C3, 0, -37, 27, 37, 27, 0x0001C9CB ),
  EW_GLYPH( 0x00C4, 0, -35, 27, 35, 27, 0x0001D107 ),
  EW_GLYPH( 0x00C5, 0, -38, 27, 38, 27, 0x0001D7E2 ),
  EW_GLYPH( 0x00C6, -1, -28, 38, 28, 38, 0x0001DF20 ),
  EW_GLYPH( 0x00C7, 1, -28, 24, 37, 26, 0x0001E5FE ),
  EW_GLYPH( 0x00C8, 2, -36, 20, 36, 23, 0x0001ED04 ),
  EW_GLYPH( 0x00C9, 2, -36, 20, 36, 23, 0x0001F188 ),
  EW_GLYPH( 0x00CA, 2, -36, 20, 36, 23, 0x0001F619 ),
  EW_GLYPH( 0x00CB, 2, -35, 20, 35, 23, 0x0001FAEE ),
  EW_GLYPH( 0x00CC, -1, -36, 10, 36, 11, 0x0001FFA0 ),
  EW_GLYPH( 0x00CD, 3, -36, 10, 36, 11, 0x000201A8 ),
  EW_GLYPH( 0x00CE, -2, -36, 15, 36, 11, 0x000203BD ),
  EW_GLYPH( 0x00CF, -2, -35, 15, 35, 11, 0x000206CA ),
  EW_GLYPH( 0x00D0, 0, -28, 25, 28, 27, 0x000209B9 ),
  EW_GLYPH( 0x00D1, 2, -37, 24, 37, 28, 0x00020E88 ),
  EW_GLYPH( 0x00D2, 2, -36, 24, 36, 28, 0x00021445 ),
  EW_GLYPH( 0x00D3, 2, -36, 24, 36, 28, 0x00021AE7 ),
  EW_GLYPH( 0x00D4, 2, -36, 24, 36, 28, 0x00022196 ),
  EW_GLYPH( 0x00D5, 2, -37, 24, 37, 28, 0x00022889 ),
  EW_GLYPH( 0x00D6, 2, -35, 24, 35, 28, 0x00022FB0 ),
  EW_GLYPH( 0x00D7, 1, -23, 19, 19, 21, 0x0002367C ),
  EW_GLYPH( 0x00D8, 2, -29, 24, 31, 28, 0x00023A29 ),
  EW_GLYPH( 0x00D9, 2, -36, 22, 36, 26, 0x000240FB ),
  EW_GLYPH( 0x00DA, 2, -36, 22, 36, 26, 0x000245DC ),
  EW_GLYPH( 0x00DB, 2, -36, 22, 36, 26, 0x00024ACA ),
  EW_GLYPH( 0x00DC, 2, -35, 22, 35, 26, 0x00024FFC ),
  EW_GLYPH( 0x00DD, 0, -36, 25, 36, 24, 0x00025509 ),
  EW_GLYPH( 0x00DE, 2, -28, 21, 28, 24, 0x00025AC7 ),
  EW_GLYPH( 0x00DF, 2, -30, 22, 30, 25, 0x00025E97 ),
  EW_GLYPH( 0x00E0, 1, -30, 20, 30, 22, 0x00026366 ),
  EW_GLYPH( 0x00E1, 1, -30, 20, 30, 22, 0x0002687E ),
  EW_GLYPH( 0x00E2, 1, -30, 20, 30, 22, 0x00026DA3 ),
  EW_GLYPH( 0x00E3, 1, -31, 20, 31, 22, 0x0002730C ),
  EW_GLYPH( 0x00E4, 1, -29, 20, 29, 22, 0x000278A5 ),
  EW_GLYPH( 0x00E5, 1, -32, 20, 32, 22, 0x00027DEB ),
  EW_GLYPH( 0x00E6, 1, -21, 32, 21, 34, 0x0002837F ),
  EW_GLYPH( 0x00E7, 1, -21, 19, 30, 21, 0x00028A32 ),
  EW_GLYPH( 0x00E8, 1, -30, 19, 30, 21, 0x00028F30 ),
  EW_GLYPH( 0x00E9, 1, -30, 19, 30, 21, 0x0002943C ),
  EW_GLYPH( 0x00EA, 1, -30, 19, 30, 21, 0x00029955 ),
  EW_GLYPH( 0x00EB, 1, -29, 19, 29, 21, 0x00029EB2 ),
  EW_GLYPH( 0x00EC, -1, -30, 10, 30, 11, 0x0002A3ED ),
  EW_GLYPH( 0x00ED, 2, -30, 11, 30, 11, 0x0002A5B8 ),
  EW_GLYPH( 0x00EE, -2, -30, 15, 30, 11, 0x0002A7AE ),
  EW_GLYPH( 0x00EF, -2, -29, 15, 29, 11, 0x0002AA60 ),
  EW_GLYPH( 0x00F0, 1, -30, 21, 30, 23, 0x0002ACF4 ),
  EW_GLYPH( 0x00F1, 2, -31, 18, 31, 22, 0x0002B2A9 ),
  EW_GLYPH( 0x00F2, 1, -30, 21, 30, 23, 0x0002B6A7 ),
  EW_GLYPH( 0x00F3, 1, -30, 21, 30, 23, 0x0002BBF4 ),
  EW_GLYPH( 0x00F4, 1, -30, 21, 30, 23, 0x0002C14E ),
  EW_GLYPH( 0x00F5, 1, -31, 21, 31, 23, 0x0002C6EC ),
  EW_GLYPH( 0x00F6, 1, -29, 21, 29, 23, 0x0002CCBB ),
  EW_GLYPH( 0x00F7, 1, -24, 21, 20, 23, 0x0002D235 ),
  EW_GLYPH( 0x00F8, 1, -24, 21, 27, 23, 0x0002D53D ),
  EW_GLYPH( 0x00F9, 2, -30, 18, 30, 22, 0x0002DA76 ),
  EW_GLYPH( 0x00FA, 2, -30, 18, 30, 22, 0x0002DDDE ),
  EW_GLYPH( 0x00FB, 2, -30, 18, 30, 22, 0x0002E153 ),
  EW_GLYPH( 0x00FC, 2, -29, 18, 29, 22, 0x0002E50C ),
  EW_GLYPH( 0x00FD, 0, -30, 19, 38, 19, 0x0002E8A4 ),
  EW_GLYPH( 0x00FE, 2, -30, 20, 38, 23, 0x0002EE23 ),
  EW_GLYPH( 0x00FF, 0, -29, 19, 37, 19, 0x0002F2EE ),

  EW_FONT_PIXEL( FlatFontXL, 0x0002F88F )                       /* ratio 48.42 % */
    0xBDEF7BFF, 0xEF7BDEF7, 0xF7BFF3FD, 0xDDEF7BDE, 0xBC01F3C1, 0x5101338B, 0xE04D4F1F,
    0x01F3895D, 0x60A507F3, 0x03BE093E, 0x256605DF, 0x3F300A23, 0x37C01FDE, 0xAC804D45,
    0xCE004EF9, 0x4A003F37, 0x40000025, 0x7CE004A9, 0x359003F3, 0x9BE009DF, 0xFCC026A2,
    0x59807F78, 0xBE0288C9, 0xA505DF03, 0xE7093E60, 0x4F0FE603, 0xC95DE04D, 0x1FA88099,
    0x4EF007CF, 0xF7BDEFFC, 0x70777BDE, 0x0197BDEE, 0x00900000, 0x40000026, 0x06008B00,
    0x06008000, 0xD6000380, 0x0005F7BD, 0xFF7D8C00, 0x8BF219C5, 0x22464448, 0x17F219D2,
    0xDC47DEF7, 0x0000077B, 0x81604020, 0x80810481, 0x00898244, 0x00060581, 0x8C1F7BFF,
    0x24002F7B, 0x00030F0B, 0x261C4883, 0x06121E00, 0x0797001B, 0x0F00121E, 0x003C1917,
    0x64583C18, 0xF0303000, 0xBDEF0167, 0x7BDC6EF7, 0xF7B9E2EF, 0x000000BE, 0xEF000000,
    0xBF06F7BD, 0xB88FEF7B, 0xC817DEF7, 0x01E0C1E0, 0x7F0322C0, 0x2CFE0006, 0x3001FC58,
    0x00B24448, 0x10F1B0F0, 0x7BDEE209, 0xF7BBF06F, 0xEF7B88FE, 0x0000001D, 0xB8800000,
    0x7587DEF7, 0xF7D8BDEF, 0xC5803BDE, 0x0003031F, 0x00C3C4C9, 0x61C0C0C0, 0xC061E002,
    0xCB800FE0, 0x00030F03, 0x3C19170F, 0x8B124800, 0x8C40000C, 0xB9800091, 0x00000FF7,
    0x00000000, 0xDE8C0000, 0x809DDCCD, 0x301AF6F8, 0xFE205ED6, 0x17E8800F, 0xF30001BE,
    0xFFAC1461, 0xCD01BFBD, 0xDA93BA0F, 0x4C061C89, 0x2267E1A0, 0x13482803, 0xAAAA8809,
    0x7E026034, 0xFDAFDFBF, 0x8C0027A0, 0x07EEF107, 0xE301BF00, 0xC4016F3B, 0x7F3101FF,
    0xF7C401FB, 0x7EF8C01B, 0x67BDA801, 0x3001DA80, 0xC80DF3DE, 0xFECF000F, 0xF0005502,
    0x7DFBFC34, 0x819806DF, 0x3E7399E7, 0x21620600, 0xFC40C007, 0x781D01A1, 0x13F6A066,
    0x3FC16F8C, 0xB9DF185E, 0x65503F77, 0x3F20003D, 0x3C001D7C, 0xB7DD603B, 0xFED63112,
    0xFBF98802, 0x03DDFF27, 0x00000000, 0x0AAA8000, 0xDFFDF200, 0x000017B3, 0x46299EE6,
    0xA00013FF, 0x00F200DE, 0x26801BF1, 0xC62CF77F, 0x27B57E03, 0xE8974188, 0x623D42E2,
    0x26C14481, 0x0003A5E0, 0x354AC4C0, 0xE4980001, 0x28901A2B, 0x986F04D8, 0x2E831003,
    0x94F6C5D1, 0xFE4D006C, 0xA98C59EE, 0x0DEA0069, 0x3D378F20, 0x9EE6000F, 0x73FF4629,
    0x2000D14C, 0x7B3DFFDF, 0x00137971, 0x2C61CC00, 0xCD100000, 0x7B9DF9E5, 0xBF0002BE,
    0xABEF8730, 0x05EFCF10, 0xBDA23D40, 0x0036600F, 0xA9391D2F, 0x3317FDFF, 0xA9AA5600,
    0x2FCA5F88, 0x15F20144, 0x0C40F04D, 0x3986F012, 0x3C000038, 0x00071B25, 0x7821A680,
    0xF0483102, 0x2281E7A4, 0x885F94BE, 0x06AECF02, 0xFDFFA939, 0xF1803317, 0xC02DE04B,
    0x7E0000D3, 0xEFA8855F, 0xE77EB003, 0x0009DD9E, 0x6215D3A8, 0x4000BDAC, 0x5E88017D,
    0x0006F000, 0x893C009D, 0xC0E9EFB1, 0xFC46C007, 0x03135887, 0xF013C480, 0x40020007,
    0xE3F80122, 0x3F87E449, 0x79A20F00, 0x0014F276, 0xEFF4F139, 0x0007C60B, 0x6785589D,
    0x01388003, 0x0000FDE2, 0x004DF00F, 0x7806F7C0, 0x9E79E203, 0x020FD882, 0x7DF3C1F9,
    0xB037C35F, 0x243EA14E, 0xB5616616, 0x5CD3C0DF, 0xE3643E24, 0xC2A6B03F, 0x3882C0C5,
    0x45137E89, 0x88379000, 0x60449189, 0xE00FF901, 0xC0D90785, 0xF03D4178, 0xA20DF587,
    0x980417BE, 0xEF7D9E03, 0x9E013DF9, 0x0001FF06, 0x3D884D60, 0x2FCC4003, 0xDDDE05D0,
    0xDE78C495, 0xC43F3EFB, 0x77BDCF97, 0x20090000, 0x02603010, 0xE4027A00, 0xDE407F5E,
    0x49C402A1, 0x0DF805F1, 0x0F980F7E, 0x44D101F3, 0x01D06F03, 0x98131262, 0xF0FC04C1,
    0x03107203, 0x8D805078, 0x4090780D, 0x90902604, 0x060244C0, 0x00000200, 0x80010000,
    0x04898001, 0x81102424, 0xE0242809, 0x50780D8F, 0x00C41C80, 0xCC03F0FC, 0x12620260,
    0x3F06F013, 0x80D93440, 0xC01EB0F9, 0x401BF06F, 0x00FF149C, 0x004F0EF2, 0x6B3FAF72,
    0x1DEBF001, 0x3FC61C80, 0x7F197C80, 0x0BC66CC0, 0x007CC558, 0x9C80D06F, 0xCC3E0364,
    0x2621F200, 0x2807E2E0, 0xE062048C, 0xE0361401, 0x883C01E0, 0x10261204, 0x40480010,
    0x00000002, 0x09000120, 0x30900404, 0xE0488981, 0xB030078F, 0xA80A0F01, 0x8FE00C60,
    0x988B101F, 0x80660CC0, 0x7E06C978, 0xC3CF0341, 0x18FD407C, 0xE42F882F, 0x7634881F,
    0x03BD7E00, 0xFBDDF800, 0x00180001, 0x18000040, 0x0031801C, 0xF7BD2460, 0xDEE62024,
    0xF78C788F, 0xEEF9C9BC, 0x103CFC3B, 0x813E61F3, 0x4CDF3A8C, 0x277EB180, 0x1EFFDE78,
    0x0BBBFF30, 0x00D406B0, 0xE4331F90, 0xF909C00F, 0xE01678FE, 0xF14F1C1B, 0x730F500E,
    0xA0B886F0, 0xF22F997E, 0xFB500E35, 0x013BD580, 0xFFFFFF18, 0xCC80005F, 0x000000CC,
    0x00000000, 0x00000000, 0x00000000, 0xDEF7BC00, 0xEF86EF7B, 0xFDEF7BDE, 0x00000003,
    0xC0000000, 0xF7BDEF7B, 0xBDEEF86E, 0x003FDEF7, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x7BBBB200, 0xBDEE7801, 0x0000007F, 0x143C7F04, 0x9460C6FE, 0xF3262BC6,
    0x2F55FF11, 0xDEF7BDEF, 0x017DEF7B, 0x98000000, 0xC61BFBFF, 0x309AEA9B, 0x78C64262,
    0xF8001D53, 0xA003FBDF, 0x87003F92, 0x58A20098, 0x0FE0AC00, 0x801647C0, 0x7C003C1C,
    0xA87800F8, 0x1FC95004, 0x002C4380, 0x58005451, 0x4FE001C1, 0x1E2C8016, 0x007C3E00,
    0x50048C3C, 0x21C007C9, 0x05450016, 0x001C1980, 0xC80164FE, 0xC1E001E2, 0x48C7C007,
    0x007C9500, 0xC00589FC, 0x13C002A2, 0x590E001C, 0xF77A8000, 0x05BF67B9, 0x4737FB90,
    0xBF7F3188, 0x000F6304, 0x004E13B5, 0x22560E20, 0x1BCF73DE, 0xF10F9318, 0x3FE6219F,
    0x6B1233F0, 0xF990B180, 0x87F01FC0, 0x1E00F0BA, 0x08010938, 0x10004848, 0x00000013,
    0x00000000, 0x00000000, 0xC4C00000, 0x00200000, 0x40080C40, 0xC0281E42, 0x01705382,
    0x9E072A17, 0xA4614601, 0xC433FE0F, 0xE63E07FC, 0x9EE7BC40, 0x4E263037, 0xE40F2002,
    0x1375002E, 0x4737EFC4, 0xBF7F3188, 0x0EFA8004, 0x7BF3DE30, 0x7BFEB902, 0xFEFE6206,
    0x16F7C09D, 0x90132000, 0xC427FF6B, 0xC01EFFDC, 0x00000EF7, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF73EEF3C, 0xA001F7EC,
    0x211CDFFE, 0x0176FCC6, 0x8C012FD6, 0x01B301EF, 0x68897E20, 0xBFEF7DA8, 0x0378D103,
    0xEB906FCF, 0xF1078507, 0x86214F01, 0x01802C4C, 0x0B801C04, 0x9EF7BD8C, 0x18310700,
    0x58008C63, 0x07400028, 0x2630000E, 0xFE4000AA, 0x4000F883, 0x002FC0DC, 0x7E89FE20,
    0x607FC000, 0x1BF0002D, 0xFC001A78, 0x0007CF0A, 0x01F3C2BE, 0xF3C1EF80, 0xF07E8001,
    0x17A0007C, 0xAC000F9E, 0x0003E785, 0xF7B9E1B3, 0xBDEF7BDE, 0x1FC7DEF7, 0x00000000,
    0x00000000, 0xFBDFFBF3, 0x3000F5FF, 0x5924FBCF, 0xF802FF6B, 0x3B5000DE, 0xC8001FA1,
    0xECF05C8B, 0xC81DFF7B, 0x37D60FC5, 0x8FC1F5C8, 0x03503642, 0x7804C483, 0xEF7BDC20,
    0x0000000F, 0x6000190A, 0x18003E25, 0xC02C636F, 0x3DDEF7B8, 0x0000FE31, 0x000076B1,
    0x000028C4, 0xE300D7EA, 0x1DFF7BDE, 0x72001358, 0x000344ED, 0x8C5443F9, 0x3C004631,
    0xF7BD9E30, 0x84C0009E, 0x6440F00D, 0x7E201EA2, 0x7AF83E50, 0x46277390, 0xBED6035A,
    0xE226FFF7, 0x20003FE2, 0x2BD881BE, 0xA02ED400, 0xB592576F, 0x80012FF6, 0x3BDEF738,
    0x005F8000, 0x000F5000, 0x00005E00, 0x400009BC, 0xBC00004D, 0x27400048, 0x98C00055,
    0xB80007C4, 0xB0000741, 0x80013506, 0x0017897C, 0x026F06F0, 0x0B18B300, 0x05C68800,
    0x1CC17C00, 0xE453C000, 0x0FC4000B, 0x17E0002F, 0xEF7BDDF8, 0xBDF613BD, 0x000007BF,
    0x00000012, 0xDEFFC000, 0xF7BDEF7B, 0xDF613BDE, 0x000003FB, 0x00000000, 0x00000000,
    0x7B800000, 0xDEF7BDEF, 0xF7BDEF7B, 0x0000083E, 0x16000024, 0x71120000, 0xDEF7BDEF,
    0x707DEF7B, 0xC0800090, 0x12240004, 0x00713000, 0x7F318900, 0x3BF67BFF, 0x5BDF8080,
    0x5FDCC629, 0x3C004240, 0x0002C0FF, 0xCF020FC6, 0x037CF7BE, 0xFF9D419E, 0x78837EFB,
    0x3907C176, 0x2C0DE027, 0x441F2000, 0x121B0000, 0x44440000, 0xCEA0B800, 0x1801E739,
    0x405C0F90, 0x8188C83C, 0x817E01E7, 0x275F85E2, 0x7E20F7E3, 0xFF58853C, 0x4CC1777B,
    0x9E000AFC, 0x0015BF06, 0x6FA01FD1, 0x77D59257, 0xDFEA8001, 0x58005EFF, 0x012AB7E7,
    0x003BFC60, 0x004FF500, 0x3102FA80, 0x80BDFFBF, 0x7DCF0378, 0x89D0049F, 0xB10002FE,
    0x30002CF0, 0x0001F883, 0x778C543F, 0x0AFFFBDF, 0xDBFFC0C4, 0xEFCF9073, 0x7DE07817,
    0x241FEA00, 0x47E30004, 0xDEFB9880, 0x5C33C15F, 0xD41DEF88, 0xF013E0AF, 0x0A06F016,
    0x907C8098, 0x40600011, 0x0B80485E, 0x88002612, 0x43601B05, 0x10056266, 0xE21F060F,
    0x3F02FC07, 0x0DF9E256, 0x4C41EFC6, 0xDEFB50BC, 0xD40BF05D, 0x80FD000B, 0xFC804BF9,
    0xDFFEA016, 0xFEF3E493, 0xBDEF781F, 0xEF7BDEF7, 0x7BDEF7BD, 0x0001BDEF, 0x00000000,
    0xDE2A0000, 0xF7BDEF7B, 0xBDEF7BDE, 0x8000B87F, 0x0001461F, 0x0002F0B9, 0x001F20BE,
    0x003E2620, 0x02C41BC0, 0x004C4C00, 0x03E20AC0, 0x04A87C00, 0x05E26600, 0x0350FC00,
    0x17127800, 0x1462F000, 0x1F035000, 0x1311A000, 0x2F031800, 0x1311A000, 0x15851800,
    0x3F0BC000, 0x3C1F2000, 0xE0FC0009, 0x61720005, 0x0BE0000C, 0x4C4000BC, 0x500003E4,
    0xECF73EEF, 0xFEC600B7, 0xCC6211CD, 0xFEA01EDF, 0x0FF8C003, 0x880017C4, 0xE206F07F,
    0x2074F73D, 0xCFF81E5E, 0x8F07EB10, 0xCF00D448, 0x00C24640, 0x0000203C, 0x2400C0C8,
    0x81542C22, 0xF03A2C2A, 0x43F310CD, 0xF105F134, 0x20DE7B9E, 0x05DA81FE, 0x3500F6A0,
    0xDE09AC01, 0x5F8C0137, 0xEFC627A3, 0xAC0DF3DE, 0x176A1725, 0x9BC2ECF1, 0x11A0341F,
    0xC00C40CF, 0x00313D80, 0x404C8980, 0x40680C42, 0xCF07FFC3, 0x07BF50AF, 0x7EA1319E,
    0xC15FDEF7, 0x80016F4C, 0x03AFC5E7, 0xD607F440, 0x62119F7D, 0x0059EF3C, 0xFBDF6F9E,
    0xC6004DFF, 0xD6419EFE, 0xFD402FFB, 0x26FE4007, 0xA0005F18, 0xFC606E0B, 0x7885DDEE,
    0x17630351, 0xC9C857E3, 0x05F02E1F, 0x01C83CFE, 0x5818A144, 0x18061B00, 0x0C130900,
    0xB0290580, 0x720F0000, 0x70D80A00, 0x3302F181, 0xFA317630, 0x85E2101F, 0xAF77BBF1,
    0x00558300, 0x26FC4C24, 0x80C1FAC0, 0xCE41CF77, 0x600C1F7F, 0xFFDEFBBC, 0x00FC1E9B,
    0x00F12780, 0x49E1FC80, 0x10767800, 0xDAC6200D, 0x7013A05F, 0x603DD9EF, 0x7880004D,
    0xF310001B, 0x9AC8004E, 0x30037DDF, 0x8C37F7FF, 0x6135D537, 0xF18C84C4, 0xFFCC3AA6,
    0x00000DFD, 0x00000000, 0xC0000000, 0x30DFDFFC, 0x84D754DE, 0xC6321311, 0xFCC0EA9B,
    0x78C0DFDF, 0x184C5D53, 0xC60C84C1, 0xFCC0EA9B, 0x0000DFDF, 0x00000000, 0x00000000,
    0x9E000000, 0x001FEF7B, 0x01000000, 0xF8503C7F, 0xA1460C63, 0xF32622F1, 0xBD57FC41,
    0x4F640000, 0x5EDF1800, 0xDBF3C001, 0xFF30004F, 0x7D90015F, 0xE30204DE, 0xF6402BDB,
    0x7EDF9E99, 0xFDF9E202, 0x057DF857, 0x82BF7BC6, 0x9EF6B109, 0x1BF58001, 0x7BDCC000,
    0x80CCE006, 0xC0AFDEF1, 0x880AEF78, 0x84EFF7E7, 0xC826F3E8, 0x300DFFF5, 0xAA02BFFF,
    0x4FDBF500, 0xBBE30000, 0xE880002B, 0x600026F3, 0x7BDC67FE, 0xDEF7BDEF, 0xF7BDEF7B,
    0x000000BE, 0x40000000, 0xBDEF7BDC, 0xEF7BDEF7, 0x00BEF7BD, 0x00000000, 0x7BDC4000,
    0xDEF7BDEF, 0xF7BDEF7B, 0x000000BE, 0xC0000000, 0xC00026F3, 0x000AFFFC, 0x15FF7EA0,
    0xFBEC8000, 0x88044026, 0x5015FFF9, 0xF500ABE7, 0xF9E04FFB, 0xDF201EDD, 0xED6209D3,
    0xFD6212BD, 0xFFF46027, 0x000404F7, 0x50004ECF, 0x00077DDF, 0x13DFFFD9, 0xB9893D90,
    0xFD412BFF, 0xBBF22BFE, 0xF73100EF, 0x009EB0AF, 0x001DF7D9, 0x02BFEFA8, 0xF7FB9880,
    0xBEFB2000, 0xBFEA0003, 0xCF000002, 0xFB3DCFB7, 0xBFFD402D, 0xF3188467, 0x5F3C07B7,
    0x41FF1802, 0x710002FE, 0x77F205F8, 0xF90379EF, 0x622EC428, 0x9E25FC36, 0x7B860B00,
    0x0101FDEF, 0xFE030001, 0x00F0D000, 0x024F0BA0, 0x0FE42EF0, 0x6F226F80, 0xE41F7800,
    0xC4CF004D, 0x234009D8, 0x264001FF, 0x84C000BE, 0x12020007, 0xEF7B9E00, 0x00000005,
    0x00000000, 0x069CF780, 0xAC466B00, 0x2E1B0009, 0x00B86C00, 0x35889EB0, 0xF9880001,
    0xD9EF73EE, 0x00004ADF, 0xE779DF18, 0xFD3C6208, 0x40000FDF, 0x8001FBBC, 0x0012FDF1,
    0xEF513D8C, 0xFFDEF73E, 0x05DA8337, 0x9E4FF180, 0x408E6FFF, 0x10E9EF3E, 0xFF9000DF,
    0x0097DF10, 0x7F887B58, 0xFF10DC00, 0x7FC80007, 0x4DE01F8A, 0x100001BE, 0xE4033C27,
    0xBF501564, 0x816FCF73, 0x93417931, 0xABF7E20D, 0x82FFD510, 0x0F902797, 0x02FF103F,
    0xC5102FE4, 0xF04C43C2, 0xCF7D9E0D, 0xFC5CD804, 0xE629E058, 0x4041C437, 0x3F8310F1,
    0x0E17C978, 0x50A49209, 0x181F8350, 0xF844104C, 0x8160E093, 0x64848020, 0x98046281,
    0x0304000C, 0xC1807832, 0xC0E4C001, 0x008201C4, 0x48900092, 0x48201810, 0x62400200,
    0x00026482, 0x628044C0, 0x48903933, 0xC7C03070, 0xE1603043, 0x61214F07, 0x05924AA6,
    0x986F1839, 0x5AA1F83F, 0xF0993634, 0x46FB9E62, 0xFD6FAC3D, 0x781DE17E, 0xA04CF050,
    0xE9E4BF7E, 0x2882EF12, 0x157EF03E, 0xEC4FEF51, 0x7B58C435, 0x80F18702, 0x6FCE77E7,
    0xB3DF7A22, 0xD24F013B, 0x00000001, 0x0000FC9A, 0x50F3C000, 0x000000BF, 0xFB506F80,
    0x00064001, 0xF7E45FE0, 0xAD444AEF, 0x0000BFDF, 0xD720EBF1, 0x3DEF7FEF, 0x001B2EBF,
    0x0033DAC0, 0x80001790, 0x2AB7CF7C, 0xFF7EB591, 0x71000009, 0x001FBDEE, 0x27819800,
    0x07E00000, 0xC6000026, 0x00001F00, 0x0007203E, 0x01F00B00, 0x89819800, 0x8FE00005,
    0x002621FA, 0x1CFF0B20, 0x3E0003F8, 0x2543F2C4, 0x09E0F000, 0xA0007C0F, 0x781C8712,
    0x1441C000, 0x0007C87E, 0x13027851, 0xE066002E, 0x009E1440, 0xC07887E0, 0x3180261F,
    0x0F82C050, 0x881707C0, 0x05800E42, 0xDEF7BDDF, 0xC03E0B7B, 0x16000013, 0x100000E0,
    0x00016413, 0x581E0FE0, 0xEF7BDEF7, 0x40DEF7BD, 0x03F07C25, 0x950F84C0, 0x3F000318,
    0x03E07078, 0x25903180, 0xC000B10A, 0x540AC707, 0xA8158000, 0x7BDEF718, 0xDEF7BDEF,
    0x0007AFFF, 0xEF6B5900, 0xF1800002, 0xE000009B, 0xF7BA801D, 0x1DFF7BDE, 0xAE4000D0,
    0x0000543F, 0x0003C146, 0x00002030, 0x82800000, 0x03980005, 0x78C00123, 0xD405C45F,
    0xBBDEF7BD, 0x001BE227, 0x002ED400, 0x009BD400, 0x00BB5000, 0xF7BDEF75, 0xBE20FDDE,
    0x37C60000, 0x40002F11, 0x100003C3, 0x00000489, 0x11220000, 0x783F0000, 0xBF3C4000,
    0xF7500E07, 0xF9EF7BDE, 0x0003C60A, 0x0007F180, 0x000EE620, 0xDEF3C620, 0x779E0017,
    0xDFFF7B9F, 0xFF98000A, 0x9F208E6F, 0xC4006FBE, 0x31004DEF, 0x0BFC00F7, 0xC13FE400,
    0x9DF9E037, 0x881DFF7B, 0xBE20F503, 0x3B5C82AF, 0xBC341E31, 0x785F200F, 0x00B90319,
    0x82846254, 0x6505000F, 0x5FE00143, 0x0184C555, 0x7EFDFA80, 0x002247BF, 0x00030000,
    0x00000080, 0x04000000, 0x0C000000, 0x02240000, 0x06130000, 0xDF7DEA00, 0x00280CB7,
    0x0CE739EC, 0xE001F83F, 0x8C0C6581, 0x2312A009, 0x2007A179, 0x14F0F85F, 0x8C0EFFE2,
    0xC26313B5, 0xEFB98897, 0x7103BBBD, 0x0001EC40, 0xEC409FF2, 0xF731000E, 0xF7CEB000,
    0xEF3C620C, 0xDEE2037D, 0xF7BDEF7B, 0x003EFD9E, 0xDF98C400, 0x400000E9, 0x00005DAC,
    0xD4015F90, 0xBD9EF7BD, 0x000DF102, 0x10B7D188, 0xBF100007, 0x00005C81, 0x0002F027,
    0x001E2164, 0x001B0B80, 0x0003C160, 0x00009090, 0x60000102, 0x00000000, 0x00006000,
    0x00004080, 0x40002424, 0xF00003C1, 0x18000D87, 0x80007885, 0x800130B8, 0x03640FFC,
    0x03DDEA20, 0xEF750071, 0x0337E7BD, 0x00000DF1, 0x00005FF2, 0x0007FD62, 0xA77E6310,
    0xDEF7B881, 0xF7BDEF7B, 0xBDEF7BDE, 0x000001F7, 0x00000000, 0xDEF79000, 0xF7BDEF7B,
    0x001F7BDE, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBDEF7900, 0xEF7BDEF7,
    0x0000005D, 0x00000000, 0xEF7BC800, 0x7BDEF7BD, 0x000002EF, 0x00000000, 0x00000000,
    0x00000000, 0x40000000, 0xBDEF7BDE, 0xEF7BDEF7, 0x0000005D, 0x00000000, 0x7BDEF710,
    0xDEF7BDEF, 0xF7BDEF7B, 0x00000002, 0x00000000, 0xF7BDEF79, 0xBDEF7BDE, 0x00000017,
    0x00000000, 0x00000000, 0x00000000, 0xF7BC8000, 0xBDEF7BDE, 0x00000EF7, 0x00000000,
    0x7BDE4000, 0xDEF7BDEF, 0x0000077B, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0xE7DBE780, 0x0D6FFFDE, 0x3DF3AC00, 0xFDEAC823, 0x0EEC404B,
    0x203F6A00, 0xC40003FE, 0xA80DF057, 0xDFF7B9DF, 0x14F05F01, 0x720ABFBC, 0x797881DD,
    0xDC404D61, 0xB20634C0, 0x8C428C01, 0x1B000782, 0x006C3F9E, 0x59CE73CC, 0x88001E0B,
    0x00848888, 0x00090000, 0x00000000, 0x7BDEE300, 0xDEF7BDEF, 0x10000017, 0x12000048,
    0x84C00002, 0x7BDEE302, 0x70FE07EF, 0x503C0001, 0x85900009, 0x34000178, 0x812007D4,
    0xAFF9E0B1, 0x035F3E44, 0xFFEC81FA, 0x3DFFF7BD, 0x0B7C7F10, 0x415F9000, 0xB20006FF,
    0xDED405FF, 0x67C892AB, 0x710BFEFD, 0x007FBDEF, 0xBBDEF758, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7BDE4000,
    0xDEF7BDEF, 0x00036F7B, 0x00000000, 0x00000000, 0x7BDEF790, 0xDEF7BDEF, 0x000000DB,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x7FE00000, 0x0001BDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xEF7BDEF0, 0x00000003, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xAD6B1000, 0xA30000F5,
    0x0C00FBBB, 0xA0078488, 0x03442A60, 0x87F4C81D, 0xBBC60EF5, 0x301CC7E0, 0xC27BBDF7,
    0x00093898, 0x1FB90FE3, 0x100EE600, 0xC92BBFDF, 0x710BFFEA, 0x007FBDEF, 0xDEF7BDD6,
    0x34F00009, 0x180009AC, 0x001A783F, 0xF8C0FF90, 0x02710000, 0xF80007F9, 0x0004E206,
    0x06F82DE0, 0xE84D6000, 0xC3540002, 0xF180005C, 0x8000BD41, 0x03F18138, 0x7912F800,
    0x82DE0000, 0x3900012F, 0x00001BC1, 0x00007C40, 0x0002D408, 0x03BC2FD0, 0x2AD6B000,
    0x560001C4, 0x03F206F3, 0xC3646C80, 0x980000F3, 0x0012FC0F, 0x2F112FC0, 0xA1788000,
    0x5A800016, 0x00000EF0, 0x0007103D, 0x0FC81380, 0x3C364000, 0x2CC00013, 0xEF7B8CE8,
    0x000003FD, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xDEF20000, 0xF7BDEF7B, 0x007F7BDE, 0x00000000, 0xDEE20000, 0x005DEF7B, 0xBDEF7580,
    0x03E006F7, 0x40007C00, 0x1230000E, 0x8001F000, 0x0160000F, 0x10000580, 0x00330013,
    0x800FE040, 0x8580023F, 0x9859004A, 0x07C4EC00, 0x0038C3E0, 0xC00787E4, 0x30002F83,
    0x25402C83, 0x0A2000B1, 0xE2B07007, 0x541D7002, 0x05FC2880, 0x5892A100, 0x00590560,
    0xF81F0780, 0xC18001F0, 0x06303187, 0x82004931, 0xA1F0FC2C, 0xC1C00002, 0x0001C2C4,
    0xF1E209E0, 0x00985904, 0x0E38984C, 0xF800001E, 0x03E146A1, 0xF0318000, 0x00002547,
    0x003810F8, 0x100AC000, 0x1000000F, 0x00004C0B, 0x01F83F80, 0x62540000, 0x0000000C,
    0xF0003E1F, 0x06EF7BDC, 0xF7BDDF80, 0x000B1806, 0x0026F000, 0x002F1000, 0x0026A000,
    0x0003A000, 0x001F8800, 0x0029E000, 0x005E0A00, 0x3642F600, 0x589D0000, 0x17800003,
    0xF500002E, 0x00002C60, 0x0137817E, 0x5E234400, 0xA1660000, 0x6F000026, 0x400003A0,
    0x001F88BE, 0x29E06B00, 0xE06E0000, 0xC600005D, 0x00000E44, 0x0000013A, 0xA000002F,
    0xA0000026, 0x88000003, 0xE000001F, 0xC0000029, 0xD6300017, 0xFFEF7FEF, 0xE40006B7,
    0x5925776F, 0x60097FBD, 0xF6A002EE, 0x0037AC04, 0xAA09DE20, 0xBDFFDF21, 0x2DE137FF,
    0x33FEA178, 0x782FF9C9, 0x07E31331, 0xC9C81BF0, 0xC3400D07, 0x01460727, 0x0B230350,
    0xEA0A000A, 0x3F8006C0, 0x000B019C, 0x00482426, 0x00058808, 0x00000060, 0x60000580,
    0x10009000, 0x000B0910, 0x0D85E426, 0x05387F00, 0x95050005, 0x1800A303, 0xD07D2303,
    0x98F85C00, 0xF803F189, 0x85E27206, 0xE724CFFA, 0xEA1781FF, 0xF7FF7C85, 0x2E84DFFE,
    0x8000DF30, 0xEE601778, 0x13FEA002, 0x5DFEFE40, 0xDFEF5649, 0xEF7BFF00, 0x7BDEF7BD,
    0x005DD9EF, 0xBF58C400, 0x3000005D, 0x00000B7E, 0x7B9C02F4, 0xFFF7BDEF, 0x0003BC26,
    0xF103DCE4, 0x42E20002, 0x428C0001, 0x8480000C, 0x00000009, 0x00980C00, 0x00482880,
    0x01502FC0, 0x07ECF100, 0xBDEE700E, 0x0DF3DEF7, 0x00001E78, 0x400007D4, 0x40003FBC,
    0x099DF98C, 0xEF7BDEE0, 0x0FBF67BD, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0xFF460000, 0xDFFFBDCE, 0x7B18004A, 0xFAB20AAF, 0xB58025FF,
    0x7ECF0007, 0x2000DD00, 0x05CC07BE, 0xFEF73DE3, 0x1037E03B, 0x419ECF0D, 0x8B885BAE,
    0x201F5037, 0x2628C4BE, 0xE1A200BC, 0x002540AA, 0xE1B1E04F, 0xA885000F, 0xFE000784,
    0x00242630, 0x00809C24, 0x00060980, 0x00000000, 0x00000060, 0x04C00040, 0x12001213,
    0x000780CE, 0xFC3630FE, 0xA9E0A001, 0x4F002540, 0x1784C2A0, 0xDE1C3440, 0xF8807D40,
    0x1A21E312, 0x5C933D9E, 0xE61710BB, 0xEFFEF182, 0x0F4277FD, 0xE2000DD0, 0x07B5809B,
    0x600FE200, 0xC82ABDEC, 0x000BF584, 0xDEE77FA3, 0xED417FFF, 0x2FE80002, 0x0007BF90,
    0x9E27F9E0, 0xD8C00007, 0x00007E65, 0x25EFDF88, 0xDEF7BDEE, 0x67BDEF7B, 0x00004FBF,
    0x777E6310, 0xE8800001, 0x6000001D, 0xEF79007C, 0x6F9EF7BD, 0x40003D40, 0x00E0BB3C,
    0x00A17800, 0x0080E400, 0x0060B000, 0x00305800, 0x02207200, 0x0585E000, 0x17FCE400,
    0x7BC807E2, 0xFFF7BDEF, 0x0012FC26, 0x003DF100, 0x01F79800, 0x007F8000, 0x7BDEF790,
    0x0000683F, 0x0078C0CF, 0x00D0BC00, 0x5C819E00, 0x5E1A0000, 0x88550000, 0x30D00006,
    0x14600003, 0x340001A2, 0x180004AC, 0x0001A20F, 0x18033C34, 0xF7BFF7EB, 0x2001F7EC,
    0x892BBB7F, 0x00B3BF31, 0xA2002ECF, 0x05F3C077, 0xF87F1800, 0x7BFFBE41, 0x9A309EEF,
    0x133DC819, 0x8660FDE3, 0xE7801D0B, 0x09849441, 0xC05FC360, 0xF7DF5004, 0x3A1B3F7D,
    0x9E79F200, 0xBC815867, 0x1F880013, 0x02DE7BC4, 0x880DE780, 0x07BF3BF9, 0x401FF980,
    0x003A77D4, 0x100AFEC6, 0xCF004EEB, 0x8803DFEF, 0xD72005F7, 0xCC03BFFE, 0xF7390009,
    0x0007406F, 0xF5113B50, 0x0EFBEFBC, 0xCFF07E00, 0x007CE739, 0x1F091018, 0x04F10900,
    0x07E40346, 0xCF6B0D7F, 0x889DAE44, 0xBC607CC7, 0xBFEF7BFF, 0x16F87E03, 0xE81FA000,
    0x7B18005D, 0xEFF7E301, 0xDEAC8327, 0xBDEE207B, 0xEF7BDEF7, 0x7BDEF7BD, 0xDEF7BDEF,
    0x00000005, 0x00000000, 0xDEF71000, 0x1FBDEF7B, 0xBDEF7BCC, 0x0005DEF7, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0xF0000000, 0x03EF7BDE, 0xDEF7B8C0, 0x00000017, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x06020000, 0xB81C1300, 0x14E1FC00, 0xA81E002C, 0xE00F881C,
    0x85E18C4B, 0x3C413F67, 0x679781FB, 0xBDCEF8C2, 0x1F301BE7, 0x980013BC, 0x04BF782F,
    0xF017BF20, 0x046B7FFC, 0xFFEFD631, 0xDEF7BCC0, 0x7B9C0003, 0x10339DEF, 0x88150005,
    0x000FE0A5, 0x6070A87F, 0xA5C14001, 0x8C005112, 0xE0783C44, 0x0B07C00F, 0x1400507E,
    0x7206307C, 0x0E448C00, 0xE00F83F0, 0x50980F83, 0x100F0500, 0x48C01C85, 0xFC0E0254,
    0x00FE0F80, 0x0A01E04F, 0x721400B1, 0x005448C0, 0x0F83F038, 0x7895000E, 0x800590A0,
    0x89183907, 0x507E0007, 0x0007E0FC, 0x83C7E063, 0x0FC00031, 0x07E24723, 0x7E784C00,
    0x510000F0, 0x04A83DF8, 0xC48C1C00, 0x02780001, 0xC0000788, 0x80000A02, 0x0000703F,
    0x002C84A8, 0x00F03C00, 0x377BDEE0, 0x6EF7BE80, 0xF7BDEF00, 0x4003030E, 0x83C00461,
    0xC0060A18, 0x78180280, 0x2803C3F8, 0x360301B0, 0x41B01B05, 0x44181E01, 0x640A0162,
    0x850A1B00, 0x2803100C, 0x85C06160, 0x1B021407, 0x60A0A244, 0x05178D80, 0x0643F81E,
    0x0CF0A0FE, 0x81406132, 0x99244142, 0x323F8285, 0x58911FC0, 0x16171B28, 0xB858280A,
    0x44282AD8, 0xF02302E2, 0x21E1E147, 0xF00A0793, 0x61499060, 0x0488D8A3, 0x36143C6C,
    0x0281970A, 0x51B48818, 0xC1E2C118, 0x14A0A01F, 0xCC88A031, 0xB8180140, 0x51B02823,
    0x1400310B, 0x8506C29E, 0xC003C7FD, 0x40A3631F, 0x00303526, 0x81322828, 0x801B0A22,
    0x1B00A048, 0x80A000F0, 0x0460280D, 0x80502E00, 0x8001E018, 0x0A002302, 0x80C8006C,
    0x02C1B002, 0x401B0500, 0xBBE02641, 0x8003DEF7, 0x4F7BDEF7, 0x01A205F8, 0xA21D098C,
    0x85C02661, 0xF103989A, 0x3440E602, 0x880F50B8, 0x58C03986, 0xD903A0D0, 0xC2E44E80,
    0x1A00D058, 0xCF03A4DE, 0x4429E003, 0x03F10A7B, 0x9E781BC0, 0x90003786, 0x6312FC2F,
    0x10358001, 0x17000170, 0x60000730, 0x000D104C, 0x00018120, 0x178814F0, 0x403F1000,
    0x0740003D, 0x00017E02, 0x207FC263, 0xCC2E001A, 0x000E6171, 0xF1B440D6, 0x2F9005C0,
    0x8C0BF074, 0xC606F005, 0x26F0BC44, 0xB05C14F0, 0xF105E206, 0x86803983, 0xD103A07A,
    0x31A07A80, 0xFC007426, 0x6172F902, 0xC2F1004C, 0xBDEF7D1C, 0xBDD6001B, 0x81BDFEF7,
    0x85E000F1, 0x00BC2F16, 0x5878C0AC, 0x7800F189, 0x2F07E1A1, 0xC1540AC0, 0x7805181C,
    0x1A1781A1, 0x00678158, 0xF028C0CF, 0x42E01A22, 0x04AC0AC3, 0x78518518, 0x0BC00D11,
    0x01BC0CCD, 0xF28C4E40, 0xF8002C43, 0x1A267A05, 0x68C4E400, 0xDE0004E4, 0x0001A040,
    0x01E302F1, 0x1A095800, 0xAA0F8000, 0x48480000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xDEF73C00, 0xF7BDEF7B, 0xBDEF7BDE,
    0x003BDEF7, 0x00000000, 0x32000000, 0xBDEF7B9F, 0xEF7BDEF7, 0x0DE027BD, 0xAC0BE000,
    0x61560002, 0x5E300034, 0x9C0005C4, 0x80003BC0, 0x000B5137, 0x00F889A8, 0x17E0F880,
    0x7817C000, 0x1660001E, 0xB20003F2, 0x4E0000E1, 0xA0000D60, 0x00034607, 0x000710B5,
    0x013A1788, 0x99E25F80, 0x907CC000, 0x1B20003F, 0x4E0000DE, 0xD0001560, 0x8001A303,
    0x7BDC60B1, 0xDEF7BDEF, 0xBFBDEF7B, 0x00000002, 0x00000000, 0xEF7BDCF0, 0x000177BD,
    0xF77C0000, 0x0000002E, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x7C000000, 0x00002EF7, 0xEF7BCC00, 0xC0CC002D, 0x0A858001,
    0x09887C00, 0x03F03180, 0x00630F80, 0x003E0660, 0x80015858, 0x3000B10F, 0xF8003E06,
    0x56000630, 0x2C4003E0, 0x23F8002C, 0xF12A0026, 0x3187C001, 0x3F033000, 0x02614400,
    0x004C41C0, 0x000FE254, 0x60006A1F, 0x88007E06, 0x838004C2, 0x89500078, 0x2A1F0003,
    0x03E13001, 0x00983C40, 0x000F1070, 0xF77E712A, 0x1DEF7BDE, 0xF8000000, 0x0000DBDD,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00DBDDF8, 0xE0000000, 0x003EF7B9, 0xA3001C1C, 0x03E00350, 0x5816201F,
    0x88A0CC01, 0x17C47C05, 0x332540FC, 0xF0705926, 0x1F20E1F9, 0x82A28D2A, 0x89FC7F0F,
    0x662624C9, 0x098279F0, 0xFC1CF916, 0xEF7387C0, 0x7BDEF7BD, 0xDEF7BDEF, 0x00002F7B,
    0x00000000, 0xEF7BDEF0, 0x6783EF07, 0x84E857C2, 0xE217892F, 0x4F20B526, 0xB102E78C,
    0xFF7BFF7E, 0xFA0095BF, 0xBD592576, 0x02BD881B, 0x7E07D620, 0x899E0003, 0x7FFA20F1,
    0xC3E07EEF, 0x192B7E0F, 0xBE48C0DF, 0x807EF7BD, 0xC639041F, 0x18000018, 0x7BDFFBFD,
    0x7B18036F, 0x30004AAF, 0x180000F7, 0x1BC0000D, 0xDEF7DEC8, 0xDC4280DB, 0x50200035,
    0x04C00009, 0xF8C0C06C, 0x05FF3906, 0xF7D9E0F8, 0x9304DFFE, 0x0C040059, 0xF3C026FC,
    0x9EEF0B87, 0xDF7E7C83, 0xBDCF2C48, 0x00003EF7, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x7BFFBC60, 0x6000EFFF, 0x39267BBC, 0x27A007F7, 0x0803F3C0,
    0xC4016A00, 0x57F7BFFB, 0x7B1006F0, 0xC42BF526, 0x5E04DE04, 0x720240D8, 0x3C0001E0,
    0x0E000088, 0x00000024, 0x70000000, 0x07800120, 0x39012011, 0x026F00F0, 0xF6206C2F,
    0x8857EA4C, 0x7FF78809, 0x0DE0AFEF, 0x0B500060, 0xF9801E70, 0xCF6FC803, 0x017EE724,
    0xDEFFDF98, 0xF0015BF3, 0xA249F79C, 0xBFA02EFA, 0x60FE8800, 0x9A78002E, 0xBDF67868,
    0xBC3305FF, 0xB20DF981, 0x883D311B, 0x7F895817, 0x6FC01626, 0x709FF9CE, 0xBEFBE601,
    0x0000602B, 0x00000000, 0x80006020, 0x22201709, 0x00B13222, 0xE7CE73BE, 0x1540BC41,
    0xBF302F86, 0xF10FAE41, 0xDF6786C9, 0x4CC0EFFB, 0xA78002E6, 0x8800BFA1, 0xF39E03F7,
    0x7BD6493D, 0x75800026, 0x0003BDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xE4000000, 0xBFFDEFBB, 0x9FFD0003, 0xBDFB9C83, 0x9802DF00, 0x001F3013, 0xF1868802,
    0x01BCF7BB, 0x8BB18198, 0x0D803B98, 0x7817C817, 0x64000390, 0x01000160, 0x0000007F,
    0x20000000, 0x110000E1, 0x0F000078, 0xFE0000C6, 0x817C8170, 0xC8BB1819, 0x30D003B5,
    0x3BFEF77E, 0x2004E600, 0x3005DE01, 0xCFFE800F, 0x26FDCE41, 0x7FEF9E00, 0x0137FFEF,
    0x927BFFD4, 0xC03CF7AC, 0x7C4025FA, 0x80069E0B, 0x5887E22E, 0x82F77BFF, 0x4EBF03A6,
    0xB0C63746, 0x0AC03CF0, 0x01702AFC, 0xDF018C1E, 0x7BDEF7BD, 0x005E616F, 0x00001900,
    0xC0E00000, 0x7BDEF7BE, 0xDEF7BDEF, 0xA000509B, 0x510003E0, 0xFBC01FC8, 0x67FD4343,
    0x6B3FF390, 0xEF90D187, 0x26FFF7B9, 0x000B58A3, 0x25FE83F4, 0xA05BF180, 0x211CDFFE,
    0x02EDFCC6, 0xF73EEF90, 0x9FFD00FC, 0xEF014423, 0x01318002, 0x77E307C0, 0xE20F01EF,
    0x7818045F, 0x00000002, 0x0BDEE300, 0x00BDEF75, 0x00000000, 0x85EF7180, 0x005EF7BA,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x3EF64000, 0x9C3DFFF7, 0x6B03EF7B, 0xF9F211AF, 0xEDE00476, 0x980B8C00, 0x34008013,
    0xF9EE77E4, 0xB9033012, 0x7FCF109F, 0x03787F00, 0x59078178, 0x0B022000, 0x00484800,
    0x00005C00, 0x0E120000, 0x02811000, 0x00B21400, 0x806F0D80, 0xC8998178, 0x1ECF10FD,
    0xEEFC8680, 0x3C025F3D, 0xE800800B, 0x00BD400E, 0xE4235ED6, 0x8012FDF3, 0xFFEE7DEC,
    0x2404247B, 0xBC4C1F80, 0xC0D6007B, 0xFB199E48, 0xE1AF8C2B, 0xDDF9E343, 0x3503F77B,
    0xC6001271, 0x00CF6307, 0xC403B988, 0xAC92BB7B, 0xEEFC2FBE, 0x000017BD, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xFBC60000, 0x03BF77BF, 0x3267B7C0, 0xEFC06EE6,
    0x28135801, 0xBF501A00, 0x881DFF7B, 0x22BF3C07, 0xF07F0BD7, 0x00240F01, 0x00000424,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xFA000000,
    0x115CCF9C, 0x2FB0BACF, 0x9E22B9EC, 0x00F9CFA5, 0xBDEF73C0, 0x0000000F, 0x00000000,
    0x00000000, 0x00000000, 0xD069CEF8, 0x607AC44F, 0x1B0186C0, 0x0F5889FA, 0x0069CEF8,
    0xBDCF0000, 0x00003EF7, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x50090000, 0xEF75AC2F, 0xF009902F, 0x0E535803, 0x7BCDD9F2, 0x0003BDEF,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7BEC4000, 0x8001FDEF,
    0x00FC606F, 0x1FE42BE0, 0x7907DE00, 0x226B0003, 0x69E0024E, 0x500037C4, 0x0015F83F,
    0x0FD02F9E, 0x2E607400, 0x00F01000, 0x00346000, 0x80015600, 0x000DE0FA, 0x9079EFD4,
    0x2F9A001F, 0x38001351, 0xC60009D0, 0xA0001C42, 0x00034607, 0x000AB027, 0x006F0BE4,
    0x9FC85580, 0x0BBDEF71, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xDEF75800, 0xBDF778CB, 0x5881EFFF, 0x5ECF73BF, 0x9EDF1001, 0x1FBE7C83, 0x310AEDCF,
    0xFFE016FA, 0xBF3BD400, 0x8037C400, 0x006CC001, 0xBBF501A2, 0x784074F7, 0x427BBDF6,
    0x115FA805, 0x06FCC1AB, 0x40782DE3, 0x05E21303, 0x200010FE, 0x240F0031, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF77E0000, 0xFEF51FDE, 0x037FFDEF,
    0x4CDFBE20, 0x302FD9F2, 0x5CC00FFF, 0x2F000720, 0x9EF77EA0, 0x9E03C40E, 0x85EB115F,
    0x0780F83F, 0x02120012, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x7DDEA000, 0x00EFD9EE, 0x39BF7F20, 0x7FB98C42, 0x005DA809,
    0x5F18176A, 0x84BE2000, 0xDCEFC81B, 0xE0E225F3, 0x09FB1819, 0x78C4ECF1, 0xC4037038,
    0x3183C381, 0x31E06300, 0x42800F02, 0xE00382E4, 0x80240440, 0x40120201, 0xC0170582,
    0x00501885, 0x630A910A, 0xC3C0C600, 0xB8806E1F, 0x63039870, 0x3D9E213F, 0x40DC1E30,
    0x2F9EE77E, 0x17C61711, 0x806F8800, 0xB5000FFA, 0x6FF6300B, 0xFE63108E, 0xBDCF097E,
    0xFEFA86F7, 0x0077EEF7, 0x49EFDF90, 0x802FDCC6, 0x1FCC00F3, 0x0B500240, 0xEF73BF20,
    0x3006F097, 0x3B3C13F6, 0x03781311, 0x001B0BC4, 0x0003C4A8, 0x00008858, 0x17000012,
    0x61700006, 0x00090000, 0x30088580, 0x80789500, 0xE178805F, 0x827EE40F, 0x02622767,
    0x7EF73BF2, 0x00080D09, 0x07E8099E, 0xE3007E60, 0xCE493DFB, 0xBEA002FD, 0x77FFBDFF,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xE3000000, 0xBFFEF7DD, 0x3BDEF712,
    0x9073DDE0, 0x804BEFCF, 0x0E7804DF, 0x04800BA0, 0xDDF8C272, 0x7C04DE7B, 0x988BB181,
    0x0B828137, 0x63030164, 0x05018000, 0x000B8000, 0x00000000, 0x005C0400, 0x0000A120,
    0x80003185, 0x05C8170D, 0x45D8C0CC, 0xBC401DCE, 0xFEF77E30, 0x0F5800DF, 0x4DF00100,
    0x78026780, 0xF3E41CF7, 0xE3002EFB, 0xBFFEF7DD, 0x00000002, 0x00000000, 0x00000000,
    0x00000000, 0x7BC00000, 0xFBD3FDEF, 0xFF19099E, 0x7F804435, 0xA0003002, 0x05DEF77E,
    0x5E0057EA, 0x00000C00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBD400000,
    0xDFB3DCFB, 0xBF7F2007, 0xF98C4239, 0x2EC601ED, 0x705FE300, 0x25F10002, 0x73BF224F,
    0x8F8897CF, 0xC427DC3F, 0x010F0373, 0x739DF209, 0x00BE1716, 0x97DF7DEB, 0xAFEE7819,
    0x03FC012B, 0xFFF7EB51, 0xFB1803BF, 0x5FDCE401, 0x3DFEFC80, 0x803FCF00, 0x1EEEFB5C,
    0xB1801A30, 0xD4B02FF6, 0x5016F7BD, 0x2E131113, 0xD40E4120, 0x3EF182AF, 0xF50370C8,
    0x09EEF73B, 0x0007463F, 0x3FF3133C, 0x81FBC400, 0x04737FB1, 0x0277BCF9, 0x077BDEEB,
    0x00000000, 0xBDEE0000, 0x3FDEFB0D, 0x00000000, 0xF61B7BDC, 0x00007FBD, 0x00000000,
    0x00000000, 0x00000000, 0x78000000, 0x73C06043, 0x002541EE, 0xF630004E, 0xBBF3C64C,
    0x7B805EF7, 0x0001FDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x2C060002, 0xE87F05E0, 0x826FD449, 0xBDEF1027, 0x068057E7,
    0x06CC0220, 0xEB027FC8, 0xEF59073F, 0x7BA82C7F, 0xBE017DEF, 0x4ACDEF7B, 0xA4614014,
    0x0A803907, 0x0141F8FC, 0xE2461E1B, 0xC4A83C07, 0x89901187, 0xE0B03C3F, 0xB0390581,
    0xFC02A361, 0x01C28850, 0x8851441E, 0xE7F0B202, 0x47F002A2, 0x2B00B851, 0x788231C8,
    0xFD41E200, 0xF83800B0, 0x3C00FE15, 0x016418C1, 0x800280A0, 0x50007C03, 0xC0003901,
    0xF8000782, 0x7B8807E0, 0x73805DEF, 0xDEF01FEF, 0x6C288F7B, 0xC01C82A0, 0x01E36283,
    0x81881436, 0x7806214D, 0x281E07E0, 0x1320A046, 0x2646C046, 0x80787F0A, 0x1B050305,
    0x1FC09B05, 0xC4286C1E, 0x3C558A20, 0x32078118, 0x6FF850F1, 0x501428A2, 0x1EA25CD8,
    0x0363F9FC, 0x928A2C7F, 0x4050A283, 0x5C159905, 0x20C8E47E, 0xFAC1E006, 0xA15428A3,
    0x51763600, 0x177E48C1, 0x92B0A01B, 0xA1630F0D, 0x78104600, 0x132087E0, 0x30918140,
    0x6C003C02, 0x1B02C050, 0xC07E0580, 0x62002886, 0x04F00720, 0x1428001E, 0xF6036140,
    0xC03EF7BD, 0x7FDEF7B8, 0x85C0D0B8, 0x1721630E, 0xD07A81CC, 0x88D03789, 0xE9A23417,
    0x29E09BC0, 0x631391CC, 0xBF40DE01, 0x2F900B81, 0x800730AA, 0x00688035, 0x0017E05C,
    0x00F10918, 0x06884CC0, 0x07303440, 0x1040BF00, 0x783D4017, 0xF0058C5E, 0xF12B7E22,
    0x3789D006, 0xC607E234, 0xC29E2E44, 0x340DC0F3, 0x1CC681BC, 0x227207A8, 0x05E2345B,
    0xBEC6B03A, 0x1801DEF7, 0xFBFBDEF7, 0x83F00FC1, 0x3C01E133, 0x0E428A88, 0x0E151230,
    0xE5C140FC, 0x21F81409, 0x448C2C1E, 0xC3F82C0C, 0xA87F0583, 0x647F0FC4, 0x79230781,
    0x283F00F0, 0x8C07E04F, 0x1C8DBF81, 0x162A1F80, 0xBF09803E, 0x851003C0, 0x1C012307,
    0x13C007C0, 0x814002C0, 0x701C000A, 0x5112A000, 0x02A16000, 0x002E1400, 0x003C4198,
    0x8002C3E0, 0x00F81BF1, 0x42EEF73C, 0xF880000D, 0x1FF20000, 0x4611CC00, 0xB8C001EF,
    0xEF7BDEF7, 0x7BDEF7BD, 0x00007DEF, 0x00000000, 0x7BDC6A20, 0xDEF7BDEF, 0x0005F013,
    0x001740FF, 0x00B3C0EF, 0x01F91398, 0x01711A30, 0x25F81388, 0x3D625F00, 0x3542AC00,
    0x0FC8D500, 0x2710FC80, 0x1E813800, 0xCF03BC00, 0x8C4E6004, 0x30D1800F, 0xDEF7BDEE,
    0xCDFDEF7B, 0x00000000, 0x00000000, 0xBC00FEF9, 0x880359FF, 0xDF00F13D, 0xCC137F20,
    0xC3E029C2, 0xD8188033, 0x30078480, 0x00000121, 0x00000000, 0x88FE0000, 0x80783C00,
    0x885C4BF1, 0x00B30BBB, 0x00017AC4, 0x105EB100, 0x03E61777, 0x00E25F8C, 0xFE00783C,
    0x00000088, 0x00000000, 0x90980000, 0x10078480, 0x17807F03, 0xE14F0035, 0x106F805F,
    0x9EC409BF, 0xFFDE0078, 0xFBDEF1AC, 0x00000002, 0x00000000, 0x00000000, 0x00000000,
    0x63009DD8, 0x280BFFAC, 0xFD601DCC, 0xF501F182, 0x0AA01EA1, 0x03C7F007, 0x0B024448,
    0x00000002, 0x48000000, 0x00C04058, 0x41C03E14, 0x267806FE, 0x76F05F6A, 0xB7800000,
    0xA899E003, 0x7F20E17D, 0x203E1403, 0x0B090060, 0x00000000, 0x10580000, 0xF8122240,
    0x70AA01E3, 0x07A87D40, 0x1F182FD6, 0x601DCC28, 0x017FF58C, 0xECF7DE88, 0xB5AC400E,
    0x21AEE306, 0x7813BAC6, 0xFF91FBBA, 0xC0FDE200, 0xF000EA41, 0x10FD12EC, 0xDEFA0F95,
    0xEEFC625F, 0xE6165859, 0x800FFEA2, 0xF83F896C, 0x86F200DE, 0x602EF7B9, 0xE8C435EE,
    0xBBEC627F, 0x3E30FF8B, 0x408C8811, 0x3E30FFA4, 0x00BBBEC6, 0xF7BDD600, 0xC1800005,
    0x00000041, 0x00930300, 0x24000000, 0x00000013, 0x79EA0020, 0xEE00009E, 0x00097DF7,
    0x00000000, 0xB1000000, 0x15FFE176, 0x203DBCC0, 0x402FDF9E, 0x76A001BF, 0x900059E0,
    0xBF507E1F, 0xA81DFF7B, 0x2BF50332, 0xF7F07D72, 0xC2A81787, 0xB80950A3, 0x6127CE73,
    0xBEFBD400, 0x0005C06F, 0x00000000, 0x0005C040, 0xC0001819, 0xDF404A83, 0x343F8F7B,
    0x198F1390, 0xCC457E78, 0xA0FC381D, 0x379EF77E, 0x02CF0F50, 0xBF41F180, 0x07F9E001,
    0xC407B798, 0x62005FDC, 0x1DFFC2ED, 0x00000000, 0x00000000, 0x0339CF60, 0x9DFAE400,
    0x04DFFF7B, 0x0AEFFBC0, 0x03CF79F2, 0xF88027B0, 0x000DF026, 0x81E301E8, 0x97F7BFF9,
    0x783E1788, 0xA076A4DE, 0x2C41A0A0, 0x132240C4, 0x6739CFF8, 0x7DEA0000, 0x000137DF,
    0x00006000, 0x24000040, 0xBDFF8000, 0x7BDEF709, 0x0000006F, 0x00000000, 0xBDFF8000,
    0x7BDEFB05, 0x0000006F, 0x00000900, 0x40600000, 0x32160000, 0xF8958001, 0x6DFF8001,
    0xF7BDEF78, 0xBDEF7BDE, 0x000005F7, 0x00000000, 0x0000A000, 0x0D7EB028, 0xFBDFFBF3,
    0x7D40ADFF, 0xDAB6CC3F, 0x6493EF3A, 0x17D57DF5, 0xF587E3F5, 0xF98800EF, 0xB86782FF,
    0x0C800489, 0x26F21BE2, 0xDEFFEF18, 0x2BF015F3, 0x99EF4164, 0x02FBF3C4, 0x785C81E3,
    0x0FF3C017, 0xCC17C146, 0x5C68C009, 0x00178878, 0x9192A0E6, 0x43E0002C, 0x0007F131,
    0x09890E16, 0xC0904400, 0x020C0000, 0x41800018, 0x40009890, 0x1FC4C906, 0x461C2800,
    0x7C0002B0, 0x01A24C28, 0xF12A0E60, 0x30027305, 0xC1F2171A, 0x7F9E00BB, 0xD05D0510,
    0xECF9267B, 0xAC3F102F, 0x7FF78C05, 0x401BFFEF, 0x0B21F8FD, 0x0CF0B200, 0xD7F794FF,
    0xFFF31001, 0x710DF12B, 0xBCEB4DC7, 0xF7D5924F, 0x42BE37E5, 0xFDF984EE, 0x56FFFDEF,
    0xBDC62EC0, 0x8001DEF7, 0x6BBDEF73, 0x5600684C, 0xA81D2C60, 0x4B85E001, 0x0AC03434,
    0xA073033C, 0xFC45E006, 0x560685C0, 0x26300DE0, 0xB917806A, 0x58681D00, 0x5E201781,
    0x2A8BC0D4, 0x59A06B00, 0x6800BC41, 0x2662F0D4, 0xAF41EA00, 0x74001B20, 0xC01A2F50,
    0xFFBDEF73, 0xF7BBE040, 0x000007DE, 0x00000000, 0xBDEF7B9E, 0xF7BE83F7, 0x001F7BDE,
    0x00000000, 0xBDEE7800, 0xFA0FDEF7, 0x7DEF7BDE, 0x00000000, 0xB9E00000, 0x3F7BDEF7,
    0xBDEF7BE8, 0x000001F7, 0x00000000, 0x00000000, 0x00000000, 0xDEF7B9E0, 0x00000000,
    0x00000000, 0xE7800000, 0x00037BDE, 0x0DEF7B9E, 0x00000000, 0x00000000, 0xC6000000,
    0xBDEFFDFA, 0x80256FFF, 0x895DDBF1, 0x05FFFA7C, 0x8005FF30, 0x0EA80EE7, 0xD0271000,
    0xBDFFEC81, 0x4D903F77, 0x895EE40E, 0x58B0BDF1, 0x7CC00BF0, 0x00180310, 0x1B014C36,
    0xEF7BDAC0, 0x00B98152, 0x82318C62, 0x01DE7D09, 0xCC407A00, 0x0099BE7D, 0x79E2009C,
    0xC6027BFF, 0x7BC6000E, 0x883FE426, 0xF788095E, 0xAF620E87, 0x02DFFFFE, 0x24F0A3EA,
    0x074EFE72, 0x0902233C, 0x7E0B7588, 0xF8800F01, 0x078C4860, 0xE0782440, 0x40C006FB,
    0xBD9E1378, 0xD81980D7, 0xBD1826E2, 0xC6ACFBCF, 0x007EE498, 0xC60EBF31, 0x33FEF881,
    0x813B1800, 0x0D6FCF7C, 0x540058C0, 0xD00F7FEF, 0xED720003, 0x889780DF, 0x7FA80088,
    0xE739C4A0, 0x88588034, 0x30014088, 0x02F90780, 0x0384428C, 0xF1893F73, 0xA78B03FE,
    0x7BFF7C60, 0x68819EEF, 0x88000AFC, 0x13AFC07F, 0xC01ECF00, 0x92B37FFA, 0x5FFFA7C8,
    0x07CFFD42, 0xF979FF9E, 0xFC469E32, 0xC0CAE632, 0x064E0640, 0x7C703206, 0x7E234F19,
    0x1002CF19, 0x9EE7DBF3, 0x00003EFD, 0x33EFBDF2, 0x9DF98C42, 0x9EE60006, 0x7BFF7CF1,
    0x58ADFFEF, 0xF7C002FF, 0x27BFFD46, 0x47B7F391, 0xEF8016FE, 0x0097F789, 0x017A9EC6,
    0x009BE3D6, 0x01FA5DE0, 0xE885D5E3, 0x9BFFEE7D, 0x405F8FD0, 0xBBA858C7, 0xDDE7C846,
    0x8BC45F81, 0x0BE31A51, 0xAF10F8C0, 0xE1467C19, 0xFBDDFC86, 0x22B0AA6F, 0x630FCB16,
    0x9AE45B88, 0x197F286C, 0xB04AC50A, 0x931ED849, 0x9E05C381, 0x44783F7B, 0x000C00A6,
    0x00308820, 0x30818000, 0x81800000, 0xC0000014, 0x87032624, 0xBEF73C0D, 0x15332290,
    0x1360958A, 0x7E50F7F0, 0x22DC4318, 0x7887E4D7, 0xC28CF9FC, 0xF7BBF90D, 0x8CC0D4DF,
    0x18D28C58, 0x87C6005F, 0xC740CD78, 0x46BBA858, 0x81DBE7C8, 0xE30BE45F, 0xFBD113D5,
    0x40F7FFDC, 0xEB00DE3F, 0xF0002EF1, 0x6F805D2E, 0xA8025FEA, 0xF002F53D, 0xEFFF51BE,
    0x7FB98C49, 0x000B7F23, 0xBE78CF73, 0xBF77BDFF, 0x00BFD623, 0x7DF7BE40, 0xBF318846,
    0x77C800D3, 0x06FFFB9F, 0x908E7B58, 0x0EA85ECF, 0xF12E0F40, 0x2F0777BB, 0x18AFE7A7,
    0xDEB3C993, 0xCF012E07, 0x0DBDEFB7, 0x033DF7E2, 0xA000AFC0, 0x6F7BBF18, 0x005D0443,
    0x3F310FF0, 0x7B9E6288, 0x01D064DE, 0x33D8C114, 0x145EFD45, 0xF0FDEF78, 0x9CC1FBDE,
    0xE29CC7E2, 0xC2FCD187, 0x9C417E68, 0xA1388F50, 0xBC52FC1E, 0x58BC52FC, 0x43D69D0F,
    0x4C65E327, 0x744C65E3, 0x0BC1D2F0, 0x383A1C1D, 0x1A6A5E30, 0x3D61352F, 0x1D0F5874,
    0xF1F14BF0, 0x9C41F14B, 0xA1388F50, 0x2FCD181E, 0x3017E68C, 0xA731F8A7, 0xEF7BADF8,
    0x7BDEF7BD, 0xFEF7BDEF, 0x00000000, 0xEEB00000, 0x7BDEF7BD, 0x0007BDEF, 0x00000000,
    0x7BDEF000, 0xDEF7BDEF, 0x00000017, 0xDF988000, 0xF7ECF7BE, 0xFC800009, 0x620CFBCE,
    0x01BEEFCC, 0xF13F7A00, 0xEF7BFF7C, 0x7798ADFF, 0x15BF1002, 0x449EFECF, 0x78AEDFCE,
    0xC55F005F, 0xF18025F7, 0x7C03F36B, 0x0007FF15, 0xC0B3D7AC, 0xCF0DF8F3, 0xFBDEF7BD,
    0xCB982DFF, 0x079ED09B, 0x07FF5640, 0x278BC47A, 0xBDEF3035, 0xF03C8DE7, 0x04A8E4AA,
    0x8592E620, 0x0E3C7D27, 0x780C3800, 0x00161194, 0x0DFC2438, 0xF4400493, 0x64981E34,
    0xEF79804A, 0x41FD4B3D, 0x60000112, 0x0243000E, 0x7DEF7BCC, 0x4C4901E5, 0x19660012,
    0x42392603, 0x84CD8001, 0x03F8F06D, 0x1C528000, 0x81800095, 0x433C7D27, 0xED020003,
    0x0267B449, 0x66F3F920, 0xE5D4D434, 0xCF05F7B9, 0xBD399FBD, 0xEF8ADE09, 0x35EB0001,
    0xF157E017, 0xFC60097D, 0xFC017CDA, 0x3DFD9E3A, 0x5DBF9C89, 0x5800BEF1, 0xFBE789FB,
    0x6FFF7BDF, 0x0013BCC5, 0x67DE77E4, 0xF77E6310, 0xEF73C00D, 0x7BDEF7BD, 0x0FF7BDEF,
    0xA0000000, 0x10DFF7FF, 0x3B5CA57B, 0x9F1806F8, 0x9DDF7251, 0x8778FC6A, 0x83C152F1,
    0x783C1387, 0x8C3BCD88, 0xF72557E6, 0x5F0D43DD, 0xFF88FC82, 0x0076B94A, 0x01E79E78,
    0xBEFBE200, 0x0000000F, 0x00000000, 0x00000000, 0x40000000, 0xBDEF7BDC, 0xF7BDEE07,
    0x00001FDE, 0x00000000, 0xDEF7B880, 0x7BDC0F7B, 0x003FBDEF, 0x00000000, 0x00000000,
    0x00000000, 0xAAAA0000, 0xFDF88000, 0x00003F7E, 0xDEF7BC00, 0xF7BDEF7B, 0xBDEF7BDE,
    0x00000000, 0x10000000, 0xFFFB9F6B, 0x47BB184D, 0xC47F7AC8, 0x99B54049, 0x307773CC,
    0x8C3789FD, 0x3DEEF845, 0x6B0090F0, 0x335601F0, 0xF536F016, 0xCC9BF107, 0x12EE405F,
    0xA76A0BDF, 0xBE301FB1, 0xBDEFFC60, 0x0033BEF7, 0x77C80000, 0x4DFFFBDF, 0xB20E7B98,
    0x1BC61DDE, 0xC3F3F180, 0x1E4EEF77, 0x187DEF7D, 0x3E30021F, 0xEF7BC046, 0xC801794E,
    0xBDC80033, 0xBFEF7BC0, 0x4D6B9CE8, 0xDDDAC5E4, 0xB88BC93D, 0xBFEF7BC4, 0x201A7AC8,
    0x41CF6B0F, 0xF01FFBD6, 0x0EEF7BDC, 0xC13C87E2, 0x6649C417, 0x3641FF11, 0x2AAB037E,
    0xBDEE07DE, 0xEF7007F7, 0x00003FBD, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00005800, 0x98000046, 0x5DE002C0, 0x801AF8C1, 0x7EEF73E8,
    0x00000000, 0xFA8029E0, 0x5F7D442A, 0xE77E7802, 0xBDE3DF9E, 0x0000FEF7, 0x00000000,
    0x00000000, 0x00000000, 0xEB100000, 0xDEF7BFF7, 0xB7D0FF7B, 0x5EC4012B, 0x00DF0001,
    0x8000B300, 0x0990001F, 0xC0002C00, 0x00000000, 0x02C0000C, 0x00026400, 0x5980007E,
    0x006F8000, 0x0057B100, 0x12BB7D00, 0xFEFD6200, 0x00006EF7, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x1EEFFCF0, 0xB1C697F2, 0x220B1902, 0x6FE34BF2, 0x89B07BDD,
    0xBEA4895F, 0xE23FFDF1, 0x23652163, 0xFF07FF7F, 0x6235BC40, 0xF1813DAC, 0x3DE783FE,
    0xDF3AA67B, 0x3000880C, 0x777503D6, 0x000021FF, 0x00000000, 0x00000000, 0xDEFFEF90,
    0x7FD609DD, 0x89ED6326, 0x1F7880D5, 0x7BBF92F9, 0x09E7E4BF, 0x10E78B71, 0x61279FCF,
    0xC090760C, 0x98002722, 0x60482000, 0x849E7F91, 0xC433B831, 0x2B10EA2D, 0xEF77F25E,
    0x1AB0E92F, 0xF6B13D10, 0x8BDCC64C, 0x7116F738, 0x3F102DEE, 0xBE3F10BE, 0x8F894F00,
    0xBC07C4A7, 0x54379AA1, 0x23D66C83, 0x3980F59B, 0xF839A5F8, 0x0E21B825, 0xA301C437,
    0xC628D318, 0x94C62C84, 0x86F098C5, 0x0E21BC38, 0x6697E2CC, 0xB3444BF1, 0x07ACD11E,
    0x17CD50BE, 0xF129E1AA, 0x20F894F1, 0x7E217C7E, 0xCF10017C, 0xA0000077, 0x09EF9F7A,
    0xDFAC0000, 0xD580001A, 0xF9000000, 0xFD503FAE, 0x1BC0007B, 0xAB7EB03E, 0x253C0006,
    0x88000017, 0x000005E6, 0x00053D3A, 0x3F14C600, 0xF2E00000, 0x58000006, 0x000058C3,
    0x002E5E20, 0x730BF000, 0x3FDEE790, 0x688F5000, 0xF000009C, 0x00D60BF2, 0x3D52B000,
    0xEF00178C, 0xC57C97BD, 0x00021B8B, 0xF49986F0, 0xC0003CF0, 0x5319B253, 0x688000FE,
    0x06F0DC5E, 0x29E9D000, 0x0005987A, 0x8C7E298C, 0xC0005F29, 0xC84E0DE5, 0xF7916F7B,
    0x2C61AC07, 0xC7E00000, 0x60000085, 0xEFB01CF7, 0x22DEF7BD, 0x5EB00FEF, 0x00000000,
    0x7CF10000, 0xA8000007, 0x027BE7DE, 0xDFAC0000, 0x6AC0001A, 0xF2000000, 0xD5007F5D,
    0xDE0007BF, 0xDFAC01F0, 0xA78001AA, 0x000002E4, 0x0002F344, 0x0A7A7400, 0xA6300000,
    0x000001F8, 0x0000DE5C, 0x2C61AC00, 0xBC400000, 0x8000005C, 0xB583985F, 0x0F7FFDCF,
    0x688F5000, 0xF211EFF9, 0xF0003EF9, 0x01370BF2, 0x4AC002CF, 0x73C998F5, 0xC0F82FEE,
    0xAF95EF7B, 0x17C4D978, 0xBC00916A, 0xFBE72661, 0xC002483E, 0xCF51B253, 0x01451853,
    0x9002F344, 0x3A017887, 0x6F20053D, 0x98C00EF2, 0xDC6007E2, 0xE5C017A4, 0x4FF1800D,
    0x35802DF1, 0xFF50058C, 0xC007FF90, 0x5F500B8F, 0xB0007B18, 0xFD400E7B, 0xBDEE7182,
    0x7AC0BEF7, 0x00000201, 0xD9000000, 0x6FFFDEFB, 0xEE600002, 0x777AC835, 0x07640000,
    0x5600FC60, 0xDEF05F03, 0x900793BB, 0x6F83FAEF, 0x1F193DEF, 0x07C37802, 0xF1818C72,
    0x253C0231, 0xDEF78017, 0x6882F29D, 0x9E40005E, 0x053D3A01, 0x03FFC800, 0x001F8A63,
    0x10F77BDE, 0x0DE5C0BF, 0x51346000, 0x802C61AC, 0x01FFFFEF, 0xC0172F10, 0xA30EACC8,
    0x1CC2FD31, 0xCFF7B9E4, 0x1EEE7587, 0x3447A8D4, 0x06F1804E, 0xBF2F3EA0, 0xDCC00D60,
    0xF7CF906B, 0x61EA958B, 0xF7B200BC, 0x91EFFFBD, 0x437178AF, 0x61BC0000, 0x0F3C3D26,
    0xD929E000, 0x007F298C, 0xDC5E6880, 0xA00006F0, 0x30F453D3, 0xA630000B, 0x7CA631F8,
    0x6F2E0001, 0x7BDE4270, 0xC03FBC8B, 0x0002C61A, 0x10B8FC00, 0x3DD80000, 0xEF7BEC07,
    0xFBC8B7BD, 0x002F5803, 0x00000000, 0x9CEFC400, 0x8ABF0005, 0x058001E8, 0x05058005,
    0xF4455F80, 0xCEFC4000, 0x00000059, 0x00000000, 0x7BDEE780, 0x00112001, 0x780091B0,
    0xEA003F0A, 0xEA009887, 0xF0017C0B, 0x0B7882FC, 0xDF10FC60, 0xF8837004, 0x781CC00A,
    0x623F800B, 0x01E26001, 0xDF809800, 0x7204F7BD, 0xC1642C80, 0x42E78879, 0xEEFC817D,
    0xDE225F3D, 0x2F88006C, 0x8C012FCC, 0x7FF9E17F, 0xE63108CF, 0xEF000F6F, 0x007EF7BD,
    0xF07DE000, 0xF000004C, 0x00013A15, 0x0BC497C0, 0x26E20000, 0x400000B5, 0x05CF189E,
    0xD9C60000, 0x0000035F, 0xC4000000, 0x007EF7B9, 0x9E066000, 0x1F800000, 0x18000098,
    0x00007C03, 0x001C80F8, 0x07C02C00, 0x26066000, 0x3F800016, 0x009887EA, 0x73FC2C80,
    0xF8000FE0, 0x950FCB10, 0x2783C000, 0x8001F03C, 0xE0721C4A, 0x51070001, 0x001F21F8,
    0x4C09E144, 0x819800B8, 0x02785103, 0x01E21F80, 0xC600987F, 0x3E0B0140, 0x205C1F00,
    0x1600390A, 0x7BDEF77C, 0x00F82DEF, 0x5800004F, 0x40000380, 0x0005904C, 0x60783F80,
    0xBDEF7BDD, 0x037BDEF7, 0x0FC1F095, 0x543E1300, 0xFC000C62, 0x0F81C1E0, 0x9640C600,
    0x0002C428, 0x502B1C1F, 0xA0560001, 0xEE780002, 0x000777BD, 0x3C87E200, 0x2F800001,
    0x00009388, 0x07FC4598, 0xF1B20000, 0xB000001B, 0x007DE2AA, 0xFDF3C000, 0x000004CE,
    0x88000000, 0x00FDEF73, 0x3C0CC000, 0x3F000001, 0x30000130, 0x0000F806, 0x003901F0,
    0x0F805800, 0x4C0CC000, 0x7F00002C, 0x01310FD4, 0xE7F85900, 0xF0001FC0, 0x2A1F9621,
    0x4F078001, 0x0003E078, 0xC0E43895, 0xA20E0003, 0x003E43F0, 0x9813C288, 0x03300170,
    0x04F0A207, 0x03C43F00, 0x8C0130FE, 0x7C160281, 0x40B83E00, 0x2C007214, 0xF7BDEEF8,
    0x01F05BDE, 0xB000009E, 0x80000700, 0x000B2098, 0xC0F07F00, 0x7BDEF7BA, 0x06F7BDEF,
    0x1F83E12A, 0xA87C2600, 0xF80018C4, 0x1F0383C1, 0x2C818C00, 0x00058851, 0xA056383E,
    0x40AC0002, 0xDCEA0005, 0x4000013B, 0x013BC17D, 0x085F5000, 0xA00005DE, 0xD16E30BE,
    0x2FA8000D, 0xC57E3FE4, 0xD760006A, 0x637C1B88, 0xE8002454, 0xEC449F6F, 0x00137BFD,
    0x00000000, 0x1FBDEE71, 0x81980000, 0xE0000027, 0x00002607, 0x001F00C6, 0x07203E00,
    0xF00B0000, 0x81980001, 0xE0000589, 0x2621FA8F, 0xFF0B2000, 0x0003F81C, 0x43F2C43E,
    0xE0F00025, 0x007C0F09, 0x1C8712A0, 0x41C00078, 0x07C87E14, 0x02785100, 0x66002E13,
    0x9E1440E0, 0x7887E000, 0x80261FC0, 0x82C05031, 0x1707C00F, 0x800E4288, 0xF7BDDF05,
    0x3E0B7BDE, 0x000013C0, 0x0000E016, 0x01641310, 0x1E0FE000, 0x7BDEF758, 0xDEF7BDEF,
    0xF07C2540, 0x0F84C003, 0x00031895, 0xE070783F, 0x90318003, 0x00B10A25, 0x0AC707C0,
    0x15800054, 0x600000A8, 0xF9E00004, 0xDA82FFDD, 0xF30003E7, 0x29FFD92B, 0x88007F2E,
    0x53DEF906, 0x158001E2, 0x825FB9C6, 0x32200137, 0x57FCF0DE, 0x0002DF18, 0xE81E7FEB,
    0x0003F773, 0x00000000, 0x10000000, 0x01FBDEE7, 0x78198000, 0x7E000002, 0x60000260,
    0x0001F00C, 0x007203E0, 0x1F00B000, 0x98198000, 0xFE000058, 0x02621FA8, 0xCFF0B200,
    0xE0003F81, 0x543F2C43, 0x9E0F0002, 0x0007C0F0, 0x81C8712A, 0x441C0007, 0x007C87E1,
    0x30278510, 0x066002E1, 0x09E1440E, 0x07887E00, 0x180261FC, 0xF82C0503, 0x81707C00,
    0x5800E428, 0xEF7BDDF0, 0x03E0B7BD, 0x6000013C, 0x00000E01, 0x00164131, 0x81E0FE00,
    0xF7BDEF75, 0x0DEF7BDE, 0x3F07C254, 0x50F84C00, 0xF0003189, 0x3E070783, 0x59031800,
    0x000B10A2, 0x40AC707C, 0x81580005, 0xCFFD400A, 0x79FF9E07, 0xE32F8001, 0x632FC469,
    0xC0C8002E, 0x000E0640, 0x03206064, 0x197C0007, 0x197E234F, 0xF50002CF, 0xFE781F3F,
    0x000003E7, 0x38800000, 0x000FDEF7, 0x13C0CC00, 0x03F00000, 0x63000013, 0x00000F80,
    0x0003901F, 0x00F80580, 0xC4C0CC00, 0x47F00002, 0x001310FD, 0x0E7F8590, 0x1F0001FC,
    0x12A1F962, 0x84F07800, 0x50003E07, 0x3C0E4389, 0x0A20E000, 0x8003E43F, 0x09813C28,
    0x70330017, 0x004F0A20, 0xE03C43F0, 0x18C0130F, 0x07C16028, 0x440B83E0, 0x82C00721,
    0xEF7BDEEF, 0xE01F05BD, 0x0B000009, 0x88000070, 0x0000B209, 0xAC0F07F0, 0xF7BDEF7B,
    0xA06F7BDE, 0x01F83E12, 0x4A87C260, 0x1F80018C, 0x01F0383C, 0x12C818C0, 0xE0005885,
    0x2A056383, 0x540AC000, 0x7BED6000, 0x800000DE, 0x3B9887AF, 0x9E780000, 0xE57FDDF8,
    0x6D80000F, 0x00056C96, 0x00000000, 0x15B259B6, 0xC54F0000, 0x1B2BFEEF, 0x1EBF0000,
    0x0009D9E2, 0xF3DF6B00, 0x00000005, 0xCE200000, 0x0003F7BD, 0x04F03300, 0xC0FC0000,
    0x18C00004, 0xC00003E0, 0x0000E407, 0x003E0160, 0xB1303300, 0x51FC0000, 0x0004C43F,
    0x039FE164, 0x87C0007F, 0x04A87E58, 0xE13C1E00, 0x54000F81, 0x0F0390E2, 0xC2883800,
    0x2000F90F, 0xC2604F0A, 0x1C0CC005, 0x0013C288, 0xF80F10FC, 0x063004C3, 0x01F0580A,
    0x5102E0F8, 0xE0B001C8, 0x7BDEF7BB, 0x7807C16F, 0x02C00002, 0x6200001C, 0x00002C82,
    0xEB03C1FC, 0xBDEF7BDE, 0xA81BDEF7, 0x007E0F84, 0x12A1F098, 0x07E00063, 0x007C0E0F,
    0x44B20630, 0xF8001621, 0x0A8158E0, 0x1502B000, 0xEE790000, 0x7BDEF7BD, 0xDEF7BDEF,
    0x005DEF7B, 0x0000DE00, 0x53C00000, 0x00000000, 0x000000D0, 0x9012B000, 0xEF7BDEF7,
    0xBBDEF7BD, 0x31788000, 0x0000030A, 0x85C0BF00, 0x60000000, 0x0006783C, 0x22E00000,
    0x0000025A, 0x13303980, 0x80000008, 0x00003446, 0x8D03A000, 0x00000303, 0x013189C8,
    0x7BDEF7FE, 0x0FF7BDEF, 0x01A06F00, 0x4F000000, 0x00120AA1, 0xBC468000, 0x80000000,
    0xC0095895, 0xF7BDEF77, 0x00FF7BDE, 0xEF7985E2, 0x307EF7BD, 0x01D00000, 0x00001000,
    0x0000098C, 0x00170000, 0x60000380, 0xEF7B8C0E, 0x7BDEF7BD, 0x1F800000, 0x00008034,
    0x02A89D00, 0x90001200, 0x50001A13, 0xEF7BDEF7, 0xFBDEF7BD, 0x00D40DE3, 0x50000040,
    0x03000D05, 0x1A868000, 0x00000000, 0x73EEF3C0, 0x015BFFEF, 0xCDFFF300, 0xF7D3E411,
    0xBDF8800D, 0x1EE62009, 0x80017F80, 0x06F827FC, 0xEF73BF3C, 0xA07103BF, 0x55F7C41E,
    0xC6276B90, 0x01F78683, 0x632F0BE4, 0x4A801720, 0x01F0508C, 0x286CA0A0, 0xAAABFC00,
    0x50003098, 0xF7EFDFBF, 0x00000448, 0x10000060, 0x00000000, 0x00008000, 0x00018000,
    0x00004480, 0x4000C260, 0x96FBEFBD, 0x3D800501, 0x07E19CE7, 0xB03C003F, 0x0131818C,
    0x2F246254, 0x0BE400F4, 0xFC429E1F, 0x76B181DF, 0x12F84C62, 0x77BDF731, 0x880E2077,
    0xFE40003D, 0x01DD8813, 0x001EE620, 0x419EF9D6, 0x6FBDE78C, 0xFDF3C000, 0x0019BFB0,
    0x15F89B00, 0xD4910000, 0x7C000037, 0x00F88FFF, 0x0090B000, 0x01236400, 0x0FFEFC00,
    0x020000FE, 0x800016F1, 0x09ED6311, 0xF7BDEF00, 0xFBC0007E, 0xC00099E0, 0x0004E857,
    0x005E24BE, 0x0B526E20, 0xE313C800, 0x718000B9, 0x0000D7F6, 0xEF7B8800, 0x7BDEF7BD,
    0xDEF7BDEF, 0x00001F7B, 0x00000000, 0xEF790000, 0x7BDEF7BD, 0x01F7BDEF, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xDEF79000, 0xF7BDEF7B, 0x000005DE, 0x00000000,
    0xF7BC8000, 0xBDEF7BDE, 0x00002EF7, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xDEF7BDE4, 0xF7BDEF7B, 0x000005DE, 0x00000000, 0xEE780000, 0x000777BD, 0x02790FC4,
    0x4E20BE00, 0xE22CC002, 0x1B20003F, 0x560001BF, 0x000FBC55, 0x33BF7CF0, 0x10000001,
    0xEF7BDEF7, 0x7BDEF7BD, 0x3EF7BDEF, 0x00000000, 0x00000000, 0xEF7BDEF2, 0x7BDEF7BD,
    0x000003EF, 0x00000000, 0x00000000, 0x00000000, 0x20000000, 0xDEF7BDEF, 0x0BBDEF7B,
    0x00000000, 0x00000000, 0xF7BDEF79, 0x5DEF7BDE, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x7BC80000, 0xDEF7BDEF, 0x0BBDEF7B, 0x00000000, 0x00000000, 0x013BDCEA,
    0x7782FA80, 0x217D4002, 0xF5001778, 0x6E8B7185, 0xFE42FA80, 0x06AC57E3, 0x83711AEC,
    0x048A8C6F, 0x1127DBFA, 0x04DEFF7B, 0xDEE20000, 0xF7BDEF7B, 0xBDEF7BDE, 0x0007DEF7,
    0x00000000, 0xDE400000, 0xF7BDEF7B, 0x7DEF7BDE, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0xBDE40000, 0xEF7BDEF7, 0x000177BD, 0x00000000, 0xEF200000, 0x7BDEF7BD,
    0x000BBDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBDEF7900, 0xEF7BDEF7,
    0x000177BD, 0x00000000, 0xFFD40000, 0x9FF9E07C, 0x3C65F017, 0xCC65F88D, 0x90303205,
    0x30320381, 0x7C038190, 0x7E234F19, 0xEA02CF19, 0xFCF03E7F, 0x000007CF, 0xBDEF7B88,
    0xEF7BDEF7, 0x7BDEF7BD, 0x0000001F, 0x00000000, 0xBDEF7900, 0xEF7BDEF7, 0x0001F7BD,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7BDEF790, 0xDEF7BDEF, 0x00000005,
    0x00000000, 0xDEF7BC80, 0xF7BDEF7B, 0x0000002E, 0x00000000, 0x00000000, 0x00000000,
    0xE4000000, 0x7BDEF7BD, 0xDEF7BDEF, 0x00000005, 0x00000000, 0x7EF7BDEF, 0x26783EF0,
    0xF84E857C, 0x6E217892, 0xC4F20B52, 0x67182E78, 0xF8000D7F, 0x006F7BDF, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0xBDEE7800, 0x43F10777, 0xE20BE09E, 0xFF88B324, 0x81BF1B20, 0x03EF1555, 0x133BF7CF,
    0xF7BFF000, 0x000000DE, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x0277B9D4, 0x27782FA8, 0xBC10BEA0, 0xC617D40B,
    0x5F51BA2D, 0x8AFC7FC8, 0x711AECD5, 0x8A8C6F83, 0x893EDFD4, 0x26F7FBD8, 0xEFFC0000,
    0x000037BD, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF9FFA800,
    0x2F3FF3C0, 0x88D3C65F, 0x195CC65F, 0xC9C0C818, 0x8E0640C0, 0xC469E32F, 0xEA59E32F,
    0xFCF03E7F, 0x000007CF, 0x1BDEF7FE, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0xF0000000, 0xBDEF7BDC, 0xBBB3DEF7, 0x8C400000, 0x004FFBF5, 0x3BBE4000,
    0x63000001, 0x7BCC000F, 0x19BF3DEF, 0x80001388, 0xF22777A8, 0x6F200003, 0x80000AA2,
    0x0000B86C, 0x00151278, 0x01607800, 0x070FE000, 0xC6130000, 0x7983F7BD, 0xC240BDEF,
    0x08000002, 0x00000000, 0xEF710000, 0x7BDE60FD, 0x00B0902F, 0x00613000, 0x01C36000,
    0x01414000, 0x95133000, 0xE1B20000, 0x1BA80002, 0xF20002A8, 0xFC897EF9, 0xDEF79800,
    0x881EFFFB, 0x60000013, 0x000001EC, 0x0004EEF9, 0x7FF6B590, 0x46000002, 0xBBF3C000,
    0xCFB505FF, 0x4AFCC007, 0xCB8A7FF6, 0xC834401F, 0x0F129EF7, 0xB9C61580, 0x0137825F,
    0x9E1BC644, 0x5BE30AFF, 0x79FFAC00, 0x0FDDCFA0, 0x00000000, 0xDCF00000, 0x8006EF7B,
    0x06F7BDDF, 0x00000B18, 0x000026F0, 0x00002F10, 0x000026A0, 0x000003A0, 0x00001F88,
    0x000029E0, 0x00005E0A, 0x003642F6, 0x03589D00, 0x2E178000, 0x60F50000, 0x7E00002C,
    0x00013781, 0x005E2344, 0x26A16600, 0xA06F0000, 0xBE400003, 0x00001F88, 0x0029E06B,
    0x5DE06E00, 0x44C60000, 0x3A00000E, 0x2F000001, 0x26A00000, 0x03A00000, 0x1F880000,
    0x29E00000, 0x17C00000, 0xDEF7BC00, 0xF00001FB, 0x0026783E, 0x13A15F00, 0x892F8000,
    0xB8800017, 0x00002D49, 0x2E78C4F2, 0xD9C60000, 0x0000035F, 0xEB180000, 0xFFF7BFF7,
    0xF200035B, 0xAC92BBB7, 0x3004BFDE, 0x7B500177, 0x001BD602, 0xD504EF10, 0xDEFFEF90,
    0x16F09BFF, 0x99FF50BC, 0xBC17FCE4, 0x03F18998, 0xE4E40DF8, 0xE1A00683, 0x00A30393,
    0x059181A8, 0x75050005, 0x1FC00360, 0x000580CE, 0x00241213, 0x0002C404, 0x00000030,
    0x300002C0, 0x08004800, 0x00058488, 0x06C2F213, 0x829C3F80, 0xCA828002, 0x8C005181,
    0x683E9181, 0xCC7C2E00, 0x7C01F8C4, 0x42F13903, 0xF39267FD, 0xF50BC0FF, 0x7BFFBE42,
    0x17426FFF, 0x40006F98, 0x77300BBC, 0x09FF5001, 0xAEFF7F20, 0x6FF7AB24, 0xEE780000,
    0x000777BD, 0x2790FC40, 0x20BE0000, 0xCC00024E, 0x0003FE22, 0x01BF1B20, 0xC5556000,
    0xF00000FB, 0x0133BF7C, 0x00000000, 0xDFFBF58C, 0x01ADFFFB, 0x5DDBF900, 0x5FEF5649,
    0x00BB9802, 0xEB013DA8, 0x7788000D, 0xF7C86A82, 0x4DFFEF7F, 0xA85E0B78, 0xFE724CFF,
    0xC4CC5E0B, 0x06FC01F8, 0x0341F272, 0x81C9F0D0, 0xC0D40051, 0x800282C8, 0x01B03A82,
    0xC0670FE0, 0x09098002, 0x62020012, 0x00180001, 0x01600000, 0x24001800, 0xC2440400,
    0x79098002, 0x1FC00361, 0x4001414E, 0x28C0E541, 0x48C0C600, 0x1700341F, 0xFC62663E,
    0x9C81BE00, 0x33FEA178, 0xE07FF9C9, 0xDF217A85, 0x37FFBDFF, 0x37CC0BA1, 0x05DE2000,
    0xA800BB98, 0xBF9004FF, 0xD592577F, 0x800037FB, 0x004EF73A, 0xDE0BEA00, 0x5F500009,
    0x0005DE08, 0x2DC617D4, 0xBEA001BA, 0x15F8FF90, 0x6BB001AB, 0x31BE0DC4, 0xFE80122A,
    0xDEC449F6, 0x000137BF, 0xAC600000, 0xFFDEFFDF, 0xC8000D6F, 0xB24AEEDF, 0xC012FF7A,
    0xED4005DC, 0x006F5809, 0x5413BC40, 0x7BFFBE43, 0x5BC26FFF, 0x67FD42F0, 0xF05FF392,
    0x0FC62662, 0x939037E0, 0x86801A0F, 0x028C0E4F, 0x164606A0, 0xD4140014, 0x7F000D81,
    0x00160338, 0x0090484C, 0x000B1010, 0x000000C0, 0xC0000B00, 0x20012000, 0x00161220,
    0x1B0BC84C, 0x0A70FE00, 0x2A0A000A, 0x30014607, 0xA0FA4606, 0x31F0B801, 0xF007E313,
    0x0BC4E40D, 0xCE499FF5, 0xD42F03FF, 0xEFFEF90B, 0x5D09BFFD, 0x0001BE60, 0xDCC02EF1,
    0x27FD4005, 0xBBFDFC80, 0xBFDEAC92, 0x46000001, 0xBBF3C000, 0xCFB505FF, 0x4AFCC007,
    0xCB8A7FF6, 0xC834401F, 0x0F129EF7, 0xB9C61580, 0x0137825F, 0x9E1BC644, 0x5BE30AFF,
    0x79FFAC00, 0x0FDDCFA0, 0x00000000, 0x30000000, 0xEF7FEFD6, 0x0006B7FF, 0x25776FE4,
    0x097FBD59, 0xA002EE60, 0x37AC04F6, 0x09DE2000, 0xFFDF21AA, 0xE137FFBD, 0xFEA1782D,
    0x2FF9C933, 0xE3133178, 0xC81BF007, 0x400D07C9, 0x460727C3, 0x23035001, 0x0A000A0B,
    0x8006C0EA, 0x0B019C3F, 0x48242600, 0x05880800, 0x00006000, 0x00058000, 0x00900060,
    0x0B091010, 0x85E42600, 0x387F000D, 0x05000505, 0x00A30395, 0x7D230318, 0xF85C00D0,
    0x03F18998, 0xE27206F8, 0x24CFFA85, 0x1781FFE7, 0xFF7C85EA, 0x84DFFEF7, 0x00DF302E,
    0x60177880, 0xFEA002EE, 0xFEFE4013, 0xEF56495D, 0xFEA000DF, 0xFFCF03E7, 0x32F800BC,
    0x32FC469E, 0x819002E6, 0x001C0C81, 0xC0C81819, 0x78CBE001, 0x78CBF11A, 0x3FF50016,
    0xE7FE781F, 0x00000003, 0xFEFD6300, 0x6B7FFEF7, 0x76FE4000, 0xFBD59257, 0x2EE60097,
    0xC04F6A00, 0xE200037A, 0xF21AA09D, 0x7FFBDFFD, 0x1782DE13, 0x9C933FEA, 0x331782FF,
    0xBF007E31, 0xD07C9C81, 0x727C3400, 0x35001460, 0x00A0B230, 0x6C0EA0A0, 0x19C3F800,
    0x426000B0, 0x80800482, 0x06000058, 0x58000000, 0x00060000, 0x91010009, 0x426000B0,
    0xF000D85E, 0x00505387, 0x30395050, 0x3031800A, 0xC00D07D2, 0x18998F85, 0x206F803F,
    0xFFA85E27, 0x1FFE724C, 0xC85EA178, 0xFFEF7FF7, 0xF302E84D, 0x7788000D, 0x002EE601,
    0xE4013FEA, 0x6495DFEF, 0x400DFEF5, 0x06F8007E, 0x003F3EF2, 0xE21FF3DF, 0xBE01FAA6,
    0x4073FC47, 0x881FA07D, 0x43E789BC, 0xC87FC42F, 0x2F5A7813, 0xFC607FC4, 0x10B7EB03,
    0x1FE300DF, 0x8057C428, 0x05D005F1, 0x267826A0, 0x33C13500, 0x802F8C01, 0x07F8C02E,
    0x302BE206, 0x17B981FE, 0x13C81BE2, 0x10BD5E78, 0xE26F21FF, 0xF113D0F9, 0x03EA031F,
    0x371103EF, 0x3DF00FD5, 0x3EF29FE2, 0xF3DF003F, 0xE000001F, 0x401FFFFB, 0xDEFFDFAE,
    0xF307AFFF, 0x7E4078C9, 0x6B24AEFF, 0x1734FDED, 0x6001FB3C, 0x780D617C, 0xA20000BE,
    0xFB20FC61, 0x06F9EF7F, 0x503703C4, 0xECF1257B, 0x19E0BF01, 0x1A802FC8, 0x1D039310,
    0x44F81780, 0xA7401F21, 0xA078E42A, 0xBBC53900, 0xC05C06A1, 0xF01CDE1B, 0x2CC0903F,
    0x09103CB9, 0x0073440B, 0x30BF0013, 0xF5000007, 0xC00006C8, 0x8480074B, 0x00F54E85,
    0x98C90388, 0xCC0F05E2, 0x6F0DCB84, 0x82FF0182, 0x80B186B2, 0xB90A230D, 0x85902E5E,
    0xAC3A0728, 0x7930BC01, 0xDE06C806, 0x01B8BC42, 0xECF124F1, 0x3F181D09, 0xDEFFDF18,
    0x13580DF3, 0x3740004C, 0xC6002970, 0xEA1AC05E, 0xA24AEFF7, 0xC803DED6, 0xFD72BC57,
    0x5F9EF7FE, 0xF6F9800F, 0x8000012F, 0x3F7BDEF7, 0xC1F78000, 0xBE000133, 0xC0002742,
    0x000BC497, 0x05A93710, 0xC6279000, 0x8C000173, 0x0006BFB3, 0xF7BC0000, 0x3000FBDE,
    0x05F7BDEE, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xC0018080,
    0x002E0704, 0x0B05387F, 0x072A0780, 0x12F803E2, 0xD9E17863, 0x7ECF104F, 0x3099E5E0,
    0xF9EF73BE, 0xEF07CC06, 0x0BE60004, 0xC8012FDE, 0xFF3C05EF, 0x8C411ADF, 0x003FFBF5,
    0x7BDEE780, 0xF1000077, 0x00009E43, 0x024E20BE, 0xFF88B300, 0xF1B20000, 0x5580001B,
    0x0003EF15, 0x33BF7CF0, 0x00000001, 0x3EF7BDEF, 0xEF7B8C00, 0x0000017D, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x60200000, 0x81C13000, 0x4E1FC00B, 0x81E002C1,
    0x00F881CA, 0x5E18C4BE, 0xC413F678, 0x79781FB3, 0xDCEF8C26, 0xF301BE7B, 0x80013BC1,
    0x4BF782F9, 0x017BF200, 0x46B7FFCF, 0xFEFD6310, 0xB9D4000F, 0xD4000277, 0x0013BC17,
    0xEF042FA8, 0xC2FA8002, 0x003745B8, 0xC7FC85F5, 0x600D58AF, 0x7C1B88D7, 0x40245463,
    0x6224FB7F, 0x009BDFEF, 0xF7BC0000, 0x3000FBDE, 0x05F7BDEE, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xC0018080, 0x002E0704, 0x0B05387F, 0x072A0780,
    0x12F803E2, 0xD9E17863, 0x7ECF104F, 0x3099E5E0, 0xF9EF73BE, 0xEF07CC06, 0x0BE60004,
    0xC8012FDE, 0xFF3C05EF, 0x8C411ADF, 0x003FFBF5, 0x781F3FF5, 0xF005E7FE, 0xF88D3C65,
    0xC805CC65, 0x0E0640C0, 0x19030320, 0xC65F0038, 0xC65F88D3, 0x7FEA00B3, 0xCFFCF03E,
    0x80000007, 0x1F7BDEF7, 0xF7BDC600, 0x000000BE, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x30100000, 0xC0E09800, 0xA70FE005, 0x40F00160, 0x007C40E5, 0x2F0C625F,
    0xE209FB3C, 0x3CBC0FD9, 0xEE77C613, 0xF980DF3D, 0xC0009DE0, 0x25FBC17C, 0x80BDF900,
    0x235BFFE7, 0xFF7EB188, 0x73C00007, 0x003BBDEF, 0x790FC400, 0x17C00002, 0x000049C4,
    0x00FF88B3, 0xDF8D9000, 0x55600000, 0x0000FBC5, 0x677EF9E0, 0x00000002, 0x77BDEFA0,
    0xF7BAC003, 0x3037BFDE, 0xD0BC001E, 0x801785E2, 0x2B0F1815, 0x2F001E31, 0x05E0FC34,
    0x982A8158, 0x2F00A303, 0x0342F034, 0xE00CF02B, 0x5E051819, 0x685C0344, 0x00958158,
    0x2F0A30A3, 0xA17801A2, 0x00378199, 0x7E5189C8, 0xBF000588, 0x0344CF40, 0x8D189C80,
    0x1BC0009C, 0x20003408, 0x003C605E, 0x03412B00, 0x1541F000, 0x09090000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xDEF7B880,
    0x00000017, 0x00000000, 0x00000000, 0x7BDE6000, 0x5BFB3DEF, 0xE3100001, 0x0002FBE9,
    0x013FE620, 0x30179000, 0xDEF7BDEF, 0x001B213D, 0x0983F78C, 0x441E7800, 0x242E0001,
    0x00426000, 0x00042600, 0x000242E0, 0x002883CF, 0x1307EF18, 0x7BDEF798, 0x1A309EEF,
    0x00718000, 0x09DCC400, 0xEF3C6200, 0x7BCC017D, 0x7F67BDEF, 0x00000033, 0x00000000,
    0x00000000, 0x50000000, 0xECF73EEF, 0xDFC8001E, 0x63108E6F, 0xDE400FED, 0x806CF002,
    0x16300137, 0xBDE214F0, 0x07C0FFF7, 0xF24DF85C, 0x4282642B, 0x010FE03C, 0x000C0502,
    0x18480301, 0x0A1F0000, 0x1A256000, 0x9E2F1000, 0x81980001, 0x90D80006, 0x00000000,
    0x0002C240, 0x0027A0F8, 0x1B782C60, 0xD613D000, 0xBEF0000F, 0x0001FA81, 0x0B513FE6,
    0xE06E3000, 0x89C80005, 0x17000018, 0x43600400, 0x4F7EFC00, 0x2642BE32, 0xBFF7D540,
    0x00F03F77, 0x1A300064, 0xFCF00160, 0x7EFF3C01, 0x7F6B1892, 0xEF7BDE01, 0xF78000FD,
    0x800133C1, 0x0009D0AF, 0x00BC497C, 0x16A4DC40, 0xC6279000, 0xE3000173, 0x0001AFEC,
    0x00000000, 0xFFDFAC40, 0x256FFFDE, 0x495DBE80, 0x6206EF56, 0xF58800AF, 0x8000DF81,
    0x883C6267, 0x1FBBDFFE, 0xDF83F0F8, 0x3037C64A, 0xBDEF6F92, 0x4107E01F, 0x0006318E,
    0xFEFF4600, 0x00DBDEF7, 0x12ABDEC6, 0x003DCC00, 0x00034600, 0xF7B206F0, 0xA036F7BD,
    0x000D7710, 0x00025408, 0x301B0130, 0xCE41BE30, 0x783E017F, 0x37FFBDF6, 0x001664C1,
    0x09BF0301, 0xC2E1FCF0, 0x9F20E7BB, 0x0B1237DF, 0xF7BDCF00, 0xF88000EE, 0xC0004F21,
    0x0049C417, 0x07FC4598, 0x37E36400, 0x8AAAC000, 0x9E0001F7, 0x002677EF, 0x00000000,
    0xFBF58800, 0xADFFFBDF, 0x2BB7D004, 0x40DDEAC9, 0xB10015EC, 0x001BF03E, 0x078C4CF0,
    0xF77BFFD1, 0xF07E1F03, 0x06F8C95B, 0xBDEDF246, 0x20FC03F7, 0x00C631C8, 0xDFE8C000,
    0x1B7BDEFF, 0x557BD8C0, 0x07B98002, 0x0068C000, 0xF640DE00, 0x06DEF7BE, 0x01AEE214,
    0x004A8100, 0x03602600, 0xC837C606, 0x07C02FF9, 0xFFF7BECF, 0x02CC9826, 0x37E06020,
    0x5C3F9E01, 0xE41CF778, 0x6246FBF3, 0xEF73A801, 0x0BEA0004, 0xF50009DE, 0x005DE085,
    0x2DC617D4, 0x0BEA01BA, 0xB15F8FF9, 0xC46BB01A, 0x2A31BE0D, 0x9F6FE812, 0x7BFDEC44,
    0x00000013, 0xEB100000, 0xFFF7BFF7, 0x6FA0095B, 0xBBD59257, 0x002BD881, 0x37E07D62,
    0x1899E000, 0xF7FFA20F, 0xFC3E07EE, 0xF192B7E0, 0xDBE48C0D, 0xF807EF7B, 0x8C639041,
    0xD1800001, 0xF7BDFFBF, 0xF7B18036, 0x730004AA, 0xD180000F, 0x81BC0000, 0xBDEF7DEC,
    0x5DC4280D, 0x95020003, 0xC04C0000, 0x6F8C0C06, 0x805FF390, 0xEF7D9E0F, 0x99304DFF,
    0xC0C04005, 0x7F3C026F, 0x39EEF0B8, 0x8DF7E7C8, 0x180002C4, 0xEEFCF001, 0xF3ED417F,
    0xD92BF301, 0x7F2E29FF, 0xBDF20D10, 0x5603C4A7, 0x097EE718, 0xF19104DE, 0xC2BFE786,
    0xFEB016F8, 0x773E81E7, 0x0000003F, 0x00000000, 0xEFD62000, 0xB7FFEF7F, 0xAEDF4012,
    0x0377AB24, 0xC40057B1, 0x006FC0FA, 0x1E3133C0, 0xDDEFFF44, 0xC1F87C0F, 0x1BE3256F,
    0xF7B7C918, 0x83F00FDE, 0x0318C720, 0x7FA30000, 0x6DEF7BFF, 0x55EF6300, 0x1EE60009,
    0x01A30000, 0xD9037800, 0x1B7BDEFB, 0x06BB8850, 0x012A0400, 0x0D809800, 0x20DF1818,
    0x1F00BFE7, 0xFFDEFB3C, 0x0B32609B, 0xDF818080, 0x70FE7804, 0x9073DDE1, 0x891BEFCF,
    0x1F3FF505, 0x05E7FE78, 0x234F197C, 0x8173197E, 0xE0640C0C, 0x640C0C80, 0xC65F00E0,
    0xC65F88D3, 0x9FFA80B3, 0xF3FF3C0F, 0x00000001, 0xF5880000, 0xFFFBDFFB, 0xB7D004AD,
    0xDDEAC92B, 0x0015EC40, 0x1BF03EB1, 0x8C4CF000, 0x7BFFD107, 0x7E1F03F7, 0xF8C95BF0,
    0xEDF24606, 0xFC03F7BD, 0xC631C820, 0xE8C00000, 0x7BDEFFDF, 0x7BD8C01B, 0xB9800255,
    0x68C00007, 0x40DE0000, 0xDEF7BEF6, 0xAEE21406, 0x4A810001, 0x60260000, 0x37C60603,
    0xC02FF9C8, 0xF7BECF07, 0xCC9826FF, 0xE0602002, 0x3F9E0137, 0x1CF7785C, 0x46FBF3E4,
    0x7DAC0162, 0xE0001BCF, 0x0EE621EB, 0xFC4F3C00, 0x07F2BFEE, 0x6C966D80, 0x00000005,
    0x56C966D8, 0x7E2A7800, 0x00D95FF7, 0x9E21EBF0, 0xED60009D, 0x0000BE7B, 0x00000000,
    0xFFBF5880, 0x4ADFFFBD, 0x92BB7D00, 0xC40DDEAC, 0xEB10015E, 0x0001BF03, 0x1078C4CF,
    0x3F77BFFD, 0xBF07E1F0, 0x606F8C95, 0x7BDEDF24, 0x820FC03F, 0x000C631C, 0xFDFE8C00,
    0x01B7BDEF, 0x2557BD8C, 0x007B9800, 0x00068C00, 0xEF640DE0, 0x406DEF7B, 0x001AEE21,
    0x0004A810, 0x60360260, 0x9C837C60, 0xF07C02FF, 0x6FFF7BEC, 0x002CC982, 0x137E0602,
    0x85C3F9E0, 0x3E41CF77, 0x16246FBF, 0xDFFBFD90, 0x9826FFFB, 0xFFDEFFDF, 0xFBE20137,
    0x79F24AAF, 0xEFFEA5FF, 0xFEF3E493, 0x01FB901F, 0x97F7BF90, 0xB84DF900, 0x00130009,
    0xB113307A, 0x06FEF7FE, 0xEF7FEB10, 0x0FE6885E, 0x1FEA4EBF, 0xF464EBE0, 0x91ACA542,
    0x982880F9, 0xDE50BC05, 0x01FFFEDF, 0x0203F87F, 0xBF00000E, 0xF7BDEF7B, 0xFD18485E,
    0xEF7BDFFB, 0xC100006D, 0x02557BD8, 0xFF180000, 0x00000001, 0xFE00004E, 0xEF7BDEF7,
    0xFBDEF7BD, 0xEFB984AB, 0x1436F7BD, 0xDF784800, 0x0007C001, 0x8C2E0240, 0x849A2017,
    0xED7209F7, 0x827EE605, 0xA9AEF7A8, 0x7B9DF902, 0x18083DFF, 0xFCF7B9DF, 0x01F8F866,
    0x002F7C40, 0x01BCF0C8, 0x3DCD76A0, 0x30767800, 0xD592576F, 0xFD8C97FB, 0x4F18239B,
    0xF3012F9F, 0x7E7BDFFB, 0xF39E002B, 0xDF54493E, 0x0017F405, 0x05CC1FD1, 0x0D134F00,
    0xBFF7BECF, 0x30378660, 0x237641BF, 0x02F107A6, 0xC4CFF12B, 0x39CDF802, 0xC02E13FF,
    0x0577DF7C, 0x0000000C, 0x04000000, 0xE130000C, 0x44444402, 0x77C01626, 0x883CF9CE,
    0xF0C2A817, 0xC837E605, 0xD93E21F5, 0xFF7BECF0, 0x5CC9981D, 0xF434F000, 0x7EF10017,
    0x27BE73C0, 0x04CF7AC9, 0xFC53FCF0, 0x3600137F, 0x10002BF1, 0x00037D49, 0x7C47FFBE,
    0x0242C000, 0x00246C80, 0xFE0FFEFC, 0xB7881000, 0x58C46000, 0xEF78027B, 0x0003F7BD,
    0x026783EF, 0x09D0AF80, 0x5E24BE00, 0xA9371000, 0xC4F20005, 0x30002E78, 0x001AFECE,
    0x00000000, 0xBFF7CF00, 0x009BFFF7, 0x493DFFEA, 0x601E7BD6, 0xBE2012FD, 0x40034F05,
    0xAC43F117, 0x417BBDFF, 0x275F81D3, 0x58631BA3, 0x05601E78, 0x00B8157E, 0xEF80C60F,
    0xBDEF7BDE, 0x002F30B7, 0x00000C80, 0x60700000, 0xBDEF7BDF, 0xEF7BDEF7, 0x5000284D,
    0x288001F0, 0xFDE00FE4, 0x33FEA1A1, 0xB59FF9C8, 0xF7C868C3, 0x937FFBDC, 0x0005AC51,
    0x12FF41FA, 0x502DF8C0, 0x108E6FFF, 0x0176FE63, 0xBDEF73C0, 0x3F10003B, 0x7C0009E4,
    0xC0049C41, 0x003FE22C, 0x00DF8D90, 0xEF155580, 0xEF9E0003, 0x00002677, 0x00000000,
    0xEF7FEF9E, 0xD40137FF, 0xAC927BFF, 0xFAC03CF7, 0x0B7C4025, 0x2E80069E, 0xFF5887E2,
    0xA682F77B, 0x464EBF03, 0xF0B0C637, 0xFC0AC03C, 0x1E01702A, 0xBDDF018C, 0x6F7BDEF7,
    0x00005E61, 0x00000019, 0xBEC0E000, 0xEF7BDEF7, 0x9BDEF7BD, 0xE0A00050, 0xC8510003,
    0x43FBC01F, 0x9067FD43, 0x876B3FF3, 0xB9EF90D1, 0xA326FFF7, 0xF4000B58, 0x8025FE83,
    0xFEA05BF1, 0xC6211CDF, 0x5002EDFC, 0x0009DEE7, 0x09DE0BEA, 0xF042FA80, 0x85F5002E,
    0x406E8B71, 0xF1FF217D, 0xBB03562B, 0x1BE0DC46, 0x7F4122A3, 0xEF6224FB, 0x00009BDF,
    0xC0000000, 0xFDEFFDF3, 0xFA8026FF, 0xF5924F7F, 0xBF58079E, 0xC16F8804, 0x45D000D3,
    0x7FEB10FC, 0x74D05EEF, 0xE8C9D7E0, 0x9E1618C6, 0x5F815807, 0x83C02E05, 0xF7BBE031,
    0x2DEF7BDE, 0x20000BCC, 0x00000003, 0xF7D81C00, 0xBDEF7BDE, 0x137BDEF7, 0x7C14000A,
    0xF90A2000, 0x687F7803, 0x720CFFA8, 0x30ED67FE, 0xF73DF21A, 0x1464DFFE, 0x7E80016B,
    0x3004BFD0, 0xFFD40B7E, 0x98C4239B, 0xFEA05DBF, 0xFFCF03E7, 0xF197C0BC, 0x3197E234,
    0x20606417, 0x30320703, 0xBE038190, 0xBF11A78C, 0xFA81678C, 0xFF3C0F9F, 0x000001F3,
    0x9E000000, 0xFFEF7FEF, 0xFFD40137, 0xF7AC927B, 0x25FAC03C, 0x9E0B7C40, 0xE22E8006,
    0x7BFF5887, 0x03A682F7, 0x37464EBF, 0x3CF0B0C6, 0x2AFC0AC0, 0x8C1E0170, 0xF7BDDF01,
    0x616F7BDE, 0x1900005E, 0x00000000, 0xF7BEC0E0, 0xBDEF7BDE, 0x509BDEF7, 0x03E0A000,
    0x1FC85100, 0x4343FBC0, 0xF39067FD, 0xD1876B3F, 0xF7B9EF90, 0x58A326FF, 0x83F4000B,
    0xF18025FE, 0xDFFEA05B, 0xFCC6211C, 0xF7BDE2ED, 0x07DE0FDE, 0xD0AF84CF, 0x2F125F09,
    0x416A4DC4, 0x05CF189E, 0x01AFECE3, 0xBDC60000, 0x00002EF7, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xF0000000, 0x0EEF7BDC, 0x02790FC4, 0x3127105F,
    0x640FF88B, 0x556037E3, 0xE780FBC5, 0x00099DFB, 0xEF718000, 0x00000BBD, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x73A80000, 0x5F5004EF,
    0x7D404EF0, 0xA8177821, 0x745B8C2F, 0xFF90BEA3, 0xD9AB15F8, 0xDF06E235, 0xBFA91518,
    0xF7B1127D, 0x00004DEF, 0xBDC60000, 0x00002EF7, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF03E7FEA,
    0x97CBCFFC, 0x97E234F1, 0x06065731, 0x30327032, 0xCBE38190, 0xCBF11A78, 0x9FFA9678,
    0xF3FF3C0F, 0x00000001, 0xEF7BDC60, 0x00000002, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF9000000, 0x00001F7F,
    0xBCEFCE4F, 0x1F00D109, 0x7997EE62, 0x41230357, 0x0DEFFFCC, 0x09DD8C09, 0x03EFE4B2,
    0x15FFF58C, 0xEA0015F0, 0x001FA01F, 0x12237EC6, 0x0EE0097E, 0xE217FFF5, 0xF7C67005,
    0x2A897E1B, 0x1C0FDC80, 0x77EB00B8, 0x0B2BD9EE, 0xAE9E6095, 0x782FA310, 0x4400DFA0,
    0x02CF1FC1, 0xE4342C00, 0xDFF7BFFB, 0xC893C901, 0x775C933B, 0x26F0B840, 0x88500F10,
    0x0A040002, 0x00301000, 0x8006000C, 0x2C088889, 0x28781880, 0xFC260164, 0x1826F0B9,
    0x0CF1622F, 0xE6219DE4, 0x4E06F03F, 0xCF73DF20, 0xF905A81B, 0x07C60005, 0x58802ED4,
    0xDBF9003B, 0xDEA8846B, 0x1180000D, 0xFFBBF3C0, 0x07CFB505, 0xFFD92BF3, 0x447F2E29,
    0x29EF7C83, 0x718560F1, 0x4DE097EE, 0x9E1BC644, 0x5BE30AFF, 0x81E7FEB0, 0x003F773E,
    0x00000000, 0xF77E0000, 0xFEF51FDE, 0x037FFDEF, 0x4CDFBE20, 0x302FD9F2, 0x5CC00FFF,
    0x2F000720, 0x9EF77EA0, 0x9E03C40E, 0x85EB115F, 0x0780F83F, 0x02120012, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBDEF7800,
    0xBC0003F7, 0x00099E0F, 0x009D0AF8, 0x17892F80, 0xA9371000, 0x13C80005, 0x0000B9E3,
    0x01AFECE3, 0x00000000, 0xDDEA0000, 0x0EFD9EE7, 0x9BF7F200, 0xFB98C423, 0x05DA8097,
    0xF18176A0, 0x4BE20005, 0xCEFC81B8, 0x0E225F3D, 0x9FB1819E, 0x8C4ECF10, 0x40370387,
    0x183C381C, 0x1E063003, 0x2800F023, 0x00382E44, 0x0240440E, 0x01202018, 0x01705824,
    0x0501885C, 0x30A910A0, 0x3C0C6006, 0x8806E1FC, 0x3039870B, 0xD9E213F6, 0x0DC1E303,
    0xF9EE77E4, 0x7C617112, 0x06F88001, 0x5000FFA8, 0xFF6300BB, 0xE63108E6, 0x800097EF,
    0x777BDEE7, 0x21F88000, 0x2F80004F, 0x60009388, 0x001FF116, 0x01BF1B20, 0x78AAAC00,
    0xF3C0001F, 0x0004CEFD, 0x00000000, 0x9F77A800, 0x003BF67B, 0x8E6FDFC8, 0x5FEE6310,
    0x80176A02, 0x17C605DA, 0xE12F8800, 0xF73BF206, 0x7838897C, 0x427EC606, 0x1E313B3C,
    0x7100DC0E, 0x0C60F0E0, 0x8C7818C0, 0x10A003C0, 0x3800E0B9, 0x60090110, 0x90048080,
    0x7005C160, 0x80140621, 0x18C2A442, 0xF0F03180, 0x2E201B87, 0xD8C0E61C, 0x0F67884F,
    0x9037078C, 0x4BE7B9DF, 0x05F185C4, 0xA01BE200, 0xED4003FE, 0x9BFD8C02, 0xBF98C423,
    0x9D40025F, 0xA000277B, 0x009DE0BE, 0xBC10BEA0, 0x85F5000B, 0x006E8B71, 0xC7FC85F5,
    0xB00D58AF, 0xBE0DC46B, 0xD0122A31, 0xD8893EDF, 0x0026F7FB, 0x00000000, 0xE7DDEA00,
    0x000EFD9E, 0x239BF7F2, 0x97FB98C4, 0xA005DA80, 0x05F18176, 0xB84BE200, 0x3DCEFC81,
    0x9E0E225F, 0x109FB181, 0x878C4ECF, 0x1C403703, 0x03183C38, 0x231E0630, 0x442800F0,
    0x0E00382E, 0x18024044, 0x24012020, 0x5C017058, 0xA0050188, 0x0630A910, 0xFC3C0C60,
    0x0B8806E1, 0xF6303987, 0x03D9E213, 0xE40DC1E3, 0x12F9EE77, 0x017C6171, 0xA806F880,
    0xBB5000FF, 0xE6FF6300, 0xEFE63108, 0x18000097, 0xDDF9E001, 0xE7DA82FF, 0x64AFCC03,
    0xFCB8A7FF, 0xEF906881, 0x601E253D, 0x97EE7185, 0x32204DE0, 0x57FCF0DE, 0xAC02DF18,
    0xCFA079FF, 0x00000FDD, 0x00000000, 0xF5000000, 0x7ECF73EE, 0xFBF90007, 0xCC6211CD,
    0xED404BFD, 0xC0BB5002, 0xF10002F8, 0x7E40DC25, 0x112F9EE7, 0xD8C0CF07, 0x2767884F,
    0x1B81C3C6, 0x1E1C0E20, 0x0318018C, 0x0078118F, 0x1C172214, 0x20220700, 0x90100C01,
    0xB82C1200, 0x80C42E00, 0x54885002, 0x06300318, 0x0370FE1E, 0x1CC385C4, 0xF109FB18,
    0xE0F181EC, 0xF73BF206, 0x30B8897C, 0x7C4000BE, 0x007FD403, 0xB1805DA8, 0x1884737F,
    0x804BF7F3, 0x3C0F9FFA, 0x7C02F3FF, 0x7E234F19, 0x19017319, 0x01C0C818, 0x81903032,
    0x9E32F803, 0x9E32FC46, 0xF9FFA805, 0x1F3FF3C0, 0x00000000, 0xBBD40000, 0x1DFB3DCF,
    0x37EFE400, 0xF7318847, 0x0BB5012F, 0xE302ED40, 0x97C4000B, 0x9DF90370, 0x1C44BE7B,
    0x3F63033C, 0x189D9E21, 0x806E070F, 0x30787038, 0x3C0C6006, 0x5001E046, 0x00705C88,
    0x0480881C, 0x02404030, 0x02E0B048, 0x0A0310B8, 0x61522140, 0x7818C00C, 0x100DC3F8,
    0x60730E17, 0xB3C427EC, 0x1B83C607, 0xF3DCEFC8, 0xF8C2E225, 0x0DF10002, 0xA001FF50,
    0xFEC60176, 0xCC6211CD, 0x60012FDF, 0x006FEFFE, 0xEA9BC600, 0x64260000, 0x32130000,
    0xA6F18000, 0xE6000071, 0x0001EEFF, 0x00000000, 0xBDEF7BC0, 0xEF7BDEF7, 0x7BDEF7BD,
    0x00000DEF, 0x00000000, 0xEF7BC000, 0x7BDEF7BD, 0xDEF7BDEF, 0x000DEF7B, 0x00000000,
    0xFEFFE600, 0xBC600006, 0x60000EA9, 0x30000642, 0x18000321, 0x00071A6F, 0x00022000,
    0x049CF780, 0x49E5C800, 0xDCFBD180, 0x0D0EDFB3, 0x235EDFC8, 0x278F98C4, 0x800BB181,
    0x00FF902A, 0xDE037C40, 0xDEE7BE40, 0x0AA2E207, 0x8F186779, 0x781C98C0, 0xC0BE2D13,
    0x4616429F, 0x64785559, 0x9F8B4160, 0xFC04623F, 0x094ACA31, 0x1F8B400B, 0x99460020,
    0x970100C9, 0xCC0E2F16, 0x332A940C, 0x46143050, 0x063178B6, 0x98770B8A, 0xF3F85C41,
    0xC578A40C, 0xE27207B3, 0x7CF7B806, 0xBE303889, 0xDF100440, 0x3002F500, 0xC9F805FE,
    0xF98C4235, 0x0CF003DB, 0x9EE7DEBF, 0x578016FD, 0x7700004E, 0xEF00005F, 0x007EF7BD,
    0x26783EF0, 0x4E857C00, 0x7892F800, 0x526E2001, 0xC4F2000B, 0x18002E78, 0x000D7F67,
    0x80000000, 0x02F7BDDF, 0x0FEF7BDC, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x30001000, 0xF82F0160, 0x7EA24F43, 0x78813C13,
    0x02BF3DEF, 0x60110034, 0x13FE4036, 0xC839FF58, 0x0163FF7A, 0xF7BDCF00, 0x7E2000EE,
    0x7C0013C8, 0x60049C41, 0x001FF116, 0x0037E364, 0x7DE2AAB0, 0x7EF9E000, 0x00000267,
    0xBBF00000, 0x7B805EF7, 0x0001FDEF, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x2C060002, 0xE87F05E0, 0x826FD449, 0xBDEF1027,
    0x068057E7, 0x06CC0220, 0xEB027FC8, 0xEF59073F, 0xD4002C7F, 0x400277B9, 0x013BC17D,
    0xEF042FA8, 0x8C2FA802, 0xF503745B, 0xAFC7FC85, 0x8D760D58, 0x4637C1B8, 0xFB7F4245,
    0xDFEF6224, 0x0000009B, 0xEF77E000, 0xDEF700BD, 0x000003FB, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x04000000, 0xC0580C00, 0x93D0FE0B,
    0x4F04DFA8, 0xCF7BDE20, 0x400D00AF, 0x900D9804, 0x7FD604FF, 0xFFDEB20E, 0xCFFD4058,
    0x79FF9E07, 0x34F197C1, 0x173197E2, 0x81903032, 0x640C0C83, 0xF197C0E0, 0xF197E234,
    0xF9FFA82C, 0x1F3FF3C0, 0x00000000, 0xBDEF77E0, 0xFBDEF700, 0x00000003, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00040000, 0x0BC0580C,
    0xA893D0FE, 0x204F04DF, 0xAFCF7BDE, 0x04400D00, 0xFF900D98, 0x0E7FD604, 0x58FFDEB2,
    0xEF73C000, 0x10003BBD, 0x0009E43F, 0x049C417C, 0x3FE22CC0, 0xDF8D9000, 0x15558000,
    0x9E0003EF, 0x002677EF, 0x00000000, 0x3BDEF7D8, 0x7BDEE300, 0x01F83F7F, 0x3C26707E,
    0x51510780, 0xA24601C8, 0x281F81C2, 0x02813CB8, 0x8583C43F, 0x05818891, 0xE0B0787F,
    0xE1F8950F, 0x60F02C8F, 0xE01E0F24, 0xFC09E507, 0xB7F03180, 0x43F00391, 0x3007C2C5,
    0x007817E1, 0x2460F0A2, 0x00F80380, 0x00580278, 0x80015028, 0x54000E03, 0x2C000A22,
    0xC2800054, 0x88330005, 0x587C0007, 0x037E3000, 0xDEE7801F, 0x0001A85D, 0x40001F10,
    0x398003FE, 0x003DE8C2, 0x3BDEF758, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0xF3C00000, 0x6FD9EFFD, 0xDF7F3002, 0x7FCC6293, 0xC015F803, 0x8002017A,
    0xEFC60139, 0xFC26F3DE, 0x988BB500, 0xD00F9037, 0x006C3640, 0x001E0660, 0x000183C0,
    0x60000808, 0x00600000, 0x00426000, 0x600C4880, 0x01E05601, 0x7F0D902E, 0x6213F6A0,
    0x601640DE, 0x379EE77C, 0x000405E1, 0x02BF00AB, 0xFCC03744, 0xD6324F7D, 0xBE78005E,
    0x13BBBDFF, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7FEA0000, 0xCFFCF03E,
    0x4F197C0B, 0x73197E23, 0x32060641, 0x03032070, 0xCBE03819, 0xCBF11A78, 0xFFA81678,
    0x3FF3C0F9, 0x0000001F, 0xEF7D8000, 0xEE3003BD, 0x83F7F7BD, 0x6707E01F, 0x107803C2,
    0x601C8515, 0xF81C2A24, 0x13CB8281, 0x3C43F028, 0x18891858, 0x0787F058, 0x8950FE0B,
    0x02C8FE1F, 0xE0F2460F, 0x9E507E01, 0x03180FC0, 0x00391B7F, 0x7C2C543F, 0x817E1300,
    0x0F0A2007, 0x80380246, 0x8027800F, 0x15028005, 0x00E03800, 0x00A22540, 0x000542C0,
    0x30005C28, 0xC0007883, 0xE3000587, 0x7801F037, 0x1A85DDEE, 0x01F10000, 0x003FE400,
    0xDE8C2398, 0x00000003
EW_END_OF_FONT_RES( FlatFontXL )

/* Table with links to derived variants of the font resource : 'Flat::FontXL' */
EW_RES_WITHOUT_VARIANTS( FlatFontXL )

/* Initializer for the class 'Flat::ActionButton' */
void FlatActionButton__Init( FlatActionButton _this, XObject aLink, XHandle aArg )
{
  /* At first initialize the super class ... */
  CoreGroup__Init( &_this->_Super, aLink, aArg );

  /* ... then construct all embedded objects */
  CoreSimpleTouchHandler__Init( &_this->TouchHandler, &_this->_XObject, 0 );
  ViewsFrame__Init( &_this->Frame, &_this->_XObject, 0 );
  ViewsText__Init( &_this->CaptionText, &_this->_XObject, 0 );

  /* Setup the VMT pointer */
  _this->_VMT = EW_CLASS( FlatActionButton );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0000 );
  CoreView_OnSetLayout((CoreView)&_this->TouchHandler, CoreLayoutAlignToBottom | 
  CoreLayoutAlignToLeft | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz 
  | CoreLayoutResizeVert );
  CoreQuadView__OnSetPoint4( &_this->TouchHandler, _Const0001 );
  CoreQuadView__OnSetPoint3( &_this->TouchHandler, _Const0002 );
  CoreQuadView__OnSetPoint2( &_this->TouchHandler, _Const0003 );
  CoreQuadView__OnSetPoint1( &_this->TouchHandler, _Const0004 );
  CoreView_OnSetLayout((CoreView)&_this->Frame, CoreLayoutAlignToBottom | CoreLayoutAlignToLeft 
  | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz | CoreLayoutResizeVert 
  );
  CoreRectView__OnSetBounds( &_this->Frame, _Const0000 );
  ViewsFrame_OnSetColor( &_this->Frame, FlatColorOfTouch );
  CoreView_OnSetLayout((CoreView)&_this->CaptionText, CoreLayoutAlignToBottom | 
  CoreLayoutAlignToLeft | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz 
  | CoreLayoutResizeVert );
  CoreRectView__OnSetBounds( &_this->CaptionText, _Const0000 );
  ViewsText_OnSetString( &_this->CaptionText, EwLoadString( &_Const0005 ));
  ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfBackground );
  EwRetainString( &_this->Caption, EwLoadString( &_Const0005 ));
  _this->ItemColor = FlatColorOfTouch;
  _this->TextColor = FlatColorOfBackground;
  _this->ItemColorActive = FlatColorOfTheme;
  CoreGroup__Add( _this, ((CoreView)&_this->TouchHandler ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->Frame ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->CaptionText ), 0 );
  _this->TouchHandler.OnLeave = EwNewSlot( _this, FlatActionButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnEnter = EwNewSlot( _this, FlatActionButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnRelease = EwNewSlot( _this, FlatActionButton_pressReleaseSlot 
  );
  _this->TouchHandler.OnPress = EwNewSlot( _this, FlatActionButton_pressReleaseSlot 
  );
  ViewsFrame_OnSetBitmap( &_this->Frame, EwLoadResource( &FlatFlatFrame, ResourcesBitmap 
  ));
  ViewsText_OnSetFont( &_this->CaptionText, EwLoadResource( &FlatFontM, ResourcesFont 
  ));
}

/* Re-Initializer for the class 'Flat::ActionButton' */
void FlatActionButton__ReInit( FlatActionButton _this )
{
  /* At first re-initialize the super class ... */
  CoreGroup__ReInit( &_this->_Super );

  /* ... then re-construct all embedded objects */
  CoreSimpleTouchHandler__ReInit( &_this->TouchHandler );
  ViewsFrame__ReInit( &_this->Frame );
  ViewsText__ReInit( &_this->CaptionText );
}

/* Finalizer method for the class 'Flat::ActionButton' */
void FlatActionButton__Done( FlatActionButton _this )
{
  /* Finalize this class */
  _this->_VMT = EW_CLASS( FlatActionButton );

  /* Finalize all embedded objects */
  CoreSimpleTouchHandler__Done( &_this->TouchHandler );
  ViewsFrame__Done( &_this->Frame );
  ViewsText__Done( &_this->CaptionText );

  /* Release all used strings */
  EwReleaseString( &_this->Caption );

  /* Don't forget to deinitialize the super class ... */
  CoreGroup__Done( &_this->_Super );
}

/* Garbage Collector method for the class 'Flat::ActionButton' */
void FlatActionButton__Mark( FlatActionButton _this )
{
  EwMarkSlot( _this->OnAction );
  EwMarkObject( &_this->TouchHandler );
  EwMarkObject( &_this->Frame );
  EwMarkObject( &_this->CaptionText );

  /* Give the super class a chance to mark its objects and references */
  CoreGroup__Mark( &_this->_Super );
}

/* The method UpdateViewState() is invoked automatically after the state of the 
   component has been changed. This method can be overridden and filled with logic 
   to ensure the visual aspect of the component does reflect its current state. 
   For example, the 'enabled' state of the component can affect its colors (disabled 
   components may appear pale). In this case the logic of the method should modify 
   the respective color properties accordingly to the current 'enabled' state. 
   The current state of the component is passed as a set in the parameter aState. 
   It reflects the very basic component state like its visibility or the ability 
   to react to user inputs. Beside this common state, the method can also involve 
   any other variables used in the component as long as they reflect its current 
   state. For example, the toggle switch component can take in account its toggle 
   state 'on' or 'off' and change accordingly the location of the slider, etc.
   Usually, this method will be invoked automatically by the framework. Optionally 
   you can request its invocation by using the method @InvalidateViewState(). */
void FlatActionButton_UpdateViewState( FlatActionButton _this, XSet aState )
{
  if ((( aState & CoreViewStateEnabled ) == CoreViewStateEnabled ))
  {
    if ( _this->TouchHandler.Down && _this->TouchHandler.Inside )
      ViewsFrame_OnSetColor( &_this->Frame, _this->ItemColorActive );
    else
      ViewsFrame_OnSetColor( &_this->Frame, _this->ItemColor );
  }
  else
    ViewsFrame_OnSetColor( &_this->Frame, FlatColorOfDisabled );
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatActionButton_enterLeaveSlot( FlatActionButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatActionButton_pressReleaseSlot( FlatActionButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  if ( !_this->TouchHandler.Down && _this->TouchHandler.Inside )
  {
    EwIdleSignal( _this->OnAction, ((XObject)_this ));
  }
}

/* 'C' function for method : 'Flat::ActionButton.OnSetCaption()' */
void FlatActionButton_OnSetCaption( FlatActionButton _this, XString value )
{
  EwRetainString( &_this->Caption, value );
  ViewsText_OnSetString( &_this->CaptionText, value );
}

/* 'C' function for method : 'Flat::ActionButton.OnSetItemColor()' */
void FlatActionButton_OnSetItemColor( FlatActionButton _this, XColor value )
{
  _this->ItemColor = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* 'C' function for method : 'Flat::ActionButton.OnSetTextColor()' */
void FlatActionButton_OnSetTextColor( FlatActionButton _this, XColor value )
{
  _this->TextColor = value;
  ViewsText_OnSetColor( &_this->CaptionText, value );
}

/* 'C' function for method : 'Flat::ActionButton.OnSetItemColorActive()' */
void FlatActionButton_OnSetItemColorActive( FlatActionButton _this, XColor value )
{
  _this->ItemColorActive = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* Variants derived from the class : 'Flat::ActionButton' */
EW_DEFINE_CLASS_VARIANTS( FlatActionButton )
EW_END_OF_CLASS_VARIANTS( FlatActionButton )

/* Virtual Method Table (VMT) for the class : 'Flat::ActionButton' */
EW_DEFINE_CLASS( FlatActionButton, CoreGroup, "Flat::ActionButton" )
  CoreRectView_initLayoutContext,
  CoreView_GetRoot,
  CoreGroup_Draw,
  CoreView_HandleEvent,
  CoreGroup_CursorHitTest,
  CoreRectView_ArrangeView,
  CoreRectView_MoveView,
  CoreRectView_GetExtent,
  CoreGroup_ChangeViewState,
  CoreGroup_OnSetBounds,
  CoreGroup_OnSetFocus,
  CoreGroup_OnSetBuffered,
  CoreGroup_OnSetOpacity,
  CoreGroup_DispatchEvent,
  CoreGroup_BroadcastEvent,
  CoreGroup_UpdateLayout,
  FlatActionButton_UpdateViewState,
  CoreGroup_InvalidateArea,
  CoreGroup_FindSiblingView,
  CoreGroup_RestackBehind,
  CoreGroup_RestackTop,
  CoreGroup_Restack,
  CoreGroup_Remove,
  CoreGroup_Add,
EW_END_OF_CLASS( FlatActionButton )

/* Bitmap resources used for the different widgets. If you want to change the bitmaps 
   within your project, just create a variant of these bitmap resources and define 
   the attributes of the bitmap resources according your design ideas. */
EW_DEFINE_BITMAP_RES( FlatFlatFrame )
  EW_BITMAP_FRAMES( FlatFlatFrame, Default, EW_DRIVER_VARIANT_ALPHA8, 30, 30, 0 )
    EW_BITMAP_FRAME( 1, 1, 28, 28, 0x00000000, 0x00000000 )

  EW_BITMAP_PIXEL_R180( FlatFlatFrame, Default )                /* ratio 8.00 % */
    0xFB9C9100, 0xC1A0B047, 0x9E0F0883, 0xA12E4243, 0x1B0687C3, 0xB1489C42, 0x188BC5A2,
    0xC8DC6A33, 0x8FC7A3B1, 0x1C8A4320, 0xC9A4B249, 0xAA532893, 0xA5B2C95C, 0x0D3097CB,
    0xEE791C0E, 0xC9913247, 0x0004047E, 0x00000000

  EW_BITMAPS_TABLE( FlatFlatFrame )
    EW_BITMAP( FlatFlatFrame, Default )
EW_END_OF_BITMAP_RES( FlatFlatFrame )

/* Table with links to derived variants of the bitmap resource : 'Flat::FlatFrame' */
EW_RES_WITHOUT_VARIANTS( FlatFlatFrame )

/* Color constant for all items the should appear like the background. If you want 
   to change this color within your project, just create a variant of this color 
   constant and select a new color value that meets your design ideas. */
const XColor FlatColorOfBackground = { 0x00, 0x00, 0x00, 0xFF };

/* Initializer for the class 'Flat::IconButton' */
void FlatIconButton__Init( FlatIconButton _this, XObject aLink, XHandle aArg )
{
  /* At first initialize the super class ... */
  CoreGroup__Init( &_this->_Super, aLink, aArg );

  /* ... then construct all embedded objects */
  CoreSimpleTouchHandler__Init( &_this->TouchHandler, &_this->_XObject, 0 );
  ViewsFrame__Init( &_this->Frame, &_this->_XObject, 0 );
  ViewsImage__Init( &_this->Image, &_this->_XObject, 0 );
  ViewsText__Init( &_this->CaptionText, &_this->_XObject, 0 );

  /* Setup the VMT pointer */
  _this->_VMT = EW_CLASS( FlatIconButton );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0006 );
  CoreView_OnSetLayout((CoreView)&_this->TouchHandler, CoreLayoutAlignToBottom | 
  CoreLayoutAlignToLeft | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz 
  | CoreLayoutResizeVert );
  CoreQuadView__OnSetPoint4( &_this->TouchHandler, _Const0001 );
  CoreQuadView__OnSetPoint3( &_this->TouchHandler, _Const0007 );
  CoreQuadView__OnSetPoint2( &_this->TouchHandler, _Const0008 );
  CoreQuadView__OnSetPoint1( &_this->TouchHandler, _Const0004 );
  CoreRectView__OnSetBounds( &_this->Frame, _Const0009 );
  ViewsFrame_OnSetColor( &_this->Frame, FlatColorOfTouch );
  CoreRectView__OnSetBounds( &_this->Image, _Const0009 );
  ViewsImage_OnSetColor( &_this->Image, FlatColorOfBackground );
  ViewsImage_OnSetFrameNumber( &_this->Image, 19 );
  CoreRectView__OnSetBounds( &_this->CaptionText, _Const000A );
  ViewsText_OnSetAlignment( &_this->CaptionText, ViewsTextAlignmentAlignHorzLeft 
  | ViewsTextAlignmentAlignVertCenter );
  ViewsText_OnSetString( &_this->CaptionText, EwLoadString( &_Const0005 ));
  ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfTouch );
  _this->IconIndex = 19;
  _this->IconColor = FlatColorOfBackground;
  _this->ItemColor = FlatColorOfTouch;
  _this->TextColor = FlatColorOfTouch;
  _this->ItemColorActive = FlatColorOfTheme;
  CoreGroup__Add( _this, ((CoreView)&_this->TouchHandler ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->Frame ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->Image ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->CaptionText ), 0 );
  _this->TouchHandler.OnLeave = EwNewSlot( _this, FlatIconButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnEnter = EwNewSlot( _this, FlatIconButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnRelease = EwNewSlot( _this, FlatIconButton_pressReleaseSlot 
  );
  _this->TouchHandler.OnPress = EwNewSlot( _this, FlatIconButton_pressReleaseSlot 
  );
  ViewsFrame_OnSetBitmap( &_this->Frame, EwLoadResource( &FlatFlatFrame, ResourcesBitmap 
  ));
  ViewsImage_OnSetBitmap( &_this->Image, EwLoadResource( &FlatFlatDemoIcons, ResourcesBitmap 
  ));
  ViewsText_OnSetFont( &_this->CaptionText, EwLoadResource( &FlatFontM, ResourcesFont 
  ));
  _this->Icon = EwLoadResource( &FlatFlatDemoIcons, ResourcesBitmap );
}

/* Re-Initializer for the class 'Flat::IconButton' */
void FlatIconButton__ReInit( FlatIconButton _this )
{
  /* At first re-initialize the super class ... */
  CoreGroup__ReInit( &_this->_Super );

  /* ... then re-construct all embedded objects */
  CoreSimpleTouchHandler__ReInit( &_this->TouchHandler );
  ViewsFrame__ReInit( &_this->Frame );
  ViewsImage__ReInit( &_this->Image );
  ViewsText__ReInit( &_this->CaptionText );
}

/* Finalizer method for the class 'Flat::IconButton' */
void FlatIconButton__Done( FlatIconButton _this )
{
  /* Finalize this class */
  _this->_VMT = EW_CLASS( FlatIconButton );

  /* Finalize all embedded objects */
  CoreSimpleTouchHandler__Done( &_this->TouchHandler );
  ViewsFrame__Done( &_this->Frame );
  ViewsImage__Done( &_this->Image );
  ViewsText__Done( &_this->CaptionText );

  /* Don't forget to deinitialize the super class ... */
  CoreGroup__Done( &_this->_Super );
}

/* Garbage Collector method for the class 'Flat::IconButton' */
void FlatIconButton__Mark( FlatIconButton _this )
{
  EwMarkSlot( _this->OnAction );
  EwMarkObject( &_this->TouchHandler );
  EwMarkObject( &_this->Frame );
  EwMarkObject( &_this->Image );
  EwMarkObject( &_this->CaptionText );
  EwMarkObject( _this->Icon );

  /* Give the super class a chance to mark its objects and references */
  CoreGroup__Mark( &_this->_Super );
}

/* The method UpdateLayout() is invoked automatically after the size of the component 
   has been changed. This method can be overridden and filled with logic to perform 
   a sophisticated arrangement calculation for one or more enclosed views. In this 
   case the parameter aSize can be used. It contains the current size of the component. 
   Usually, all enclosed views are arranged automatically accordingly to their @Layout 
   property. UpdateLayout() gives the derived components a chance to extend this 
   automatism by a user defined algorithm. */
void FlatIconButton_UpdateLayout( FlatIconButton _this, XPoint aSize )
{
  XInt32 s;

  CoreGroup_UpdateLayout((CoreGroup)_this, aSize );
  s = aSize.Y;
  CoreRectView__OnSetBounds( &_this->Frame, EwNewRect( 0, 0, s, s ));
  CoreRectView__OnSetBounds( &_this->Image, _this->Frame.Super1.Bounds );
  CoreRectView__OnSetBounds( &_this->CaptionText, EwNewRect( s + 10, 0, aSize.X, 
  aSize.Y ));
}

/* The method UpdateViewState() is invoked automatically after the state of the 
   component has been changed. This method can be overridden and filled with logic 
   to ensure the visual aspect of the component does reflect its current state. 
   For example, the 'enabled' state of the component can affect its colors (disabled 
   components may appear pale). In this case the logic of the method should modify 
   the respective color properties accordingly to the current 'enabled' state. 
   The current state of the component is passed as a set in the parameter aState. 
   It reflects the very basic component state like its visibility or the ability 
   to react to user inputs. Beside this common state, the method can also involve 
   any other variables used in the component as long as they reflect its current 
   state. For example, the toggle switch component can take in account its toggle 
   state 'on' or 'off' and change accordingly the location of the slider, etc.
   Usually, this method will be invoked automatically by the framework. Optionally 
   you can request its invocation by using the method @InvalidateViewState(). */
void FlatIconButton_UpdateViewState( FlatIconButton _this, XSet aState )
{
  if ((( aState & CoreViewStateEnabled ) == CoreViewStateEnabled ))
  {
    ViewsText_OnSetColor( &_this->CaptionText, _this->TextColor );

    if ( _this->TouchHandler.Down && _this->TouchHandler.Inside )
      ViewsFrame_OnSetColor( &_this->Frame, _this->ItemColorActive );
    else
      ViewsFrame_OnSetColor( &_this->Frame, _this->ItemColor );
  }
  else
  {
    ViewsFrame_OnSetColor( &_this->Frame, FlatColorOfDisabled );
    ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfDisabled );
  }
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatIconButton_enterLeaveSlot( FlatIconButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatIconButton_pressReleaseSlot( FlatIconButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  if ( !_this->TouchHandler.Down && _this->TouchHandler.Inside )
  {
    EwIdleSignal( _this->OnAction, ((XObject)_this ));
  }
}

/* 'C' function for method : 'Flat::IconButton.OnSetIconIndex()' */
void FlatIconButton_OnSetIconIndex( FlatIconButton _this, XInt32 value )
{
  _this->IconIndex = value;
  ViewsImage_OnSetFrameNumber( &_this->Image, value );
}

/* Variants derived from the class : 'Flat::IconButton' */
EW_DEFINE_CLASS_VARIANTS( FlatIconButton )
EW_END_OF_CLASS_VARIANTS( FlatIconButton )

/* Virtual Method Table (VMT) for the class : 'Flat::IconButton' */
EW_DEFINE_CLASS( FlatIconButton, CoreGroup, "Flat::IconButton" )
  CoreRectView_initLayoutContext,
  CoreView_GetRoot,
  CoreGroup_Draw,
  CoreView_HandleEvent,
  CoreGroup_CursorHitTest,
  CoreRectView_ArrangeView,
  CoreRectView_MoveView,
  CoreRectView_GetExtent,
  CoreGroup_ChangeViewState,
  CoreGroup_OnSetBounds,
  CoreGroup_OnSetFocus,
  CoreGroup_OnSetBuffered,
  CoreGroup_OnSetOpacity,
  CoreGroup_DispatchEvent,
  CoreGroup_BroadcastEvent,
  FlatIconButton_UpdateLayout,
  FlatIconButton_UpdateViewState,
  CoreGroup_InvalidateArea,
  CoreGroup_FindSiblingView,
  CoreGroup_RestackBehind,
  CoreGroup_RestackTop,
  CoreGroup_Restack,
  CoreGroup_Remove,
  CoreGroup_Add,
EW_END_OF_CLASS( FlatIconButton )

/* Bitmap resource - used in demo applications as icons for buttons and indicators. */
EW_DEFINE_BITMAP_RES( FlatFlatDemoIcons )
  EW_BITMAP_FRAMES( FlatFlatDemoIcons, Default, EW_DRIVER_VARIANT_ALPHA8, 24, 24, 0 )
    EW_BITMAP_FRAME( 11, 3, 2, 9, 0x00000000, 0x00000000 ),
    EW_BITMAP_FRAME( 9, 9, 2, 12, 0x000000E4, 0x00000000 ),
    EW_BITMAP_FRAME( 7, 7, 1, 6, 0x000001E4, 0x00000000 ),
    EW_BITMAP_FRAME( 7, 11, 4, 10, 0x00000300, 0x00000000 ),
    EW_BITMAP_FRAME( 5, 16, 5, 6, 0x000003B4, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 9, 9, 1, 0x00000488, 0x00000000 ),
    EW_BITMAP_FRAME( 2, 20, 20, 1, 0x0000057C, 0x00000000 ),
    EW_BITMAP_FRAME( 2, 5, 20, 1, 0x00000664, 0x00000000 ),
    EW_BITMAP_FRAME( 2, 20, 20, 2, 0x00000730, 0x00000000 ),
    EW_BITMAP_FRAME( 15, 3, 6, 6, 0x00000800, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 8, 4, 8, 0x000008A8, 0x00000000 ),
    EW_BITMAP_FRAME( 12, 7, 3, 11, 0x00000938, 0x00000000 ),
    EW_BITMAP_FRAME( 7, 8, 9, 4, 0x000009C8, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 12, 9, 4, 0x00000A70, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 4, 8, 3, 0x00000B10, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 12, 4, 5, 0x00000C10, 0x00000000 ),
    EW_BITMAP_FRAME( 1, 13, 6, 1, 0x00000CD4, 0x00000000 ),
    EW_BITMAP_FRAME( 12, 10, 3, 5, 0x00000E04, 0x00000000 ),
    EW_BITMAP_FRAME( 5, 16, 1, 3, 0x00000EE8, 0x00000000 ),
    EW_BITMAP_FRAME( 9, 13, 2, 3, 0x00000F3C, 0x00000000 )

  EW_BITMAP_PIXEL_R180( FlatFlatDemoIcons, Default )            /* ratio 36.11 % */
    0x1C080100, 0xC1A0B048, 0x2A130883, 0x4B412004, 0x1A9C55A6, 0x90B01921, 0xFF7999A0,
    0x770C6A32, 0x5B86E2A5, 0xCC6A431A, 0x83E11144, 0x4DF9196A, 0xC60212A2, 0x2D1A6318,
    0x7194FC25, 0x6F830D9B, 0x725C65EC, 0x7FBF0550, 0xEC203CED, 0xC1DB1192, 0x28DF1943,
    0x8791961C, 0x24FC9841, 0x11934C28, 0xFF70C18F, 0x91B42DCE, 0x73C19211, 0x4C11C8FF,
    0x410A87B0, 0x1932FFAE, 0xDF8FF664, 0x32728183, 0xF4481892, 0x96831F9F, 0x88199A32,
    0x81539FF4, 0xCC1A9AB4, 0x549CF191, 0x2EFF7D00, 0x64AE18C9, 0x931955C1, 0xF82C4055,
    0x5A8CBC07, 0xFB004A10, 0xBF65174F, 0x5BFE7418, 0xB78490A5, 0xF33ED27F, 0x9573F0F0,
    0xC0128581, 0x800C4D08, 0x058A9447, 0x4836E369, 0xDD8E6328, 0x4B9C7906, 0xF1B80096,
    0x02030AE3, 0x1C080100, 0x15C12008, 0x2A082A33, 0xCEB0A85C, 0x18E77FBF, 0x43C0044A,
    0x9C000611, 0x00ABE61E, 0x031ECB40, 0xFBDA2913, 0xC3D68DE7, 0x3D5CE487, 0xD272155C,
    0xF93097C9, 0x21889849, 0x729BCC1C, 0x75B80242, 0x199156F2, 0x9C9DE675, 0x9BC13121,
    0x11632752, 0x1B1271CC, 0xC10B1824, 0xD0A1FCC0, 0x0B6C4BD8, 0xA13CC0D3, 0x70C9E550,
    0x7B9C4F0B, 0x83E08759, 0x150F2F76, 0x5E6FF9B5, 0xBC0F8111, 0x33A333FE, 0xB767CBD6,
    0x3A24BDD4, 0x9BCDCC71, 0x244A40D5, 0xBC2617F4, 0xA5080307, 0x55006859, 0xAA3C3ABE,
    0x4393AC9D, 0x9F2EBB5A, 0x62BBDAA4, 0xC14281E9, 0x1BC1FF84, 0x4DD32068, 0x185B1236,
    0xA076A663, 0xACB17FD6, 0x93A1CBFE, 0xA587A1E0, 0xA7FE4A04, 0x34C0B6A5, 0x2AF5FEFC,
    0x5BEDAE48, 0xA0A800DF, 0x048FFB44, 0x61A68172, 0x80FE7DD2, 0xED7F8CCD, 0xF0198C4E,
    0xAA15209C, 0x00020303, 0x1C080100, 0x8CC07038, 0x2A082183, 0xCC10485C, 0x0CF987BF,
    0xF0589C30, 0x14120CE0, 0xF7801A29, 0x8CA5A1F0, 0x19989713, 0x48230669, 0x318C3C85,
    0xD56CC95B, 0x21049380, 0x0338EC75, 0xFF6AC0E6, 0xF6C48D44, 0x004D8F0F, 0xDBF1FE42,
    0xBFCE5020, 0x32292F70, 0x806BA690, 0x06AE7FAE, 0xAFF7B056, 0x84738C0B, 0x77E0C218,
    0x9AC3C72E, 0x7BFD2703, 0x44EC64B6, 0xFD503918, 0x03D0A5D3, 0xAE457FBF, 0x2128A030,
    0xA285DC1F, 0xB89A95FE, 0x22B0DCE1, 0x2525E0FF, 0x8C28E4E8, 0xC2149F76, 0xCA8E77F8,
    0x6D0C6C3F, 0x38076BFC, 0x2116C2D9, 0xAB9BDB24, 0x19D98D30, 0x380E2618, 0x4123EFF7,
    0x65FEE409, 0x9B61E89D, 0x1AFFCF31, 0x22781025, 0xF322E059, 0x910C3132, 0xBC855E0F,
    0x7B799942, 0x4388AF68, 0x54730CB6, 0x0E418000, 0x84C98EC7, 0x2121B448, 0xC97B07A3,
    0x73348818, 0x58BCC722, 0x7BE46D30, 0xBCC5A006, 0x4AB60061, 0x01E1B9B3, 0xAAFF1E00,
    0xFB310C09, 0xCB1540A7, 0x00040633, 0x1C080100, 0xC1A0B048, 0x22130883, 0x8CC4801C,
    0x431087C3, 0xEC001C28, 0x188BC59F, 0x92EBF1FF, 0x8FC648B0, 0xD425B716, 0xAF4911F2,
    0x7E46F08C, 0xA50A516C, 0x3CF98C4A, 0x90897234, 0x0052C624, 0x683CD036, 0x2BB9E2F3,
    0xEC1A7699, 0x4A62F209, 0x668A4884, 0xC07096F4, 0xB51AA549, 0x29922C4C, 0x90881ED3,
    0xA891F932, 0x34C5A050, 0xB3FDA504, 0xD7E075D4, 0x7ACB63B0, 0xA07607FD, 0xE16AB258,
    0x9043F3FD, 0x6A40BFDC, 0xD7FAD001, 0x8B1FAB8E, 0xE0F2F248, 0x2DDE6FF7, 0xE587166C,
    0xEE454815, 0x161B6045, 0x4750DC0B, 0x922BA4D4, 0x183E6B33, 0x00000010, 0x1C080100,
    0x41A0B048, 0x31560F83, 0x21B0C85B, 0x0E3961C3, 0xB147F982, 0x16753FE2, 0x983AEA2B,
    0x783FE326, 0x1C79741E, 0x1823D1C6, 0x65E01B00, 0xA3B06924, 0x04037CC5, 0xD0795AAE,
    0x002BC78C, 0x08B4A818, 0x8F1220EC, 0x145A5D3D, 0x39013075, 0x6592218F, 0xA0F117E4,
    0x8115A38D, 0x91637819, 0x03839D5F, 0xC4C9B01F, 0x07800795, 0x99F9335C, 0xD9ACB581,
    0x3CA800B3, 0x00C878BB, 0xF28782DA, 0x6843327D, 0x6F06325B, 0x67C8F205, 0x69032063,
    0x0002F287, 0x8FE0A8D6, 0xE6F2127C, 0xC13052A3, 0x196F25BF, 0x8AE73BFC, 0x120A9B2B,
    0xDBC969FE, 0x4CB6E32E, 0x45E484FF, 0x8263F1E5, 0x79F230BC, 0x401823C4, 0x5115D517,
    0xA2DD6CC5, 0x8C55B311, 0x080EEB5B, 0x1C080100, 0xC1A0B048, 0x2A130883, 0x2090C85C,
    0x1A1E1E03, 0xEDB07C1E, 0x12273E5F, 0xC7F95E0B, 0x824656F1, 0xE3FE3836, 0x19A091F4,
    0x7C1E9F66, 0x914D810C, 0xB0458201, 0x830869C9, 0x54633FDF, 0xC4510848, 0x13C2D271,
    0x13D8B502, 0x02557229, 0x1A541800, 0xD50FF394, 0x081E0000, 0x2D279AE9, 0x4B811213,
    0xC83B55F2, 0x10AEA863, 0xC9D40D07, 0xC1120FF7, 0x00187B19, 0x9FEF31E0, 0x063F49BD,
    0xAD53A86E, 0x0034D627, 0x264BFD50, 0x5B890001, 0xBB930344, 0x3FCF1022, 0xA8600F7E,
    0x222CF7FB, 0x16961F80, 0x4635BC8B, 0xFF9E00ED, 0x413C08F6, 0x979E2DCE, 0x1D1C5503,
    0x471A43C8, 0xF4430436, 0x914E48E2, 0xD818828D, 0x8E77FEAC, 0x9D2BC1B0, 0xC6638645,
    0x483F288C, 0x580E0F4A, 0xE05E0A22, 0x54D2BD7F, 0x4660C8C8, 0x4B60198E, 0xFD4E9F4A,
    0x00004060, 0x1C080100, 0xC1A0B048, 0x12130883, 0xA1A991B4, 0x1F1087C3, 0xC0013A5A,
    0x187FBCC0, 0xB8DC6A33, 0x07801AB1, 0x98FDE6FC, 0xC9A4B241, 0xF09C3393, 0xD2D0276B,
    0x0D0A43BF, 0x4787FA96, 0xF97684A0, 0x10C41448, 0x82825A4E, 0x336DFE3C, 0x3FCD3030,
    0xFC5B055A, 0xE080F7CB, 0x96FF6780, 0x752A8538, 0x46828AA1, 0x4A150291, 0xAB8DA074,
    0x3CE66F03, 0xC0E6B338, 0xBA089C61, 0x44307984, 0x061B79BE, 0x10364BB6, 0x0C723F06,
    0x57FA1E12, 0x7F86E04A, 0x1C0806F3, 0x428B4FF6, 0xF1FEE406, 0xA303F000, 0xFE5A0007,
    0xF9098B19, 0x180033DF, 0x804B19B0, 0x00653158, 0xDC0F0D84, 0x5DB3F7DB, 0xBC4902BC,
    0xC019FB8D, 0x68B1815A, 0x9389B6B6, 0xB3A1D044, 0x45BD1A05, 0x01C0B735, 0xF2C630CC,
    0x2343103D, 0x2B897942, 0x00101E5F, 0x1C080100, 0xC1A0B048, 0x12130883, 0x8CC5401C,
    0x231087C3, 0x10319C3E, 0x188BBFCF, 0xC8CC6A33, 0x4B40842F, 0x1A657AFF, 0xC9A4B249,
    0xF1FEE14C, 0x8B4FF8F8, 0x54B48342, 0x92F974B2, 0x0095CC60, 0x282CD240, 0x99CDE101,
    0x23F0F106, 0xCCA60367, 0x1A092D9C, 0x1ED184F8, 0x913F8295, 0xEC0094EE, 0x8725BCDF,
    0x79B1E22E, 0x1240A754, 0x6B85FEDB, 0xBE4C1021, 0x0812A57F, 0x0915EA8C, 0x30C37FBC,
    0xEED1FC10, 0x6CB9325F, 0xF7E1B25B, 0x830193EF, 0xC8B6C560, 0x426B4D2B, 0x75BD56AA,
    0xE5F4E8BD, 0x71184980, 0xA3070C82, 0x8BBDC0A6, 0xFCDC4939, 0xACCE30B0, 0x246F431B,
    0xA101800B, 0xEE4DA893, 0xB5BACCB4, 0x05B0D7EB, 0x00000406, 0x1C080100, 0xC1A0B048,
    0x28662D82, 0x21B0C85C, 0x4B020343, 0xB1489BFD, 0xE18B45A2, 0xC8BA6620, 0x01B56391,
    0x1C8A4307, 0x8F013229, 0x62452413, 0x51B13708, 0x806F01C8, 0x5060AA41, 0x070DC551,
    0x663450E5, 0x19C55450, 0xC4558107, 0xC50B5050, 0x567B2064, 0xA071049C, 0xF0DB7FAE,
    0xCA890830, 0x00A230E2, 0x22444C8A, 0x34C4C792, 0x3C4D0203, 0xB3C1E3C7, 0x0E44C07F,
    0xE06C9B38, 0x6D167812, 0x8FFA3488, 0xD210C107, 0xC9090A2A, 0x52BFDC80, 0x04527506,
    0xBFD0F213, 0xAA0B3879, 0x5E7137C8, 0xE61B8388, 0xF21423FD, 0x7255AB87, 0x35E87A0B,
    0x94D4DC91, 0x04ED6F05, 0x636FD06D, 0x4E2505D2, 0xA09A85A4, 0x56CF5284, 0xFB4D6D61,
    0x00004060, 0x1C080100, 0xC1A0B048, 0x16130883, 0x61A993C4, 0x14034B43, 0xAFF70C1A,
    0x120F45A2, 0x58B4520B, 0x198CC971, 0xD8023209, 0x28A2D1C8, 0x4A2D2491, 0x186FF6C3,
    0x3CFF92CA, 0x722968F0, 0x330ACC1B, 0x7094125D, 0x9FC7C490, 0x1CE4002D, 0xBFDF2878,
    0x0E443067, 0x63875005, 0x67190638, 0x2458B4C2, 0x4E8B54EA, 0xE364EAAC, 0x10C0EA14,
    0x10AA3F3F, 0x2120534A, 0x12C7477B, 0x67125964, 0x355E81D9, 0x56F994C2, 0x2B8ACA61,
    0xCBBC26EB, 0xBE4664F1, 0x7818671E, 0x48A31259, 0x29988D81, 0xF06B4C56, 0x2190C7E1,
    0x00000407, 0x1C080100, 0xC1A0B048, 0x1E130883, 0xA1A66274, 0x14032BC3, 0xAFF2D416,
    0xA57FC5A2, 0x73C41624, 0x8D21E2D1, 0xAC753304, 0x40A40698, 0xF246BD03, 0xC0126273,
    0xED236903, 0x81B968D9, 0x247548DC, 0x3780B65A, 0x96855B72, 0x4C8DF242, 0x99A5A096,
    0x465B1891, 0xE4CB7A41, 0x7ED891CE, 0x9239AC6A, 0x2F9006DC, 0x016BC247, 0x91B18132,
    0x1C8084F9, 0x16A54B10, 0x96909693, 0xE471C904, 0x47149047, 0x92088AC6, 0x5D86C3A1,
    0xCBDCB40C, 0x00406257, 0x1C080100, 0xC1A0B048, 0x2A130883, 0x8BA06824, 0x9D108799,
    0x20381C2C, 0x188BBFD6, 0x289969FF, 0x8C465150, 0x90023878, 0x25A2F1F3, 0xFE4A5A91,
    0xA380358B, 0x7B257C90, 0x02D8E025, 0x0F69495E, 0x57206E38, 0x8E06DC92, 0x8495B015,
    0x2DE442D7, 0x02445195, 0x8CD2A4E0, 0x4ABD0352, 0xF4A213E6, 0x45A1B6C1, 0xD7509245,
    0x1B48A7F3, 0x14E66EF6, 0x4C5F84E9, 0xA8D34A03, 0xC014A52C, 0xDA879521, 0x51B95296,
    0x103001A4, 0xCBDDB623, 0x00404017, 0x1C080100, 0xC1A0B048, 0x2A130883, 0xE1B0C85C,
    0x1C841541, 0x8781FC0A, 0xA27F8F20, 0x92BC340C, 0x7FC594AF, 0x58317AFF, 0xC7A40788,
    0x3E411781, 0xC07080C3, 0x4EFF9024, 0x32094C0A, 0x0983091C, 0xF98CC168, 0x1B3B6771,
    0xDB243104, 0xD12513C9, 0x0896F67F, 0xA8EDE124, 0xF82A004C, 0x26F7E51D, 0xFFA3BB4A,
    0x83DC1514, 0x64BFEBB5, 0xC9820C12, 0xABA775E7, 0xCC910804, 0xD26FFB2B, 0xCE368500,
    0x90D39579, 0x547B51E9, 0xE6606224, 0x814487F3, 0xF481740C, 0x40AFF376, 0xB1689603,
    0xB1B8CC34, 0x030AC7E3, 0x00000002, 0x1C080100, 0xC1A0B048, 0x2A130883, 0xA1B0C85C,
    0x68180043, 0x90F03259, 0xFF708920, 0x5062E9FE, 0x768FC011, 0xC3263319, 0xBD8A90F0,
    0x91B72190, 0xA5072868, 0x143373CB, 0xB2E4980E, 0x0822BCE6, 0xC9AAB813, 0x83181F33,
    0x1CF19212, 0x41508FFA, 0x2DDB359A, 0x278FC361, 0x6AA5820C, 0xE4B814AA, 0x501E4BA4,
    0x40AB265D, 0x944806D0, 0x0D460758, 0xC1812AE9, 0x66B3608B, 0x2100349C, 0xC3216786,
    0x672B1C0A, 0x195E8321, 0x652802E5, 0x03434A8F, 0xD1EEF551, 0x8A90F0CB, 0x2B13888E,
    0x20303C5E, 0x04080100, 0x998AE090, 0x1E130883, 0xA060C2BC, 0xFEE704C3, 0x91489C49,
    0x0E04BAA2, 0xD7F8B605, 0x8F8CC6CB, 0xD0DA4320, 0x4645AFF5, 0x9CD31B00, 0xE4A5D93C,
    0x052B94C9, 0xC5A81062, 0x63984665, 0x34CCE932, 0x7F98C309, 0x34D406D2, 0xCA9FF379,
    0xD9DB1452, 0x9ECFF480, 0x8D2FA181, 0x063064C6, 0x45A80006, 0x881CC655, 0x244C21D5,
    0x9211333B, 0xADDE65A0, 0x4ABD36AB, 0x5F913925, 0xF8FF4B0E, 0x103AE831, 0x840ACAE6,
    0xAA25A084, 0x10CAEB56, 0x5546F603, 0x062C3399, 0x09B0FF36, 0xEA575B4D, 0x21906624,
    0x6FF468B7, 0x1ABA025E, 0x482CAEA5, 0x37D17042, 0xFC844902, 0x4FE04278, 0xFC5503BE,
    0x5086F6DB, 0xD88489C5, 0xE2A7FB60, 0xAF5B80E4, 0x15D3FF73, 0x330CEFF8, 0x08CCD3BA,
    0x80E075B1, 0xE9A49943, 0xD32F34FA, 0x57C50321, 0xABD86AD2, 0x7295F461, 0x7619ED44,
    0x3192EB7D, 0x040663D6, 0x1C080100, 0xC1A0B048, 0x9A0B0883, 0xE1B09361, 0x0EFF5BC0,
    0xA9C83439, 0xFC2D03D7, 0x489C45FE, 0x6C3FCD30, 0xE46E3519, 0xC88E4008, 0x7084FF93,
    0x5FF28934, 0x26093029, 0x6A5944B2, 0x1A96CAC0, 0xF8983D93, 0x7FC7E706, 0x09BE1C8D,
    0x30E5AF37, 0x34484506, 0x5B636A1C, 0x79478D48, 0x0D81B386, 0x507B169E, 0x51B54819,
    0x3D9C986D, 0x1545FE42, 0xB5466E1A, 0x189CD54F, 0xA1B63558, 0xAA2A6F16, 0x61B73AE9,
    0xC086DB6D, 0xD6602496, 0xB60307E8, 0x928A395A, 0xDD8F6128, 0xC0311CC0, 0x006003C3,
    0x09029260, 0xEBA70B61, 0x1CC43019, 0x30606325, 0xC84D8B46, 0x8061AA87, 0x68D1506C,
    0x061DA8D2, 0x00000004, 0x1C080100, 0xC1A0B048, 0x2A130883, 0x2090C85C, 0xDEEA7215,
    0x86083434, 0xFF70BB5F, 0x081C4D08, 0x12379FE6, 0x6BFD8C12, 0xBFCCD1B4, 0x3E041E70,
    0x532FF648, 0x53273643, 0xE4504802, 0x0B4FC881, 0x219CC4B5, 0x7E1E0004, 0xFB0C1812,
    0x86E0C937, 0xCE2A3319, 0xDB60013B, 0xFEC0002D, 0xC2A00151, 0x4843BFDB, 0xF7E03253,
    0x5A576BAF, 0x4B6DFE42, 0x259F2F60, 0x76BD5C1E, 0x842000AD, 0xBAFF720D, 0xABD7E1A4,
    0x967E13AC, 0x36C205B0, 0x7CBC07E3, 0xD40C4845, 0x03C00909, 0xDDFE81AE, 0x1FE3F61A,
    0x74009736, 0xCC381D16, 0xC98103DE, 0x8AE849C8, 0x81DC6C87, 0x1819E6CC, 0xC0D80F08,
    0xB4004828, 0xEA0397FB, 0x0F0310BF, 0xF02A63FD, 0xC6832B9F, 0xE9F00DDA, 0x7F9EE08D,
    0x7BB6063C, 0x27133066, 0x10360681, 0xB04FF4B4, 0x66FF5740, 0xC5119C18, 0xE47683E0,
    0x47E0DA08, 0x01C0B82E, 0x6511F26F, 0xB484F030, 0x760A697F, 0x956EAF11, 0x7B8E752B,
    0xEBA7B3FD, 0x0791D593, 0x6912044F, 0xD19C992F, 0xDF02F454, 0xB0FC8D36, 0x260881D1,
    0x004050A8, 0x1C080100, 0xC1A0B048, 0x1A070883, 0x40678480, 0xE40087C2, 0x03C7FBFC,
    0xE704C222, 0x6063B5FE, 0x899BE0F1, 0x341A3A7E, 0xBCDFEE40, 0x5C070707, 0x598CF5E9,
    0x31039420, 0x08789ADC, 0x3889A4E1, 0x4810CDC3, 0x7244DD45, 0xC4CE1012, 0x1B1D5139,
    0x6D6F3869, 0x12C21848, 0x9E330A98, 0x46693511, 0xED0C40A4, 0x3AB13A88, 0x5A510AF0,
    0xC54A075C, 0x802C2429, 0x899F4425, 0x206270AC, 0x4E5AA230, 0x006198D8, 0xFF7C8B61,
    0x31B408D2, 0x3DBAA715, 0xB07A0B0E, 0x80031207, 0x0E717D55, 0x0A904983, 0xC9447851,
    0x28A331ED, 0x815A3FE3, 0x49F12209, 0x1C975CF4, 0xD8003C66, 0x8B626D50, 0x64DE0F83,
    0xCA2965BA, 0xE7132700, 0xC1200091, 0xAE914352, 0xEB348670, 0xB3146707, 0x4A281200,
    0xC5B806F6, 0x00000080, 0x1C080100, 0xC1A0B048, 0x2A130883, 0xA1B0C85C, 0x410487C3,
    0x4707FB3C, 0x168A44A0, 0xF83C5627, 0x81479FE7, 0x08023F1D, 0x90210FF9, 0x095EFF77,
    0x2572993C, 0x4108954A, 0x73388900, 0x38884CA0, 0xC9DCEA73, 0x9FCFA7B3, 0x1D0A8340,
    0xCEE8B44A, 0x00000080, 0x1C080100, 0x4120B048, 0x1864B215, 0x44D0B85C, 0x190219AD,
    0xA2789C30, 0x2F810D56, 0x485C4D0C, 0x810D9682, 0xD8795434, 0xACC47058, 0xB065021B,
    0x2092410A, 0x01285A08, 0xA22560C0, 0xB30EC0E5, 0xC950022E, 0x0A8026D2, 0xD82DCECF,
    0x4F848AC9, 0xFD901400, 0xCC0C27FB, 0x2D3EA329, 0xF4BA5B1C, 0x2E8587DA, 0x209CA410,
    0xAA314350, 0x60699AFF, 0x09D8C5E8, 0x081CBF37, 0xDFD4B49C, 0x261C673F, 0xEF37202A,
    0x35819F5F, 0xD6852DDE, 0x738DE361, 0x18595D4B, 0xB4DC63E8, 0x9CCD1391, 0x5F8FF7B3,
    0x062C613C, 0xF240C06A, 0xF0160A04, 0x2148713C, 0x544128E1, 0xA8160853, 0x05C559E0,
    0x589C0F00, 0xF3C484A8, 0xCA8A02C0, 0xE052A3F1, 0x4E005428, 0x63939296, 0x589D8813,
    0x785C061F, 0x0BDDAA15, 0xC4473605, 0x00C8A7FB, 0x16000301, 0xA299F06D, 0x03B1ADD4,
    0x39B6D40F, 0xD7050274, 0x00020302, 0x00000000

  EW_BITMAPS_TABLE( FlatFlatDemoIcons )
    EW_BITMAP( FlatFlatDemoIcons, Default )
EW_END_OF_BITMAP_RES( FlatFlatDemoIcons )

/* Table with links to derived variants of the bitmap resource : 'Flat::FlatDemoIcons' */
EW_RES_WITHOUT_VARIANTS( FlatFlatDemoIcons )

/* Bitmap resources used for the different widgets. If you want to change the bitmaps 
   within your project, just create a variant of these bitmap resources and define 
   the attributes of the bitmap resources according your design ideas. */
EW_DEFINE_BITMAP_RES( FlatFlatKnobs )
  EW_BITMAP_FRAMES( FlatFlatKnobs, Default, EW_DRIVER_VARIANT_ALPHA8, 20, 20, 0 )
    EW_BITMAP_FRAME( 1, 1, 18, 18, 0x00000000, 0x00000000 ),
    EW_BITMAP_FRAME( 6, 12, 4, 2, 0x00000034, 0x00000000 ),
    EW_BITMAP_FRAME( 4, 4, 12, 12, 0x000000A4, 0x00000000 ),
    EW_BITMAP_FRAME( 6, 6, 8, 8, 0x000000F4, 0x00000000 ),
    EW_BITMAP_FRAME( 8, 8, 4, 4, 0x0000015C, 0x00000000 )

  EW_BITMAP_PIXEL_R180( FlatFlatKnobs, Default )                /* ratio 25.00 % */
    0xFB9C9100, 0xC1A0B047, 0x21CEFF83, 0xE1B08721, 0x230E8641, 0xB1489C4A, 0x188BC5A2,
    0xC8DC6A33, 0x8FC7A3B1, 0x1C7A4320, 0x8FDCF198, 0xFD931864, 0x00000808, 0x1C080100,
    0xC1A0B048, 0x2A130883, 0x4130585C, 0x19058605, 0x02A73B18, 0xFF8940A2, 0xC88451FE,
    0x8CC65860, 0xEC2A2AEA, 0xBAA3F1F8, 0x66490916, 0x24CE77CC, 0xFF2A834A, 0x824273E5,
    0x306F47DC, 0x2274AE3D, 0x7FCD8430, 0x94EA2260, 0x886073C9, 0xC6094167, 0xD811099C,
    0x3910A647, 0xF028B4ED, 0x5425BE53, 0xCAC86E07, 0x82D7ABB5, 0x00000101, 0x1C080100,
    0xC1A0B048, 0x2A130883, 0xDCE48844, 0x231087BF, 0x9062439E, 0x108BC45C, 0xC8C419C9,
    0x8EC6DFF1, 0x84823F17, 0xC7A47228, 0xA2492682, 0x2092794C, 0x5F0396CB, 0x13391C96,
    0x268741A4, 0x91FC19CF, 0x1FB2646C, 0x1D0A830B, 0x0020342A, 0x1C080100, 0xC1A0B048,
    0x2A130883, 0xA110C85C, 0xFEC33781, 0xC6F603FD, 0xD20DC2C0, 0x27FC6A24, 0x0342436D,
    0x946A3719, 0x1BE0F166, 0x20DF2291, 0xA3728634, 0x5AF38431, 0x3087CC6A, 0x34894C9F,
    0x39BC460F, 0x9B9B210C, 0x0C38D8FF, 0xC2649289, 0x3E50CF0D, 0x00D0A8F3, 0xF2F9601B,
    0xB2536301, 0x58ABD5A1, 0x080C26B3, 0x1C080100, 0xC1A0B048, 0x3E0D0883, 0x06CE45D0,
    0x74DB1842, 0xEC08203D, 0x0E783FDF, 0x6750C20B, 0x70C11871, 0x20CE2F16, 0x485DA308,
    0x705B0472, 0x246F08B4, 0xD5219280, 0x32A828B5, 0x2619CB64, 0x583CCA2D, 0x9CBB62D3,
    0x48C1D4FF, 0xD06433D8, 0xA80109A1, 0x6913E958, 0xDAFFA2D2, 0x34CA24B9, 0x31AA54A4,
    0x58355E99, 0xADD16654, 0xFD22BB03, 0x3900153A, 0x14014EAB, 0x58D03945, 0x2D4B8353,
    0x00F822DE, 0x04B4B858, 0xC5A36055, 0xBFDFA920, 0x00020309, 0x00000000

  EW_BITMAPS_TABLE( FlatFlatKnobs )
    EW_BITMAP( FlatFlatKnobs, Default )
EW_END_OF_BITMAP_RES( FlatFlatKnobs )

/* Table with links to derived variants of the bitmap resource : 'Flat::FlatKnobs' */
EW_RES_WITHOUT_VARIANTS( FlatFlatKnobs )

/* Initializer for the class 'Flat::CheckBox' */
void FlatCheckBox__Init( FlatCheckBox _this, XObject aLink, XHandle aArg )
{
  /* At first initialize the super class ... */
  CoreGroup__Init( &_this->_Super, aLink, aArg );

  /* ... then construct all embedded objects */
  CoreSimpleTouchHandler__Init( &_this->TouchHandler, &_this->_XObject, 0 );
  ViewsImage__Init( &_this->BoxImage, &_this->_XObject, 0 );
  ViewsImage__Init( &_this->CheckImage, &_this->_XObject, 0 );
  ViewsText__Init( &_this->CaptionText, &_this->_XObject, 0 );

  /* Setup the VMT pointer */
  _this->_VMT = EW_CLASS( FlatCheckBox );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0006 );
  CoreView_OnSetLayout((CoreView)&_this->TouchHandler, CoreLayoutAlignToBottom | 
  CoreLayoutAlignToLeft | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz 
  | CoreLayoutResizeVert );
  CoreQuadView__OnSetPoint4( &_this->TouchHandler, _Const0001 );
  CoreQuadView__OnSetPoint3( &_this->TouchHandler, _Const000B );
  CoreQuadView__OnSetPoint2( &_this->TouchHandler, _Const000C );
  CoreQuadView__OnSetPoint1( &_this->TouchHandler, _Const0004 );
  CoreRectView__OnSetBounds( &_this->BoxImage, _Const0009 );
  ViewsImage_OnSetColor( &_this->BoxImage, FlatColorOfTouch );
  ViewsImage_OnSetFrameNumber( &_this->BoxImage, 0 );
  CoreRectView__OnSetBounds( &_this->CheckImage, _Const0009 );
  ViewsImage_OnSetColor( &_this->CheckImage, FlatColorOfBackground );
  ViewsImage_OnSetFrameNumber( &_this->CheckImage, 1 );
  CoreRectView__OnSetBounds( &_this->CaptionText, _Const000D );
  ViewsText_OnSetAlignment( &_this->CaptionText, ViewsTextAlignmentAlignHorzLeft 
  | ViewsTextAlignmentAlignVertCenter );
  ViewsText_OnSetString( &_this->CaptionText, EwLoadString( &_Const000E ));
  ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfTouch );
  EwRetainString( &_this->Caption, EwLoadString( &_Const000E ));
  _this->IconColor = FlatColorOfBackground;
  _this->ItemColor = FlatColorOfTouch;
  _this->TextColor = FlatColorOfTouch;
  _this->ItemColorActive = FlatColorOfTheme;
  CoreGroup__Add( _this, ((CoreView)&_this->TouchHandler ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->BoxImage ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->CheckImage ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->CaptionText ), 0 );
  _this->TouchHandler.OnLeave = EwNewSlot( _this, FlatCheckBox_enterLeaveSlot );
  _this->TouchHandler.OnEnter = EwNewSlot( _this, FlatCheckBox_enterLeaveSlot );
  _this->TouchHandler.OnRelease = EwNewSlot( _this, FlatCheckBox_pressReleaseSlot 
  );
  _this->TouchHandler.OnPress = EwNewSlot( _this, FlatCheckBox_pressReleaseSlot 
  );
  ViewsImage_OnSetBitmap( &_this->BoxImage, EwLoadResource( &FlatFlatKnobs, ResourcesBitmap 
  ));
  ViewsImage_OnSetBitmap( &_this->CheckImage, EwLoadResource( &FlatFlatKnobs, ResourcesBitmap 
  ));
  ViewsText_OnSetFont( &_this->CaptionText, EwLoadResource( &FlatFontM, ResourcesFont 
  ));
}

/* Re-Initializer for the class 'Flat::CheckBox' */
void FlatCheckBox__ReInit( FlatCheckBox _this )
{
  /* At first re-initialize the super class ... */
  CoreGroup__ReInit( &_this->_Super );

  /* ... then re-construct all embedded objects */
  CoreSimpleTouchHandler__ReInit( &_this->TouchHandler );
  ViewsImage__ReInit( &_this->BoxImage );
  ViewsImage__ReInit( &_this->CheckImage );
  ViewsText__ReInit( &_this->CaptionText );
}

/* Finalizer method for the class 'Flat::CheckBox' */
void FlatCheckBox__Done( FlatCheckBox _this )
{
  /* Finalize this class */
  _this->_VMT = EW_CLASS( FlatCheckBox );

  /* Finalize all embedded objects */
  CoreSimpleTouchHandler__Done( &_this->TouchHandler );
  ViewsImage__Done( &_this->BoxImage );
  ViewsImage__Done( &_this->CheckImage );
  ViewsText__Done( &_this->CaptionText );

  /* Release all used strings */
  EwReleaseString( &_this->Caption );

  /* Don't forget to deinitialize the super class ... */
  CoreGroup__Done( &_this->_Super );
}

/* Garbage Collector method for the class 'Flat::CheckBox' */
void FlatCheckBox__Mark( FlatCheckBox _this )
{
  EwMarkSlot( _this->OnChange );
  EwMarkObject( &_this->TouchHandler );
  EwMarkObject( &_this->BoxImage );
  EwMarkObject( &_this->CheckImage );
  EwMarkObject( &_this->CaptionText );
  EwMarkRef( _this->Outlet );

  /* Give the super class a chance to mark its objects and references */
  CoreGroup__Mark( &_this->_Super );
}

/* The method UpdateLayout() is invoked automatically after the size of the component 
   has been changed. This method can be overridden and filled with logic to perform 
   a sophisticated arrangement calculation for one or more enclosed views. In this 
   case the parameter aSize can be used. It contains the current size of the component. 
   Usually, all enclosed views are arranged automatically accordingly to their @Layout 
   property. UpdateLayout() gives the derived components a chance to extend this 
   automatism by a user defined algorithm. */
void FlatCheckBox_UpdateLayout( FlatCheckBox _this, XPoint aSize )
{
  XInt32 s;

  CoreGroup_UpdateLayout((CoreGroup)_this, aSize );
  s = aSize.Y;
  CoreRectView__OnSetBounds( &_this->BoxImage, EwNewRect( 0, 0, s, s ));
  CoreRectView__OnSetBounds( &_this->CheckImage, EwNewRect( 0, 0, s, s ));
  CoreRectView__OnSetBounds( &_this->CaptionText, EwNewRect( s, 0, aSize.X, aSize.Y 
  ));
}

/* The method UpdateViewState() is invoked automatically after the state of the 
   component has been changed. This method can be overridden and filled with logic 
   to ensure the visual aspect of the component does reflect its current state. 
   For example, the 'enabled' state of the component can affect its colors (disabled 
   components may appear pale). In this case the logic of the method should modify 
   the respective color properties accordingly to the current 'enabled' state. 
   The current state of the component is passed as a set in the parameter aState. 
   It reflects the very basic component state like its visibility or the ability 
   to react to user inputs. Beside this common state, the method can also involve 
   any other variables used in the component as long as they reflect its current 
   state. For example, the toggle switch component can take in account its toggle 
   state 'on' or 'off' and change accordingly the location of the slider, etc.
   Usually, this method will be invoked automatically by the framework. Optionally 
   you can request its invocation by using the method @InvalidateViewState(). */
void FlatCheckBox_UpdateViewState( FlatCheckBox _this, XSet aState )
{
  ViewsImage_OnSetVisible( &_this->CheckImage, _this->Checked );

  if ((( aState & CoreViewStateEnabled ) == CoreViewStateEnabled ))
  {
    ViewsText_OnSetColor( &_this->CaptionText, _this->TextColor );

    if ( _this->TouchHandler.Down && _this->TouchHandler.Inside )
      ViewsImage_OnSetColor( &_this->BoxImage, _this->ItemColorActive );
    else
      ViewsImage_OnSetColor( &_this->BoxImage, _this->ItemColor );
  }
  else
  {
    ViewsImage_OnSetColor( &_this->BoxImage, FlatColorOfDisabled );
    ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfDisabled );
  }
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatCheckBox_enterLeaveSlot( FlatCheckBox _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatCheckBox_pressReleaseSlot( FlatCheckBox _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  if ( !_this->TouchHandler.Down && _this->TouchHandler.Inside )
  {
    FlatCheckBox_OnSetChecked( _this, (XBool)!_this->Checked );

    if ( _this->Outlet.Object != 0 )
      EwOnSetBool( _this->Outlet, _this->Checked );

    EwNotifyRefObservers( _this->Outlet, 0 );
    EwIdleSignal( _this->OnChange, ((XObject)_this ));
  }
}

/* 'C' function for method : 'Flat::CheckBox.OnSetCaption()' */
void FlatCheckBox_OnSetCaption( FlatCheckBox _this, XString value )
{
  EwRetainString( &_this->Caption, value );
  ViewsText_OnSetString( &_this->CaptionText, value );
}

/* 'C' function for method : 'Flat::CheckBox.OnSetChecked()' */
void FlatCheckBox_OnSetChecked( FlatCheckBox _this, XBool value )
{
  if ( _this->Checked == value )
    return;

  _this->Checked = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* Variants derived from the class : 'Flat::CheckBox' */
EW_DEFINE_CLASS_VARIANTS( FlatCheckBox )
EW_END_OF_CLASS_VARIANTS( FlatCheckBox )

/* Virtual Method Table (VMT) for the class : 'Flat::CheckBox' */
EW_DEFINE_CLASS( FlatCheckBox, CoreGroup, "Flat::CheckBox" )
  CoreRectView_initLayoutContext,
  CoreView_GetRoot,
  CoreGroup_Draw,
  CoreView_HandleEvent,
  CoreGroup_CursorHitTest,
  CoreRectView_ArrangeView,
  CoreRectView_MoveView,
  CoreRectView_GetExtent,
  CoreGroup_ChangeViewState,
  CoreGroup_OnSetBounds,
  CoreGroup_OnSetFocus,
  CoreGroup_OnSetBuffered,
  CoreGroup_OnSetOpacity,
  CoreGroup_DispatchEvent,
  CoreGroup_BroadcastEvent,
  FlatCheckBox_UpdateLayout,
  FlatCheckBox_UpdateViewState,
  CoreGroup_InvalidateArea,
  CoreGroup_FindSiblingView,
  CoreGroup_RestackBehind,
  CoreGroup_RestackTop,
  CoreGroup_Restack,
  CoreGroup_Remove,
  CoreGroup_Add,
EW_END_OF_CLASS( FlatCheckBox )

/* Initializer for the class 'Flat::RadioButton' */
void FlatRadioButton__Init( FlatRadioButton _this, XObject aLink, XHandle aArg )
{
  /* At first initialize the super class ... */
  CoreGroup__Init( &_this->_Super, aLink, aArg );

  /* ... then construct all embedded objects */
  CoreSimpleTouchHandler__Init( &_this->TouchHandler, &_this->_XObject, 0 );
  ViewsImage__Init( &_this->BoxImage, &_this->_XObject, 0 );
  ViewsImage__Init( &_this->RadioImage, &_this->_XObject, 0 );
  ViewsText__Init( &_this->CaptionText, &_this->_XObject, 0 );

  /* Setup the VMT pointer */
  _this->_VMT = EW_CLASS( FlatRadioButton );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0006 );
  CoreView_OnSetLayout((CoreView)&_this->TouchHandler, CoreLayoutAlignToBottom | 
  CoreLayoutAlignToLeft | CoreLayoutAlignToRight | CoreLayoutAlignToTop | CoreLayoutResizeHorz 
  | CoreLayoutResizeVert );
  CoreQuadView__OnSetPoint4( &_this->TouchHandler, _Const0001 );
  CoreQuadView__OnSetPoint3( &_this->TouchHandler, _Const000B );
  CoreQuadView__OnSetPoint2( &_this->TouchHandler, _Const000C );
  CoreQuadView__OnSetPoint1( &_this->TouchHandler, _Const0004 );
  CoreRectView__OnSetBounds( &_this->BoxImage, _Const000F );
  ViewsImage_OnSetColor( &_this->BoxImage, FlatColorOfTouch );
  ViewsImage_OnSetFrameNumber( &_this->BoxImage, 0 );
  CoreRectView__OnSetBounds( &_this->RadioImage, _Const000F );
  ViewsImage_OnSetColor( &_this->RadioImage, FlatColorOfBackground );
  ViewsImage_OnSetFrameNumber( &_this->RadioImage, 4 );
  CoreRectView__OnSetBounds( &_this->CaptionText, _Const000D );
  ViewsText_OnSetAlignment( &_this->CaptionText, ViewsTextAlignmentAlignHorzLeft 
  | ViewsTextAlignmentAlignVertCenter );
  ViewsText_OnSetString( &_this->CaptionText, EwLoadString( &_Const0010 ));
  ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfTouch );
  EwRetainString( &_this->Caption, EwLoadString( &_Const0010 ));
  _this->IconColor = FlatColorOfBackground;
  _this->ItemColor = FlatColorOfTouch;
  _this->TextColor = FlatColorOfTouch;
  _this->ItemColorActive = FlatColorOfTheme;
  CoreGroup__Add( _this, ((CoreView)&_this->TouchHandler ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->BoxImage ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->RadioImage ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->CaptionText ), 0 );
  _this->TouchHandler.OnLeave = EwNewSlot( _this, FlatRadioButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnEnter = EwNewSlot( _this, FlatRadioButton_enterLeaveSlot 
  );
  _this->TouchHandler.OnRelease = EwNewSlot( _this, FlatRadioButton_pressReleaseSlot 
  );
  _this->TouchHandler.OnPress = EwNewSlot( _this, FlatRadioButton_pressReleaseSlot 
  );
  ViewsImage_OnSetBitmap( &_this->BoxImage, EwLoadResource( &FlatFlatKnobs, ResourcesBitmap 
  ));
  ViewsImage_OnSetBitmap( &_this->RadioImage, EwLoadResource( &FlatFlatKnobs, ResourcesBitmap 
  ));
  ViewsText_OnSetFont( &_this->CaptionText, EwLoadResource( &FlatFontM, ResourcesFont 
  ));
}

/* Re-Initializer for the class 'Flat::RadioButton' */
void FlatRadioButton__ReInit( FlatRadioButton _this )
{
  /* At first re-initialize the super class ... */
  CoreGroup__ReInit( &_this->_Super );

  /* ... then re-construct all embedded objects */
  CoreSimpleTouchHandler__ReInit( &_this->TouchHandler );
  ViewsImage__ReInit( &_this->BoxImage );
  ViewsImage__ReInit( &_this->RadioImage );
  ViewsText__ReInit( &_this->CaptionText );
}

/* Finalizer method for the class 'Flat::RadioButton' */
void FlatRadioButton__Done( FlatRadioButton _this )
{
  /* Finalize this class */
  _this->_VMT = EW_CLASS( FlatRadioButton );

  /* Finalize all embedded objects */
  CoreSimpleTouchHandler__Done( &_this->TouchHandler );
  ViewsImage__Done( &_this->BoxImage );
  ViewsImage__Done( &_this->RadioImage );
  ViewsText__Done( &_this->CaptionText );

  /* Release all used strings */
  EwReleaseString( &_this->Caption );

  /* Don't forget to deinitialize the super class ... */
  CoreGroup__Done( &_this->_Super );
}

/* Garbage Collector method for the class 'Flat::RadioButton' */
void FlatRadioButton__Mark( FlatRadioButton _this )
{
  EwMarkSlot( _this->OnChange );
  EwMarkObject( &_this->TouchHandler );
  EwMarkObject( &_this->BoxImage );
  EwMarkObject( &_this->RadioImage );
  EwMarkObject( &_this->CaptionText );
  EwMarkRef( _this->Outlet );

  /* Give the super class a chance to mark its objects and references */
  CoreGroup__Mark( &_this->_Super );
}

/* The method UpdateLayout() is invoked automatically after the size of the component 
   has been changed. This method can be overridden and filled with logic to perform 
   a sophisticated arrangement calculation for one or more enclosed views. In this 
   case the parameter aSize can be used. It contains the current size of the component. 
   Usually, all enclosed views are arranged automatically accordingly to their @Layout 
   property. UpdateLayout() gives the derived components a chance to extend this 
   automatism by a user defined algorithm. */
void FlatRadioButton_UpdateLayout( FlatRadioButton _this, XPoint aSize )
{
  XInt32 s;

  CoreGroup_UpdateLayout((CoreGroup)_this, aSize );
  s = aSize.Y;
  CoreRectView__OnSetBounds( &_this->BoxImage, EwNewRect( 0, 0, s, s ));
  CoreRectView__OnSetBounds( &_this->RadioImage, EwNewRect( 0, 0, s, s ));
  CoreRectView__OnSetBounds( &_this->CaptionText, EwNewRect( s, 0, aSize.X, aSize.Y 
  ));
}

/* The method UpdateViewState() is invoked automatically after the state of the 
   component has been changed. This method can be overridden and filled with logic 
   to ensure the visual aspect of the component does reflect its current state. 
   For example, the 'enabled' state of the component can affect its colors (disabled 
   components may appear pale). In this case the logic of the method should modify 
   the respective color properties accordingly to the current 'enabled' state. 
   The current state of the component is passed as a set in the parameter aState. 
   It reflects the very basic component state like its visibility or the ability 
   to react to user inputs. Beside this common state, the method can also involve 
   any other variables used in the component as long as they reflect its current 
   state. For example, the toggle switch component can take in account its toggle 
   state 'on' or 'off' and change accordingly the location of the slider, etc.
   Usually, this method will be invoked automatically by the framework. Optionally 
   you can request its invocation by using the method @InvalidateViewState(). */
void FlatRadioButton_UpdateViewState( FlatRadioButton _this, XSet aState )
{
  ViewsImage_OnSetVisible( &_this->RadioImage, _this->Selected );

  if ((( aState & CoreViewStateEnabled ) == CoreViewStateEnabled ))
  {
    ViewsText_OnSetColor( &_this->CaptionText, _this->TextColor );

    if ( _this->TouchHandler.Down && _this->TouchHandler.Inside )
      ViewsImage_OnSetColor( &_this->BoxImage, _this->ItemColorActive );
    else
      ViewsImage_OnSetColor( &_this->BoxImage, _this->ItemColor );
  }
  else
  {
    ViewsImage_OnSetColor( &_this->BoxImage, FlatColorOfDisabled );
    ViewsText_OnSetColor( &_this->CaptionText, FlatColorOfDisabled );
  }
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatRadioButton_enterLeaveSlot( FlatRadioButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* This internal slot method is used to receive the corresponding signals form the 
   touch handler. */
void FlatRadioButton_pressReleaseSlot( FlatRadioButton _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  if ( !_this->TouchHandler.Down && _this->TouchHandler.Inside )
  {
    FlatRadioButton_OnSetSelected( _this, 1 );

    if ( _this->Outlet.Object != 0 )
      EwOnSetInt32( _this->Outlet, _this->OutletSelector );

    EwNotifyRefObservers( _this->Outlet, 0 );
    EwIdleSignal( _this->OnChange, ((XObject)_this ));
  }
}

/* 'C' function for method : 'Flat::RadioButton.OnSetCaption()' */
void FlatRadioButton_OnSetCaption( FlatRadioButton _this, XString value )
{
  EwRetainString( &_this->Caption, value );
  ViewsText_OnSetString( &_this->CaptionText, value );
}

/* 'C' function for method : 'Flat::RadioButton.OnSetSelected()' */
void FlatRadioButton_OnSetSelected( FlatRadioButton _this, XBool value )
{
  if ( _this->Selected == value )
    return;

  _this->Selected = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* Variants derived from the class : 'Flat::RadioButton' */
EW_DEFINE_CLASS_VARIANTS( FlatRadioButton )
EW_END_OF_CLASS_VARIANTS( FlatRadioButton )

/* Virtual Method Table (VMT) for the class : 'Flat::RadioButton' */
EW_DEFINE_CLASS( FlatRadioButton, CoreGroup, "Flat::RadioButton" )
  CoreRectView_initLayoutContext,
  CoreView_GetRoot,
  CoreGroup_Draw,
  CoreView_HandleEvent,
  CoreGroup_CursorHitTest,
  CoreRectView_ArrangeView,
  CoreRectView_MoveView,
  CoreRectView_GetExtent,
  CoreGroup_ChangeViewState,
  CoreGroup_OnSetBounds,
  CoreGroup_OnSetFocus,
  CoreGroup_OnSetBuffered,
  CoreGroup_OnSetOpacity,
  CoreGroup_DispatchEvent,
  CoreGroup_BroadcastEvent,
  FlatRadioButton_UpdateLayout,
  FlatRadioButton_UpdateViewState,
  CoreGroup_InvalidateArea,
  CoreGroup_FindSiblingView,
  CoreGroup_RestackBehind,
  CoreGroup_RestackTop,
  CoreGroup_Restack,
  CoreGroup_Remove,
  CoreGroup_Add,
EW_END_OF_CLASS( FlatRadioButton )

/* Initializer for the class 'Flat::HorzBar' */
void FlatHorzBar__Init( FlatHorzBar _this, XObject aLink, XHandle aArg )
{
  /* At first initialize the super class ... */
  CoreGroup__Init( &_this->_Super, aLink, aArg );

  /* ... then construct all embedded objects */
  ViewsRectangle__Init( &_this->Rectangle, &_this->_XObject, 0 );
  ViewsRectangle__Init( &_this->Bar, &_this->_XObject, 0 );
  ViewsText__Init( &_this->BarText, &_this->_XObject, 0 );
  EffectsInt32Effect__Init( &_this->MoveBarEffect, &_this->_XObject, 0 );

  /* Setup the VMT pointer */
  _this->_VMT = EW_CLASS( FlatHorzBar );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0011 );
  _this->MaxValue = 100;
  _this->CurrentValue = 50;
  CoreView_OnSetLayout((CoreView)&_this->Rectangle, CoreLayoutAlignToLeft | CoreLayoutAlignToRight 
  | CoreLayoutAlignToTop | CoreLayoutResizeHorz );
  CoreRectView__OnSetBounds( &_this->Rectangle, _Const0012 );
  ViewsRectangle_OnSetColor( &_this->Rectangle, FlatColorOfBody );
  CoreView_OnSetLayout((CoreView)&_this->Bar, CoreLayoutAlignToLeft | CoreLayoutAlignToRight 
  | CoreLayoutAlignToTop | CoreLayoutResizeHorz );
  CoreRectView__OnSetBounds( &_this->Bar, _Const0013 );
  ViewsRectangle_OnSetColor( &_this->Bar, FlatColorOfTheme );
  CoreView_OnSetLayout((CoreView)&_this->BarText, CoreLayoutAlignToBottom | CoreLayoutAlignToTop 
  );
  CoreRectView__OnSetBounds( &_this->BarText, _Const0014 );
  ViewsText_OnSetAutoSize( &_this->BarText, 1 );
  ViewsText_OnSetAlignment( &_this->BarText, ViewsTextAlignmentAlignHorzCenter | 
  ViewsTextAlignmentAlignVertCenter );
  ViewsText_OnSetString( &_this->BarText, EwLoadString( &_Const0015 ));
  ViewsText_OnSetColor( &_this->BarText, FlatColorOfTheme );
  EffectsEffect_OnSetNoOfCycles((EffectsEffect)&_this->MoveBarEffect, 1 );
  EffectsEffect_OnSetTiming((EffectsEffect)&_this->MoveBarEffect, EffectsTimingFastIn_EaseOut 
  );
  EffectsEffect_OnSetCycleDuration((EffectsEffect)&_this->MoveBarEffect, 500 );
  _this->ShowCurrent = 1;
  _this->Divisor = 1;
  _this->BarSize = 20;
  _this->BackColor = FlatColorOfBody;
  _this->BarColor = FlatColorOfTheme;
  _this->TextColor = FlatColorOfTheme;
  CoreGroup__Add( _this, ((CoreView)&_this->Rectangle ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->Bar ), 0 );
  CoreGroup__Add( _this, ((CoreView)&_this->BarText ), 0 );
  ViewsText_OnSetFont( &_this->BarText, EwLoadResource( &FlatFontS, ResourcesFont 
  ));
  _this->MoveBarEffect.Outlet = EwNewRef( _this, FlatHorzBar_OnGetbarPos, FlatHorzBar_OnSetbarPos 
  );
}

/* Re-Initializer for the class 'Flat::HorzBar' */
void FlatHorzBar__ReInit( FlatHorzBar _this )
{
  /* At first re-initialize the super class ... */
  CoreGroup__ReInit( &_this->_Super );

  /* ... then re-construct all embedded objects */
  ViewsRectangle__ReInit( &_this->Rectangle );
  ViewsRectangle__ReInit( &_this->Bar );
  ViewsText__ReInit( &_this->BarText );
  EffectsInt32Effect__ReInit( &_this->MoveBarEffect );
}

/* Finalizer method for the class 'Flat::HorzBar' */
void FlatHorzBar__Done( FlatHorzBar _this )
{
  /* Finalize this class */
  _this->_VMT = EW_CLASS( FlatHorzBar );

  /* Finalize all embedded objects */
  ViewsRectangle__Done( &_this->Rectangle );
  ViewsRectangle__Done( &_this->Bar );
  ViewsText__Done( &_this->BarText );
  EffectsInt32Effect__Done( &_this->MoveBarEffect );

  /* Don't forget to deinitialize the super class ... */
  CoreGroup__Done( &_this->_Super );
}

/* Garbage Collector method for the class 'Flat::HorzBar' */
void FlatHorzBar__Mark( FlatHorzBar _this )
{
  EwMarkObject( &_this->Rectangle );
  EwMarkObject( &_this->Bar );
  EwMarkObject( &_this->BarText );
  EwMarkObject( &_this->MoveBarEffect );

  /* Give the super class a chance to mark its objects and references */
  CoreGroup__Mark( &_this->_Super );
}

/* The method UpdateViewState() is invoked automatically after the state of the 
   component has been changed. This method can be overridden and filled with logic 
   to ensure the visual aspect of the component does reflect its current state. 
   For example, the 'enabled' state of the component can affect its colors (disabled 
   components may appear pale). In this case the logic of the method should modify 
   the respective color properties accordingly to the current 'enabled' state. 
   The current state of the component is passed as a set in the parameter aState. 
   It reflects the very basic component state like its visibility or the ability 
   to react to user inputs. Beside this common state, the method can also involve 
   any other variables used in the component as long as they reflect its current 
   state. For example, the toggle switch component can take in account its toggle 
   state 'on' or 'off' and change accordingly the location of the slider, etc.
   Usually, this method will be invoked automatically by the framework. Optionally 
   you can request its invocation by using the method @InvalidateViewState(). */
void FlatHorzBar_UpdateViewState( FlatHorzBar _this, XSet aState )
{
  XInt32 pos;

  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( aState );

  pos = 0;

  if ((( _this->MaxValue > _this->MinValue ) && ( _this->CurrentValue >= _this->MinValue 
      )) && ( _this->CurrentValue <= _this->MaxValue ))
  {
    pos = ( EwGetRectW( _this->Super2.Bounds ) * ( _this->CurrentValue - _this->MinValue 
    )) / ( _this->MaxValue - _this->MinValue );
  }

  if ( _this->ShowCurrent )
    ViewsText_OnSetString( &_this->BarText, FlatHorzBar_formatValueString( _this, 
    _this->CurrentValue ));

  ViewsText_OnSetVisible( &_this->BarText, _this->ShowCurrent );
  CoreRectView__OnSetBounds( &_this->Rectangle, EwSetRectH( _this->Rectangle.Super1.Bounds, 
  _this->BarSize ));
  CoreRectView__OnSetBounds( &_this->Bar, EwSetRectH( _this->Bar.Super1.Bounds, 
  _this->BarSize ));
  CoreRectView__OnSetBounds( &_this->BarText, EwSetRectOrigin( _this->BarText.Super1.Bounds, 
  EwSetPointY( _this->BarText.Super1.Bounds.Point1, _this->BarSize + 2 )));

  if ( pos != EwGetRectW( _this->Bar.Super1.Bounds ))
  {
    EffectsEffect_OnSetEnabled((EffectsEffect)&_this->MoveBarEffect, 0 );
    CoreRectView__OnSetBounds( &_this->Bar, EwSetRectW( _this->Bar.Super1.Bounds, 
    (( EwGetRectW( _this->Bar.Super1.Bounds ) * 9 ) + pos ) / 10 ));
    _this->MoveBarEffect.Value1 = EwGetRectW( _this->Bar.Super1.Bounds );
    _this->MoveBarEffect.Value2 = pos;
    EffectsEffect_OnSetEnabled((EffectsEffect)&_this->MoveBarEffect, 1 );
  }
}

/* 'C' function for method : 'Flat::HorzBar.OnSetMaxValue()' */
void FlatHorzBar_OnSetMaxValue( FlatHorzBar _this, XInt32 value )
{
  if ( _this->MaxValue == value )
    return;

  _this->MaxValue = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* 'C' function for method : 'Flat::HorzBar.OnSetCurrentValue()' */
void FlatHorzBar_OnSetCurrentValue( FlatHorzBar _this, XInt32 value )
{
  if ( value < _this->MinValue )
    value = _this->MinValue;

  if ( value > _this->MaxValue )
    value = _this->MaxValue;

  if ( _this->CurrentValue == value )
    return;

  _this->CurrentValue = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* 'C' function for method : 'Flat::HorzBar.OnSetbarPos()' */
void FlatHorzBar_OnSetbarPos( FlatHorzBar _this, XInt32 value )
{
  _this->barPos = value;
  CoreRectView__OnSetBounds( &_this->Bar, EwSetRectW( _this->Bar.Super1.Bounds, 
  value ));
  CoreRectView__OnSetBounds( &_this->BarText, EwSetRectOrigin( _this->BarText.Super1.Bounds, 
  EwSetPointX( _this->BarText.Super1.Bounds.Point1, value - ( EwGetRectW( _this->BarText.Super1.Bounds 
  ) / 2 ))));

  if ( _this->BarText.Super1.Bounds.Point1.X < 0 )
    CoreRectView__OnSetBounds( &_this->BarText, EwSetRectOrigin( _this->BarText.Super1.Bounds, 
    EwSetPointX( _this->BarText.Super1.Bounds.Point1, 0 )));

  if ( _this->BarText.Super1.Bounds.Point2.X > EwGetRectW( _this->Super2.Bounds 
      ))
    CoreRectView__OnSetBounds( &_this->BarText, EwSetRectOrigin( _this->BarText.Super1.Bounds, 
    EwSetPointX( _this->BarText.Super1.Bounds.Point1, EwGetRectW( _this->Super2.Bounds 
    ) - EwGetRectW( _this->BarText.Super1.Bounds ))));
}

/* 'C' function for method : 'Flat::HorzBar.OnSetShowCurrent()' */
void FlatHorzBar_OnSetShowCurrent( FlatHorzBar _this, XBool value )
{
  _this->ShowCurrent = value;
  CoreGroup_InvalidateViewState((CoreGroup)_this );
}

/* Method to format a string based on the given aValue and the current @DotPosition 
   and @Divisor. */
XString FlatHorzBar_formatValueString( FlatHorzBar _this, XInt32 aValue )
{
  XInt32 val = aValue / _this->Divisor;
  XInt32 abs = val;

  if ( val < 0 )
    abs = -val;

  if ( _this->DotPosition == 1 )
    return EwConcatString( EwConcatString( EwNewStringInt( val / 10, 1, 10 ), EwLoadString( 
      &_Const0016 )), EwNewStringInt( abs % 10, 1, 10 ));
  else
    if ( _this->DotPosition == 2 )
      return EwConcatString( EwConcatString( EwNewStringInt( val / 100, 1, 10 ), 
        EwLoadString( &_Const0016 )), EwNewStringInt( abs % 100, 2, 10 ));
    else
      if ( _this->DotPosition == 3 )
        return EwConcatString( EwConcatString( EwNewStringInt( val / 1000, 1, 10 
          ), EwLoadString( &_Const0016 )), EwNewStringInt( abs % 1000, 3, 10 ));

  return EwNewStringInt( val, 0, 10 );
}

/* 'C' function for method : 'Flat::HorzBar.OnSetBarColor()' */
void FlatHorzBar_OnSetBarColor( FlatHorzBar _this, XColor value )
{
  _this->BarColor = value;
  ViewsRectangle_OnSetColor( &_this->Bar, value );
}

/* Default onget method for the property 'barPos' */
XInt32 FlatHorzBar_OnGetbarPos( FlatHorzBar _this )
{
  return _this->barPos;
}

/* Variants derived from the class : 'Flat::HorzBar' */
EW_DEFINE_CLASS_VARIANTS( FlatHorzBar )
EW_END_OF_CLASS_VARIANTS( FlatHorzBar )

/* Virtual Method Table (VMT) for the class : 'Flat::HorzBar' */
EW_DEFINE_CLASS( FlatHorzBar, CoreGroup, "Flat::HorzBar" )
  CoreRectView_initLayoutContext,
  CoreView_GetRoot,
  CoreGroup_Draw,
  CoreView_HandleEvent,
  CoreGroup_CursorHitTest,
  CoreRectView_ArrangeView,
  CoreRectView_MoveView,
  CoreRectView_GetExtent,
  CoreGroup_ChangeViewState,
  CoreGroup_OnSetBounds,
  CoreGroup_OnSetFocus,
  CoreGroup_OnSetBuffered,
  CoreGroup_OnSetOpacity,
  CoreGroup_DispatchEvent,
  CoreGroup_BroadcastEvent,
  CoreGroup_UpdateLayout,
  FlatHorzBar_UpdateViewState,
  CoreGroup_InvalidateArea,
  CoreGroup_FindSiblingView,
  CoreGroup_RestackBehind,
  CoreGroup_RestackTop,
  CoreGroup_Restack,
  CoreGroup_Remove,
  CoreGroup_Add,
EW_END_OF_CLASS( FlatHorzBar )

/* Embedded Wizard */
